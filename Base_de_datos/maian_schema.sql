--
-- PostgreSQL database dump
--

\restrict E4NKinzsbtP7H3JEVTATchws3jOjpbVJmwxagNRKhnR9A5MYKA4fSEEnPDP3t54

-- Dumped from database version 17.5 (1b53132)
-- Dumped by pg_dump version 17.6

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET transaction_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: uuid-ossp; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA public;


--
-- Name: EXTENSION "uuid-ossp"; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION "uuid-ossp" IS 'generate universally unique identifiers (UUIDs)';


--
-- Name: AddressType; Type: TYPE; Schema: public; Owner: neondb_owner
--

CREATE TYPE public."AddressType" AS ENUM (
    'DELIVERY',
    'INVOICE',
    'STORE'
);


ALTER TYPE public."AddressType" OWNER TO neondb_owner;

--
-- Name: DeliveryStatus; Type: TYPE; Schema: public; Owner: neondb_owner
--

CREATE TYPE public."DeliveryStatus" AS ENUM (
    'PENDING',
    'IN_PROGRESS',
    'COMPLETED'
);


ALTER TYPE public."DeliveryStatus" OWNER TO neondb_owner;

--
-- Name: UserRole; Type: TYPE; Schema: public; Owner: neondb_owner
--

CREATE TYPE public."UserRole" AS ENUM (
    'WHOLESALER',
    'RETAILER',
    'SUPPORT',
    'DELIVERY',
    'WAREHOUSE',
    'ADMIN',
    'SUPERADMIN'
);


ALTER TYPE public."UserRole" OWNER TO neondb_owner;

--
-- Name: UserStatus; Type: TYPE; Schema: public; Owner: neondb_owner
--

CREATE TYPE public."UserStatus" AS ENUM (
    'INACTIVE',
    ' ACTIVE',
    'BANNED'
);


ALTER TYPE public."UserStatus" OWNER TO neondb_owner;

--
-- Name: generate_user_id(); Type: FUNCTION; Schema: public; Owner: neondb_owner
--

CREATE FUNCTION public.generate_user_id() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE 
acronym TEXT;
seq_num INT;
BEGIN
CASE NEW.role
WHEN 'WHOLESALER' THEN
acronym := 'WHO';
seq_num := nextval('seq_wholesaler_id');
WHEN 'RETAILER' then
acronym := 'RET';
seq_num := nextval('seq_retailer_id');
WHEN 'SUPPORT' then
acronym := 'SUP';
seq_num := nextval('seq_support_id');
WHEN 'DELIVERY' then
acronym := 'DEL';
seq_num := nextval('seq_deliveryman_id');
WHEN 'WAREHOUSE' THEN
acronym := 'WAR';
seq_num := nextval('seq_warehouse_id');
ELSE
RAISE EXCEPTION 'Unknown role %', NEW.role;
END CASE;
NEW.user_id := acronym || LPAD(seq_num::TEXT, 3, '0');

RETURN NEW;
END;
$$;


ALTER FUNCTION public.generate_user_id() OWNER TO neondb_owner;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: cart_details; Type: TABLE; Schema: public; Owner: neondb_owner
--

CREATE TABLE public.cart_details (
    id bigint NOT NULL,
    cart_id bigint NOT NULL,
    variant_products_id bigint,
    quantity smallint NOT NULL,
    created_at timestamp without time zone DEFAULT (now() AT TIME ZONE 'utc'::text) NOT NULL,
    CONSTRAINT cart_details_quantity_check CHECK ((quantity > 0))
);


ALTER TABLE public.cart_details OWNER TO neondb_owner;

--
-- Name: TABLE cart_details; Type: COMMENT; Schema: public; Owner: neondb_owner
--

COMMENT ON TABLE public.cart_details IS '购物项';


--
-- Name: COLUMN cart_details.quantity; Type: COMMENT; Schema: public; Owner: neondb_owner
--

COMMENT ON COLUMN public.cart_details.quantity IS '最大数量32,767';


--
-- Name: cart_details_id_seq; Type: SEQUENCE; Schema: public; Owner: neondb_owner
--

ALTER TABLE public.cart_details ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.cart_details_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: carts; Type: TABLE; Schema: public; Owner: neondb_owner
--

CREATE TABLE public.carts (
    id bigint NOT NULL,
    user_id uuid NOT NULL,
    created_at timestamp without time zone DEFAULT (now() AT TIME ZONE 'utc'::text) NOT NULL
);


ALTER TABLE public.carts OWNER TO neondb_owner;

--
-- Name: TABLE carts; Type: COMMENT; Schema: public; Owner: neondb_owner
--

COMMENT ON TABLE public.carts IS 'Carrito de compra / 购物车';


--
-- Name: cart_id_seq; Type: SEQUENCE; Schema: public; Owner: neondb_owner
--

ALTER TABLE public.carts ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.cart_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: categories; Type: TABLE; Schema: public; Owner: neondb_owner
--

CREATE TABLE public.categories (
    id bigint NOT NULL,
    user_id uuid,
    name character varying(50) NOT NULL,
    iva numeric(5,2),
    parent_id bigint,
    created_at timestamp without time zone DEFAULT (now() AT TIME ZONE 'utc'::text) NOT NULL
);


ALTER TABLE public.categories OWNER TO neondb_owner;

--
-- Name: TABLE categories; Type: COMMENT; Schema: public; Owner: neondb_owner
--

COMMENT ON TABLE public.categories IS '类别分为公共和私人 / categorías son públicos o privados';


--
-- Name: COLUMN categories.user_id; Type: COMMENT; Schema: public; Owner: neondb_owner
--

COMMENT ON COLUMN public.categories.user_id IS '如果未空则代表为公共';


--
-- Name: COLUMN categories.name; Type: COMMENT; Schema: public; Owner: neondb_owner
--

COMMENT ON COLUMN public.categories.name IS '名字';


--
-- Name: categories_id_seq; Type: SEQUENCE; Schema: public; Owner: neondb_owner
--

ALTER TABLE public.categories ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.categories_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: chat_panels; Type: TABLE; Schema: public; Owner: neondb_owner
--

CREATE TABLE public.chat_panels (
    id bigint NOT NULL,
    name character varying(50) NOT NULL,
    created_at timestamp without time zone DEFAULT (now() AT TIME ZONE 'utc'::text) NOT NULL
);


ALTER TABLE public.chat_panels OWNER TO neondb_owner;

--
-- Name: TABLE chat_panels; Type: COMMENT; Schema: public; Owner: neondb_owner
--

COMMENT ON TABLE public.chat_panels IS '聊天界面或会话 / Sesión de Chat';


--
-- Name: chat_panel_id_seq; Type: SEQUENCE; Schema: public; Owner: neondb_owner
--

ALTER TABLE public.chat_panels ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.chat_panel_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: chat_participants; Type: TABLE; Schema: public; Owner: neondb_owner
--

CREATE TABLE public.chat_participants (
    user_id uuid NOT NULL,
    chat_panel_id bigint NOT NULL,
    created_at timestamp without time zone DEFAULT (now() AT TIME ZONE 'utc'::text)
);


ALTER TABLE public.chat_participants OWNER TO neondb_owner;

--
-- Name: TABLE chat_participants; Type: COMMENT; Schema: public; Owner: neondb_owner
--

COMMENT ON TABLE public.chat_participants IS '连接用户和聊天会话 / Conectar usuarios y charlas';


--
-- Name: configurations; Type: TABLE; Schema: public; Owner: neondb_owner
--

CREATE TABLE public.configurations (
    id bigint NOT NULL,
    user_id uuid NOT NULL,
    language character varying(10) DEFAULT 'en'::character varying NOT NULL,
    timezone character varying(32) DEFAULT 'UTC'::character varying NOT NULL
);


ALTER TABLE public.configurations OWNER TO neondb_owner;

--
-- Name: COLUMN configurations.language; Type: COMMENT; Schema: public; Owner: neondb_owner
--

COMMENT ON COLUMN public.configurations.language IS 'BCP-47 Code';


--
-- Name: COLUMN configurations.timezone; Type: COMMENT; Schema: public; Owner: neondb_owner
--

COMMENT ON COLUMN public.configurations.timezone IS 'IANA时区名字';


--
-- Name: configurations_id_seq; Type: SEQUENCE; Schema: public; Owner: neondb_owner
--

ALTER TABLE public.configurations ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.configurations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: deliveries; Type: TABLE; Schema: public; Owner: neondb_owner
--

CREATE TABLE public.deliveries (
    id bigint NOT NULL,
    order_id bigint NOT NULL,
    delivery_person uuid NOT NULL,
    status public."DeliveryStatus" DEFAULT 'PENDING'::public."DeliveryStatus" NOT NULL,
    start_time timestamp without time zone DEFAULT (now() AT TIME ZONE 'utc'::text) NOT NULL,
    end_time timestamp without time zone,
    notes text NOT NULL,
    created_at timestamp without time zone DEFAULT (now() AT TIME ZONE 'utc'::text) NOT NULL,
    updated_at timestamp without time zone,
    latitude double precision NOT NULL,
    longitude double precision NOT NULL
);


ALTER TABLE public.deliveries OWNER TO neondb_owner;

--
-- Name: TABLE deliveries; Type: COMMENT; Schema: public; Owner: neondb_owner
--

COMMENT ON TABLE public.deliveries IS '送货表';


--
-- Name: COLUMN deliveries.status; Type: COMMENT; Schema: public; Owner: neondb_owner
--

COMMENT ON COLUMN public.deliveries.status IS '0=等待配送， 1=正在配送， 2=配送完成';


--
-- Name: COLUMN deliveries.start_time; Type: COMMENT; Schema: public; Owner: neondb_owner
--

COMMENT ON COLUMN public.deliveries.start_time IS '开始时间';


--
-- Name: COLUMN deliveries.end_time; Type: COMMENT; Schema: public; Owner: neondb_owner
--

COMMENT ON COLUMN public.deliveries.end_time IS '结束时间';


--
-- Name: deliveries_id_seq; Type: SEQUENCE; Schema: public; Owner: neondb_owner
--

ALTER TABLE public.deliveries ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.deliveries_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: delivery_timeline; Type: TABLE; Schema: public; Owner: neondb_owner
--

CREATE TABLE public.delivery_timeline (
    id bigint NOT NULL,
    delivery_id bigint,
    status public."DeliveryStatus" NOT NULL,
    notes text,
    created_at timestamp without time zone DEFAULT (now() AT TIME ZONE 'utc'::text) NOT NULL,
    latitude double precision NOT NULL,
    longitude double precision NOT NULL
);


ALTER TABLE public.delivery_timeline OWNER TO neondb_owner;

--
-- Name: TABLE delivery_timeline; Type: COMMENT; Schema: public; Owner: neondb_owner
--

COMMENT ON TABLE public.delivery_timeline IS '配送时间线';


--
-- Name: COLUMN delivery_timeline.status; Type: COMMENT; Schema: public; Owner: neondb_owner
--

COMMENT ON COLUMN public.delivery_timeline.status IS '0=等待配送， 1=正在配送， 2=配送完成';


--
-- Name: delivery_timeline_id_seq; Type: SEQUENCE; Schema: public; Owner: neondb_owner
--

ALTER TABLE public.delivery_timeline ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.delivery_timeline_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: direction; Type: TABLE; Schema: public; Owner: neondb_owner
--

CREATE TABLE public.direction (
    id bigint NOT NULL,
    user_id uuid NOT NULL,
    type public."AddressType" NOT NULL,
    direction character varying(200) NOT NULL,
    city character varying(50) NOT NULL,
    province character varying(80) NOT NULL,
    zip_code character varying(10) NOT NULL,
    latitude double precision NOT NULL,
    longitude double precision NOT NULL,
    created_at timestamp without time zone DEFAULT (now() AT TIME ZONE 'utc'::text) NOT NULL,
    updated_at timestamp without time zone
);


ALTER TABLE public.direction OWNER TO neondb_owner;

--
-- Name: TABLE direction; Type: COMMENT; Schema: public; Owner: neondb_owner
--

COMMENT ON TABLE public.direction IS '储存位置表';


--
-- Name: COLUMN direction.type; Type: COMMENT; Schema: public; Owner: neondb_owner
--

COMMENT ON COLUMN public.direction.type IS '0=送货地址（可以有多个，如果没有则默认用商店地址， 1=发票地址，2=商店地址（批发商和零售商）';


--
-- Name: direcction_id_seq; Type: SEQUENCE; Schema: public; Owner: neondb_owner
--

ALTER TABLE public.direction ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.direcction_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: discounts; Type: TABLE; Schema: public; Owner: neondb_owner
--

CREATE TABLE public.discounts (
    id bigint NOT NULL,
    user_id uuid NOT NULL,
    name character varying NOT NULL,
    type_value jsonb NOT NULL,
    applies_to_all boolean DEFAULT false NOT NULL,
    start_date date NOT NULL,
    end_date date NOT NULL,
    status smallint DEFAULT '1'::smallint NOT NULL,
    created_at timestamp without time zone DEFAULT (now() AT TIME ZONE 'utc'::text) NOT NULL
);


ALTER TABLE public.discounts OWNER TO neondb_owner;

--
-- Name: TABLE discounts; Type: COMMENT; Schema: public; Owner: neondb_owner
--

COMMENT ON TABLE public.discounts IS '折扣';


--
-- Name: COLUMN discounts.type_value; Type: COMMENT; Schema: public; Owner: neondb_owner
--

COMMENT ON COLUMN public.discounts.type_value IS '先做：减百分比，满金额减少固定金额，满金额减少百分比';


--
-- Name: COLUMN discounts.applies_to_all; Type: COMMENT; Schema: public; Owner: neondb_owner
--

COMMENT ON COLUMN public.discounts.applies_to_all IS '是否给其名下所有的产品';


--
-- Name: discounts_id_seq; Type: SEQUENCE; Schema: public; Owner: neondb_owner
--

ALTER TABLE public.discounts ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.discounts_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: files; Type: TABLE; Schema: public; Owner: neondb_owner
--

CREATE TABLE public.files (
    id bigint NOT NULL,
    file_name character varying NOT NULL,
    file_hash character varying(64) NOT NULL,
    mime_type character varying(128) NOT NULL,
    file_size bigint NOT NULL,
    url text NOT NULL,
    created_at timestamp without time zone DEFAULT (now() AT TIME ZONE 'utc'::text) NOT NULL,
    uploaded_by bigint DEFAULT '-1'::bigint NOT NULL,
    to_delete boolean DEFAULT false NOT NULL,
    CONSTRAINT files_file_name_check CHECK (((file_name)::text ~* '^[^\\/:\*\?"<>\|]{1,255}\.[a-z0-9]+$'::text))
);


ALTER TABLE public.files OWNER TO neondb_owner;

--
-- Name: TABLE files; Type: COMMENT; Schema: public; Owner: neondb_owner
--

COMMENT ON TABLE public.files IS '保存文件url (储存在云端) / guardar url de los archivos';


--
-- Name: files_id_seq; Type: SEQUENCE; Schema: public; Owner: neondb_owner
--

ALTER TABLE public.files ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.files_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: message_files; Type: TABLE; Schema: public; Owner: neondb_owner
--

CREATE TABLE public.message_files (
    id bigint NOT NULL,
    message_id bigint NOT NULL,
    file_id bigint NOT NULL,
    sort smallint NOT NULL
);


ALTER TABLE public.message_files OWNER TO neondb_owner;

--
-- Name: TABLE message_files; Type: COMMENT; Schema: public; Owner: neondb_owner
--

COMMENT ON TABLE public.message_files IS '消息文件，音频，视频，视频 / los archivos de los mensajes';


--
-- Name: message_files_id_seq; Type: SEQUENCE; Schema: public; Owner: neondb_owner
--

ALTER TABLE public.message_files ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.message_files_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: messages; Type: TABLE; Schema: public; Owner: neondb_owner
--

CREATE TABLE public.messages (
    id bigint NOT NULL,
    chat_panel_id bigint NOT NULL,
    sender_id uuid DEFAULT '00000000-0000-0000-0000-000000000000'::uuid,
    reply_to bigint DEFAULT '-1'::bigint,
    content text,
    created_at timestamp without time zone DEFAULT (now() AT TIME ZONE 'utc'::text) NOT NULL,
    is_read boolean DEFAULT false NOT NULL
);


ALTER TABLE public.messages OWNER TO neondb_owner;

--
-- Name: TABLE messages; Type: COMMENT; Schema: public; Owner: neondb_owner
--

COMMENT ON TABLE public.messages IS '聊天信息 / mensajes de chat';


--
-- Name: COLUMN messages.sender_id; Type: COMMENT; Schema: public; Owner: neondb_owner
--

COMMENT ON COLUMN public.messages.sender_id IS '0代表发送者被删除都是还有人看消息所以保留消息';


--
-- Name: COLUMN messages.reply_to; Type: COMMENT; Schema: public; Owner: neondb_owner
--

COMMENT ON COLUMN public.messages.reply_to IS '-1代表引用的消息被删除';


--
-- Name: messages_id_seq; Type: SEQUENCE; Schema: public; Owner: neondb_owner
--

ALTER TABLE public.messages ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.messages_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: notifications; Type: TABLE; Schema: public; Owner: neondb_owner
--

CREATE TABLE public.notifications (
    id bigint NOT NULL,
    user_id uuid NOT NULL,
    title character varying(100) NOT NULL,
    message text NOT NULL,
    type smallint NOT NULL,
    is_read boolean DEFAULT false NOT NULL,
    click_action character varying(255) NOT NULL,
    created_at timestamp without time zone DEFAULT (now() AT TIME ZONE 'utc'::text) NOT NULL
);


ALTER TABLE public.notifications OWNER TO neondb_owner;

--
-- Name: COLUMN notifications.type; Type: COMMENT; Schema: public; Owner: neondb_owner
--

COMMENT ON COLUMN public.notifications.type IS '还不确定，应该有多种比如消息通知，减价，库存。。。';


--
-- Name: COLUMN notifications.click_action; Type: COMMENT; Schema: public; Owner: neondb_owner
--

COMMENT ON COLUMN public.notifications.click_action IS '导航到位置';


--
-- Name: notifications_id_seq; Type: SEQUENCE; Schema: public; Owner: neondb_owner
--

ALTER TABLE public.notifications ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.notifications_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: order_details; Type: TABLE; Schema: public; Owner: neondb_owner
--

CREATE TABLE public.order_details (
    id bigint NOT NULL,
    order_id bigint NOT NULL,
    product_code character varying(50) NOT NULL,
    variant_product_id bigint NOT NULL,
    quantity smallint NOT NULL,
    unit_price numeric(10,2) NOT NULL,
    unit_price_iva numeric(10,2) NOT NULL,
    subtotal numeric(12,2) NOT NULL,
    iva numeric(10,2) NOT NULL,
    discount_applied numeric(10,2) NOT NULL,
    attributes jsonb NOT NULL,
    created_at timestamp without time zone DEFAULT (now() AT TIME ZONE 'utc'::text) NOT NULL
);


ALTER TABLE public.order_details OWNER TO neondb_owner;

--
-- Name: order_details_id_seq; Type: SEQUENCE; Schema: public; Owner: neondb_owner
--

ALTER TABLE public.order_details ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.order_details_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: orders; Type: TABLE; Schema: public; Owner: neondb_owner
--

CREATE TABLE public.orders (
    id bigint NOT NULL,
    retailer_id uuid,
    wholesaler_id uuid,
    status smallint DEFAULT '1'::smallint NOT NULL,
    payment_method smallint NOT NULL,
    shipping_address bigint,
    notes character varying(500),
    discount_total numeric(12,2) NOT NULL,
    subtotal numeric(12,2) NOT NULL,
    total numeric(12,2) NOT NULL,
    iva_total numeric(12,2) NOT NULL,
    discount_log jsonb NOT NULL,
    estimated_date timestamp without time zone,
    created_at timestamp without time zone DEFAULT (now() AT TIME ZONE 'utc'::text) NOT NULL,
    updated_at timestamp without time zone DEFAULT (now() AT TIME ZONE 'utc'::text)
);


ALTER TABLE public.orders OWNER TO neondb_owner;

--
-- Name: orders_id_seq; Type: SEQUENCE; Schema: public; Owner: neondb_owner
--

ALTER TABLE public.orders ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.orders_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: products; Type: TABLE; Schema: public; Owner: neondb_owner
--

CREATE TABLE public.products (
    id bigint NOT NULL,
    user_id uuid NOT NULL,
    name character varying(50) NOT NULL,
    title character varying(100),
    description text,
    iva numeric(5,2) NOT NULL,
    category_id bigint NOT NULL,
    status smallint DEFAULT '1'::smallint NOT NULL,
    created_at timestamp without time zone DEFAULT (now() AT TIME ZONE 'utc'::text) NOT NULL,
    product_code character varying(50) NOT NULL
);


ALTER TABLE public.products OWNER TO neondb_owner;

--
-- Name: TABLE products; Type: COMMENT; Schema: public; Owner: neondb_owner
--

COMMENT ON TABLE public.products IS '产品基础表 / valor basica de productos';


--
-- Name: COLUMN products.status; Type: COMMENT; Schema: public; Owner: neondb_owner
--

COMMENT ON COLUMN public.products.status IS '1=activo, 0=desactivo';


--
-- Name: products_files; Type: TABLE; Schema: public; Owner: neondb_owner
--

CREATE TABLE public.products_files (
    id bigint NOT NULL,
    product_id bigint NOT NULL,
    file_id bigint NOT NULL,
    sort smallint NOT NULL
);


ALTER TABLE public.products_files OWNER TO neondb_owner;

--
-- Name: TABLE products_files; Type: COMMENT; Schema: public; Owner: neondb_owner
--

COMMENT ON TABLE public.products_files IS '产品的宣传图什么的';


--
-- Name: products_files_id_seq; Type: SEQUENCE; Schema: public; Owner: neondb_owner
--

ALTER TABLE public.products_files ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.products_files_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: products_id_seq; Type: SEQUENCE; Schema: public; Owner: neondb_owner
--

ALTER TABLE public.products ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.products_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: seq_deliveryman_id; Type: SEQUENCE; Schema: public; Owner: neondb_owner
--

CREATE SEQUENCE public.seq_deliveryman_id
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.seq_deliveryman_id OWNER TO neondb_owner;

--
-- Name: seq_retailer_id; Type: SEQUENCE; Schema: public; Owner: neondb_owner
--

CREATE SEQUENCE public.seq_retailer_id
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.seq_retailer_id OWNER TO neondb_owner;

--
-- Name: seq_support_id; Type: SEQUENCE; Schema: public; Owner: neondb_owner
--

CREATE SEQUENCE public.seq_support_id
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.seq_support_id OWNER TO neondb_owner;

--
-- Name: seq_warehouse_id; Type: SEQUENCE; Schema: public; Owner: neondb_owner
--

CREATE SEQUENCE public.seq_warehouse_id
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.seq_warehouse_id OWNER TO neondb_owner;

--
-- Name: seq_wholesaler_id; Type: SEQUENCE; Schema: public; Owner: neondb_owner
--

CREATE SEQUENCE public.seq_wholesaler_id
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.seq_wholesaler_id OWNER TO neondb_owner;

--
-- Name: user_sessions; Type: TABLE; Schema: public; Owner: neondb_owner
--

CREATE TABLE public.user_sessions (
    session_id uuid DEFAULT public.uuid_generate_v4() NOT NULL,
    user_id uuid NOT NULL,
    device_name character varying(150) NOT NULL,
    device_finger character varying(255) NOT NULL,
    user_agent text NOT NULL,
    revoked boolean DEFAULT false NOT NULL,
    last_ip character varying(50) NOT NULL,
    access_token text,
    refresh_token text,
    created_at timestamp without time zone DEFAULT (now() AT TIME ZONE 'utc'::text) NOT NULL,
    last_active timestamp without time zone DEFAULT (now() AT TIME ZONE 'utc'::text) NOT NULL
);


ALTER TABLE public.user_sessions OWNER TO neondb_owner;

--
-- Name: users; Type: TABLE; Schema: public; Owner: neondb_owner
--

CREATE TABLE public.users (
    id uuid DEFAULT public.uuid_generate_v4() NOT NULL,
    user_id text,
    first_name character varying(50),
    last_name character varying(60),
    username character varying(30),
    password text NOT NULL,
    email character varying(255),
    telephone character varying(15),
    status public."UserStatus" DEFAULT 'INACTIVE'::public."UserStatus" NOT NULL,
    profile jsonb,
    created_at timestamp without time zone DEFAULT (now() AT TIME ZONE 'utc'::text) NOT NULL,
    updated_at timestamp without time zone DEFAULT (now() AT TIME ZONE 'utc'::text),
    role public."UserRole" NOT NULL,
    cif character varying(9)
);


ALTER TABLE public.users OWNER TO neondb_owner;

--
-- Name: TABLE users; Type: COMMENT; Schema: public; Owner: neondb_owner
--

COMMENT ON TABLE public.users IS '用户表';


--
-- Name: COLUMN users.status; Type: COMMENT; Schema: public; Owner: neondb_owner
--

COMMENT ON COLUMN public.users.status IS '0 → inactive  临时账号，未验证则 1 → active    2 → banned  因为违反用户协议而封锁';


--
-- Name: COLUMN users.role; Type: COMMENT; Schema: public; Owner: neondb_owner
--

COMMENT ON COLUMN public.users.role IS '0 → wholesaler  批发商即本平台的商店，1 → retailer  零售商 2 → support  客服  3 → 送货员  5 → 货物管理员';


--
-- Name: COLUMN users.cif; Type: COMMENT; Schema: public; Owner: neondb_owner
--

COMMENT ON COLUMN public.users.cif IS '税号';


--
-- Name: variant_products; Type: TABLE; Schema: public; Owner: neondb_owner
--

CREATE TABLE public.variant_products (
    id bigint NOT NULL,
    created_at timestamp without time zone DEFAULT (now() AT TIME ZONE 'utc'::text) NOT NULL,
    product_id bigint NOT NULL,
    type_sale smallint NOT NULL,
    price numeric(10,2) NOT NULL,
    price_iva numeric(10,2) NOT NULL,
    stock integer NOT NULL,
    sort smallint NOT NULL,
    attributes jsonb,
    status smallint NOT NULL,
    iva numeric(5,2) NOT NULL,
    product_code character varying(50) NOT NULL
);


ALTER TABLE public.variant_products OWNER TO neondb_owner;

--
-- Name: TABLE variant_products; Type: COMMENT; Schema: public; Owner: neondb_owner
--

COMMENT ON TABLE public.variant_products IS '变体销售配置';


--
-- Name: COLUMN variant_products.status; Type: COMMENT; Schema: public; Owner: neondb_owner
--

COMMENT ON COLUMN public.variant_products.status IS '1=activado,0=desactivado';


--
-- Name: variant_products_id_seq; Type: SEQUENCE; Schema: public; Owner: neondb_owner
--

ALTER TABLE public.variant_products ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.variant_products_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: cart_details cart_details_pkey; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.cart_details
    ADD CONSTRAINT cart_details_pkey PRIMARY KEY (id);


--
-- Name: carts cart_pkey; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.carts
    ADD CONSTRAINT cart_pkey PRIMARY KEY (id);


--
-- Name: categories categories_pkey; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.categories
    ADD CONSTRAINT categories_pkey PRIMARY KEY (id);


--
-- Name: chat_panels chat_panel_pkey; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.chat_panels
    ADD CONSTRAINT chat_panel_pkey PRIMARY KEY (id);


--
-- Name: chat_participants chat_participants_pkey; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.chat_participants
    ADD CONSTRAINT chat_participants_pkey PRIMARY KEY (chat_panel_id, user_id);


--
-- Name: configurations configurations_pkey; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.configurations
    ADD CONSTRAINT configurations_pkey PRIMARY KEY (id);


--
-- Name: deliveries deliveries_pkey; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.deliveries
    ADD CONSTRAINT deliveries_pkey PRIMARY KEY (id);


--
-- Name: delivery_timeline delivery_timeline_pkey; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.delivery_timeline
    ADD CONSTRAINT delivery_timeline_pkey PRIMARY KEY (id);


--
-- Name: direction direcction_pkey; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.direction
    ADD CONSTRAINT direcction_pkey PRIMARY KEY (id);


--
-- Name: discounts discounts_pkey; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.discounts
    ADD CONSTRAINT discounts_pkey PRIMARY KEY (id);


--
-- Name: files files_file_hash_key; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.files
    ADD CONSTRAINT files_file_hash_key UNIQUE (file_hash);


--
-- Name: files files_pkey; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.files
    ADD CONSTRAINT files_pkey PRIMARY KEY (id);


--
-- Name: message_files message_files_pkey; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.message_files
    ADD CONSTRAINT message_files_pkey PRIMARY KEY (id);


--
-- Name: messages messages_pkey; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.messages
    ADD CONSTRAINT messages_pkey PRIMARY KEY (id);


--
-- Name: notifications notifications_pkey; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.notifications
    ADD CONSTRAINT notifications_pkey PRIMARY KEY (id);


--
-- Name: order_details order_details_pkey; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.order_details
    ADD CONSTRAINT order_details_pkey PRIMARY KEY (id);


--
-- Name: orders orders_pkey; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.orders
    ADD CONSTRAINT orders_pkey PRIMARY KEY (id);


--
-- Name: products_files products_files_pkey; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.products_files
    ADD CONSTRAINT products_files_pkey PRIMARY KEY (id);


--
-- Name: products products_pkey; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.products
    ADD CONSTRAINT products_pkey PRIMARY KEY (id);


--
-- Name: user_sessions unique_device_finger_user; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.user_sessions
    ADD CONSTRAINT unique_device_finger_user UNIQUE (user_id, device_finger);


--
-- Name: user_sessions user_sessions_pkey; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.user_sessions
    ADD CONSTRAINT user_sessions_pkey PRIMARY KEY (session_id);


--
-- Name: users users_email_key; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_email_key UNIQUE (email);


--
-- Name: users users_pkey; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_pkey PRIMARY KEY (id);


--
-- Name: users users_telephone_key; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_telephone_key UNIQUE (telephone);


--
-- Name: users users_username_key; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_username_key UNIQUE (username);


--
-- Name: variant_products variant_products_pkey; Type: CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.variant_products
    ADD CONSTRAINT variant_products_pkey PRIMARY KEY (id);


--
-- Name: cart_details cart_details_cart_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.cart_details
    ADD CONSTRAINT cart_details_cart_id_fkey FOREIGN KEY (cart_id) REFERENCES public.carts(id) ON DELETE CASCADE;


--
-- Name: cart_details cart_details_variant_products_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.cart_details
    ADD CONSTRAINT cart_details_variant_products_id_fkey FOREIGN KEY (variant_products_id) REFERENCES public.variant_products(id) ON DELETE CASCADE;


--
-- Name: carts carts_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.carts
    ADD CONSTRAINT carts_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id) ON DELETE CASCADE;


--
-- Name: categories categories_parent_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.categories
    ADD CONSTRAINT categories_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES public.categories(id) ON DELETE CASCADE;


--
-- Name: categories categories_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.categories
    ADD CONSTRAINT categories_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id) ON DELETE CASCADE;


--
-- Name: chat_participants chat_participants_chat_panel_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.chat_participants
    ADD CONSTRAINT chat_participants_chat_panel_id_fkey FOREIGN KEY (chat_panel_id) REFERENCES public.chat_panels(id) ON DELETE CASCADE;


--
-- Name: chat_participants chat_participants_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.chat_participants
    ADD CONSTRAINT chat_participants_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id) ON DELETE CASCADE;


--
-- Name: configurations configurations_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.configurations
    ADD CONSTRAINT configurations_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id) ON DELETE CASCADE;


--
-- Name: deliveries deliveries_delivery_person_fkey; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.deliveries
    ADD CONSTRAINT deliveries_delivery_person_fkey FOREIGN KEY (delivery_person) REFERENCES public.users(id) ON DELETE SET NULL;


--
-- Name: delivery_timeline delivery_timeline_delivery_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.delivery_timeline
    ADD CONSTRAINT delivery_timeline_delivery_id_fkey FOREIGN KEY (delivery_id) REFERENCES public.deliveries(id) ON DELETE CASCADE;


--
-- Name: direction direcction_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.direction
    ADD CONSTRAINT direcction_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id) ON DELETE CASCADE;


--
-- Name: discounts discounts_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.discounts
    ADD CONSTRAINT discounts_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id) ON DELETE CASCADE;


--
-- Name: user_sessions fk_user_sessions_user_id; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.user_sessions
    ADD CONSTRAINT fk_user_sessions_user_id FOREIGN KEY (user_id) REFERENCES public.users(id) ON DELETE CASCADE;


--
-- Name: message_files message_files_file_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.message_files
    ADD CONSTRAINT message_files_file_id_fkey FOREIGN KEY (file_id) REFERENCES public.files(id) ON DELETE CASCADE;


--
-- Name: message_files message_files_message_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.message_files
    ADD CONSTRAINT message_files_message_id_fkey FOREIGN KEY (message_id) REFERENCES public.messages(id) ON DELETE CASCADE;


--
-- Name: messages messages_chat_panel_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.messages
    ADD CONSTRAINT messages_chat_panel_id_fkey FOREIGN KEY (chat_panel_id) REFERENCES public.chat_panels(id) ON DELETE CASCADE;


--
-- Name: messages messages_reply_to_fkey; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.messages
    ADD CONSTRAINT messages_reply_to_fkey FOREIGN KEY (reply_to) REFERENCES public.messages(id) ON DELETE SET DEFAULT;


--
-- Name: messages messages_sender_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.messages
    ADD CONSTRAINT messages_sender_id_fkey FOREIGN KEY (sender_id) REFERENCES public.users(id) ON DELETE SET DEFAULT;


--
-- Name: notifications notifications_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.notifications
    ADD CONSTRAINT notifications_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id) ON DELETE CASCADE;


--
-- Name: order_details order_details_order_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.order_details
    ADD CONSTRAINT order_details_order_id_fkey FOREIGN KEY (order_id) REFERENCES public.orders(id) ON DELETE CASCADE;


--
-- Name: order_details order_details_variant_product_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.order_details
    ADD CONSTRAINT order_details_variant_product_id_fkey FOREIGN KEY (variant_product_id) REFERENCES public.variant_products(id) ON DELETE CASCADE;


--
-- Name: orders orders_retailer_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.orders
    ADD CONSTRAINT orders_retailer_id_fkey FOREIGN KEY (retailer_id) REFERENCES public.users(id) ON DELETE SET NULL;


--
-- Name: orders orders_shipping_address_fkey; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.orders
    ADD CONSTRAINT orders_shipping_address_fkey FOREIGN KEY (shipping_address) REFERENCES public.direction(id) ON DELETE SET NULL;


--
-- Name: orders orders_wholesaler_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.orders
    ADD CONSTRAINT orders_wholesaler_id_fkey FOREIGN KEY (wholesaler_id) REFERENCES public.users(id) ON DELETE SET NULL;


--
-- Name: products products_category_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.products
    ADD CONSTRAINT products_category_id_fkey FOREIGN KEY (category_id) REFERENCES public.categories(id);


--
-- Name: products_files products_files_file_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.products_files
    ADD CONSTRAINT products_files_file_id_fkey FOREIGN KEY (file_id) REFERENCES public.files(id) ON DELETE CASCADE;


--
-- Name: products_files products_files_product_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.products_files
    ADD CONSTRAINT products_files_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(id) ON DELETE CASCADE;


--
-- Name: products products_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.products
    ADD CONSTRAINT products_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id) ON DELETE CASCADE;


--
-- Name: variant_products variant_products_product_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: neondb_owner
--

ALTER TABLE ONLY public.variant_products
    ADD CONSTRAINT variant_products_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(id) ON DELETE CASCADE;


--
-- Name: cart_details; Type: ROW SECURITY; Schema: public; Owner: neondb_owner
--

ALTER TABLE public.cart_details ENABLE ROW LEVEL SECURITY;

--
-- Name: carts; Type: ROW SECURITY; Schema: public; Owner: neondb_owner
--

ALTER TABLE public.carts ENABLE ROW LEVEL SECURITY;

--
-- Name: configurations; Type: ROW SECURITY; Schema: public; Owner: neondb_owner
--

ALTER TABLE public.configurations ENABLE ROW LEVEL SECURITY;

--
-- Name: deliveries; Type: ROW SECURITY; Schema: public; Owner: neondb_owner
--

ALTER TABLE public.deliveries ENABLE ROW LEVEL SECURITY;

--
-- Name: delivery_timeline; Type: ROW SECURITY; Schema: public; Owner: neondb_owner
--

ALTER TABLE public.delivery_timeline ENABLE ROW LEVEL SECURITY;

--
-- Name: direction; Type: ROW SECURITY; Schema: public; Owner: neondb_owner
--

ALTER TABLE public.direction ENABLE ROW LEVEL SECURITY;

--
-- Name: messages; Type: ROW SECURITY; Schema: public; Owner: neondb_owner
--

ALTER TABLE public.messages ENABLE ROW LEVEL SECURITY;

--
-- Name: notifications; Type: ROW SECURITY; Schema: public; Owner: neondb_owner
--

ALTER TABLE public.notifications ENABLE ROW LEVEL SECURITY;

--
-- Name: order_details; Type: ROW SECURITY; Schema: public; Owner: neondb_owner
--

ALTER TABLE public.order_details ENABLE ROW LEVEL SECURITY;

--
-- Name: orders; Type: ROW SECURITY; Schema: public; Owner: neondb_owner
--

ALTER TABLE public.orders ENABLE ROW LEVEL SECURITY;

--
-- Name: user_sessions; Type: ROW SECURITY; Schema: public; Owner: neondb_owner
--

ALTER TABLE public.user_sessions ENABLE ROW LEVEL SECURITY;

--
-- Name: users; Type: ROW SECURITY; Schema: public; Owner: neondb_owner
--

ALTER TABLE public.users ENABLE ROW LEVEL SECURITY;

--
-- Name: supabase_realtime; Type: PUBLICATION; Schema: -; Owner: neondb_owner
--

CREATE PUBLICATION supabase_realtime WITH (publish = 'insert, update, delete, truncate');


ALTER PUBLICATION supabase_realtime OWNER TO neondb_owner;

--
-- Name: DEFAULT PRIVILEGES FOR SEQUENCES; Type: DEFAULT ACL; Schema: public; Owner: cloud_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE cloud_admin IN SCHEMA public GRANT ALL ON SEQUENCES TO neon_superuser WITH GRANT OPTION;


--
-- Name: DEFAULT PRIVILEGES FOR TABLES; Type: DEFAULT ACL; Schema: public; Owner: cloud_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE cloud_admin IN SCHEMA public GRANT ALL ON TABLES TO neon_superuser WITH GRANT OPTION;


--
-- PostgreSQL database dump complete
--

\unrestrict E4NKinzsbtP7H3JEVTATchws3jOjpbVJmwxagNRKhnR9A5MYKA4fSEEnPDP3t54

