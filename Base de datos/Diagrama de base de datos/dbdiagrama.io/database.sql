--
-- PostgreSQL database dump
--

-- Dumped from database version 15.8
-- Dumped by pg_dump version 16.1

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: public; Type: SCHEMA; Schema: -; Owner: pg_database_owner
--

CREATE SCHEMA public;


ALTER SCHEMA public OWNER TO pg_database_owner;

--
-- Name: SCHEMA public; Type: COMMENT; Schema: -; Owner: pg_database_owner
--

COMMENT ON SCHEMA public IS 'standard public schema';


--
-- Name: generate_user_id(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.generate_user_id() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE 
acronym TEXT;
seq_num INT;
BEGIN
CASE NEW.role
WHEN 0 THEN
acronym := 'WHO';
seq_num := nextval('seq_wholesaler_id');
WHEN 1 then
acronym := 'RET';
seq_num := nextval('seq_retailer_id');
WHEN 2 then
acronym := 'SUP';
seq_num := nextval('seq_support_id');
WHEN 3 then
acronym := 'DEL';
seq_num := nextval('seq_deliveryman_id');
WHEN 5 THEN
acronym := 'WAR';
seq_num := nextval('seq_warehouse_id');
ELSE
RAISE EXCEPTION 'Unknown role %', NEW.role;
END CASE;
NEW.user_id := acronym || LPAD(seq_num::TEXT, 3, '0');

RETURN NEW;
END;
$$;


ALTER FUNCTION public.generate_user_id() OWNER TO postgres;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: cart_details; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.cart_details (
    id bigint NOT NULL,
    cart_id bigint NOT NULL,
    variant_products_id bigint,
    quantity smallint NOT NULL,
    created_at timestamp without time zone DEFAULT (now() AT TIME ZONE 'utc'::text) NOT NULL,
    CONSTRAINT cart_details_quantity_check CHECK ((quantity > 0))
);


ALTER TABLE public.cart_details OWNER TO postgres;

--
-- Name: TABLE cart_details; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.cart_details IS '购物项';


--
-- Name: COLUMN cart_details.quantity; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.cart_details.quantity IS '最大数量32,767';


--
-- Name: cart_details_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.cart_details ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.cart_details_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: carts; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.carts (
    id bigint NOT NULL,
    user_id uuid NOT NULL,
    created_at timestamp without time zone DEFAULT (now() AT TIME ZONE 'utc'::text) NOT NULL
);


ALTER TABLE public.carts OWNER TO postgres;

--
-- Name: TABLE carts; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.carts IS 'Carrito de compra / 购物车';


--
-- Name: cart_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.carts ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.cart_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: categories; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.categories (
    id bigint NOT NULL,
    user_id uuid,
    name character varying(50) NOT NULL,
    iva numeric(5,2),
    parent_id bigint,
    created_at timestamp without time zone DEFAULT (now() AT TIME ZONE 'utc'::text) NOT NULL
);


ALTER TABLE public.categories OWNER TO postgres;

--
-- Name: TABLE categories; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.categories IS '类别分为公共和私人 / categorías son públicos o privados';


--
-- Name: COLUMN categories.user_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.categories.user_id IS '如果未空则代表为公共';


--
-- Name: COLUMN categories.name; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.categories.name IS '名字';


--
-- Name: categories_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.categories ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.categories_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: chat_panels; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.chat_panels (
    id bigint NOT NULL,
    name character varying(50) NOT NULL,
    created_at timestamp without time zone DEFAULT (now() AT TIME ZONE 'utc'::text) NOT NULL
);


ALTER TABLE public.chat_panels OWNER TO postgres;

--
-- Name: TABLE chat_panels; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.chat_panels IS '聊天界面或会话 / Sesión de Chat';


--
-- Name: chat_panel_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.chat_panels ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.chat_panel_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: chat_participants; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.chat_participants (
    user_id uuid NOT NULL,
    chat_panel_id bigint NOT NULL,
    created_at timestamp without time zone DEFAULT (now() AT TIME ZONE 'utc'::text)
);


ALTER TABLE public.chat_participants OWNER TO postgres;

--
-- Name: TABLE chat_participants; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.chat_participants IS '连接用户和聊天会话 / Conectar usuarios y charlas';


--
-- Name: deliveries; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.deliveries (
    id bigint NOT NULL,
    order_id bigint NOT NULL,
    delivery_person uuid NOT NULL,
    status smallint DEFAULT '0'::smallint NOT NULL,
    start_time timestamp without time zone DEFAULT (now() AT TIME ZONE 'utc'::text) NOT NULL,
    end_time timestamp without time zone,
    notes text NOT NULL,
    created_at timestamp without time zone DEFAULT (now() AT TIME ZONE 'utc'::text) NOT NULL,
    updated_at timestamp without time zone,
    latitude double precision NOT NULL,
    longitude double precision NOT NULL
);


ALTER TABLE public.deliveries OWNER TO postgres;

--
-- Name: TABLE deliveries; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.deliveries IS '送货表';


--
-- Name: COLUMN deliveries.status; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.deliveries.status IS '0=等待配送， 1=正在配送， 2=配送完成';


--
-- Name: COLUMN deliveries.start_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.deliveries.start_time IS '开始时间';


--
-- Name: COLUMN deliveries.end_time; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.deliveries.end_time IS '结束时间';


--
-- Name: deliveries_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.deliveries ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.deliveries_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: delivery_timeline; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.delivery_timeline (
    id bigint NOT NULL,
    delivery_id bigint,
    status smallint NOT NULL,
    notes text,
    created_at timestamp without time zone DEFAULT (now() AT TIME ZONE 'utc'::text) NOT NULL,
    latitude double precision NOT NULL,
    longitude double precision NOT NULL
);


ALTER TABLE public.delivery_timeline OWNER TO postgres;

--
-- Name: TABLE delivery_timeline; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.delivery_timeline IS '配送时间线';


--
-- Name: COLUMN delivery_timeline.status; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.delivery_timeline.status IS '0=等待配送， 1=正在配送， 2=配送完成';


--
-- Name: delivery_timeline_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.delivery_timeline ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.delivery_timeline_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: direcction; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.direcction (
    id bigint NOT NULL,
    user_id uuid NOT NULL,
    type smallint NOT NULL,
    direction character varying(200) NOT NULL,
    city character varying(50) NOT NULL,
    province character varying(80) NOT NULL,
    zip_code character varying(10) NOT NULL,
    latitude double precision NOT NULL,
    longitude double precision NOT NULL,
    created_at timestamp without time zone DEFAULT (now() AT TIME ZONE 'utc'::text) NOT NULL,
    updated_at timestamp without time zone
);


ALTER TABLE public.direcction OWNER TO postgres;

--
-- Name: TABLE direcction; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.direcction IS '储存位置表';


--
-- Name: COLUMN direcction.type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.direcction.type IS '0=商店地址（批发商和零售商），1=送货地址（可以有多个，如果没有则默认用商店地址），2=发票地址';


--
-- Name: direcction_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.direcction ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.direcction_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: discounts; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.discounts (
    id bigint NOT NULL,
    user_id uuid NOT NULL,
    name character varying NOT NULL,
    type_value jsonb NOT NULL,
    applies_to_all boolean DEFAULT false NOT NULL,
    start_date date NOT NULL,
    end_date date NOT NULL,
    status smallint DEFAULT '1'::smallint NOT NULL,
    created_at timestamp without time zone DEFAULT (now() AT TIME ZONE 'utc'::text) NOT NULL
);


ALTER TABLE public.discounts OWNER TO postgres;

--
-- Name: TABLE discounts; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.discounts IS '折扣';


--
-- Name: COLUMN discounts.type_value; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.discounts.type_value IS '先做：减百分比，满金额减少固定金额，满金额减少百分比';


--
-- Name: COLUMN discounts.applies_to_all; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.discounts.applies_to_all IS '是否给其名下所有的产品';


--
-- Name: discounts_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.discounts ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.discounts_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: files; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.files (
    id bigint NOT NULL,
    file_name character varying NOT NULL,
    file_hash character varying(64) NOT NULL,
    mime_type character varying(128) NOT NULL,
    file_size bigint NOT NULL,
    url text NOT NULL,
    created_at timestamp without time zone DEFAULT (now() AT TIME ZONE 'utc'::text) NOT NULL,
    uploaded_by bigint DEFAULT '-1'::bigint NOT NULL,
    to_delete boolean DEFAULT false NOT NULL,
    CONSTRAINT files_file_name_check CHECK (((file_name)::text ~* '^[^\\/:\*\?"<>\|]{1,255}\.[a-z0-9]+$'::text))
);


ALTER TABLE public.files OWNER TO postgres;

--
-- Name: TABLE files; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.files IS '保存文件url (储存在云端) / guardar url de los archivos';


--
-- Name: files_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.files ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.files_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: message_files; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.message_files (
    id bigint NOT NULL,
    message_id bigint NOT NULL,
    file_id bigint NOT NULL,
    sort smallint NOT NULL
);


ALTER TABLE public.message_files OWNER TO postgres;

--
-- Name: TABLE message_files; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.message_files IS '消息文件，音频，视频，视频 / los archivos de los mensajes';


--
-- Name: message_files_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.message_files ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.message_files_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: messages; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.messages (
    id bigint NOT NULL,
    chat_panel_id bigint NOT NULL,
    sender_id uuid DEFAULT '00000000-0000-0000-0000-000000000000'::uuid,
    reply_to bigint DEFAULT '-1'::bigint,
    content text,
    created_at timestamp without time zone DEFAULT (now() AT TIME ZONE 'utc'::text) NOT NULL,
    is_read boolean DEFAULT false NOT NULL
);


ALTER TABLE public.messages OWNER TO postgres;

--
-- Name: TABLE messages; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.messages IS '聊天信息 / mensajes de chat';


--
-- Name: COLUMN messages.sender_id; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.messages.sender_id IS '0代表发送者被删除都是还有人看消息所以保留消息';


--
-- Name: COLUMN messages.reply_to; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.messages.reply_to IS '-1代表引用的消息被删除';


--
-- Name: messages_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.messages ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.messages_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: notifications; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.notifications (
    id bigint NOT NULL,
    user_id uuid NOT NULL,
    title character varying(100) NOT NULL,
    message text NOT NULL,
    type smallint NOT NULL,
    is_read boolean DEFAULT false NOT NULL,
    click_action character varying(255) NOT NULL,
    created_at timestamp without time zone DEFAULT (now() AT TIME ZONE 'utc'::text) NOT NULL
);


ALTER TABLE public.notifications OWNER TO postgres;

--
-- Name: COLUMN notifications.type; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.notifications.type IS '还不确定，应该有多种比如消息通知，减价，库存。。。';


--
-- Name: COLUMN notifications.click_action; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.notifications.click_action IS '导航到位置';


--
-- Name: notifications_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.notifications ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.notifications_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: order_details; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.order_details (
    id bigint NOT NULL,
    order_id bigint NOT NULL,
    product_code character varying(50) NOT NULL,
    variant_product_id bigint NOT NULL,
    quantity smallint NOT NULL,
    unit_price numeric(10,2) NOT NULL,
    unit_price_iva numeric(10,2) NOT NULL,
    subtotal numeric(12,2) NOT NULL,
    iva numeric(10,2) NOT NULL,
    discount_applied numeric(10,2) NOT NULL,
    attributes jsonb NOT NULL,
    created_at timestamp without time zone DEFAULT (now() AT TIME ZONE 'utc'::text) NOT NULL
);


ALTER TABLE public.order_details OWNER TO postgres;

--
-- Name: order_details_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.order_details ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.order_details_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: orders; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.orders (
    id bigint NOT NULL,
    retailer_id uuid,
    wholesaler_id uuid,
    status smallint DEFAULT '1'::smallint NOT NULL,
    payment_method smallint NOT NULL,
    shipping_address bigint,
    notes character varying(500),
    discount_total numeric(12,2) NOT NULL,
    subtotal numeric(12,2) NOT NULL,
    total numeric(12,2) NOT NULL,
    iva_total numeric(12,2) NOT NULL,
    discount_log jsonb NOT NULL,
    estimated_date timestamp without time zone,
    created_at timestamp without time zone DEFAULT (now() AT TIME ZONE 'utc'::text) NOT NULL,
    updated_at timestamp without time zone DEFAULT (now() AT TIME ZONE 'utc'::text)
);


ALTER TABLE public.orders OWNER TO postgres;

--
-- Name: orders_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.orders ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.orders_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: products; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.products (
    id bigint NOT NULL,
    user_id uuid NOT NULL,
    name character varying(50) NOT NULL,
    title character varying(100),
    description text,
    iva numeric(5,2) NOT NULL,
    category_id bigint NOT NULL,
    status smallint DEFAULT '1'::smallint NOT NULL,
    created_at timestamp without time zone DEFAULT (now() AT TIME ZONE 'utc'::text) NOT NULL
);


ALTER TABLE public.products OWNER TO postgres;

--
-- Name: TABLE products; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.products IS '产品基础表 / valor basica de productos';


--
-- Name: COLUMN products.status; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.products.status IS '1=activo, 0=desactivo';


--
-- Name: products_files; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.products_files (
    id bigint NOT NULL,
    product_id bigint NOT NULL,
    file_id bigint NOT NULL,
    sort smallint NOT NULL
);


ALTER TABLE public.products_files OWNER TO postgres;

--
-- Name: TABLE products_files; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.products_files IS '产品的宣传图什么的';


--
-- Name: products_files_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.products_files ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.products_files_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: products_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.products ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.products_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: refresh_tokens; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.refresh_tokens (
    token_id bigint NOT NULL,
    user_id uuid NOT NULL,
    device_name character varying(150),
    ip_address character varying(39),
    user_agent text,
    created_at timestamp without time zone DEFAULT (now() AT TIME ZONE 'utc'::text) NOT NULL,
    edited_at timestamp without time zone DEFAULT (now() AT TIME ZONE 'utc'::text) NOT NULL,
    revoked boolean DEFAULT false NOT NULL
);


ALTER TABLE public.refresh_tokens OWNER TO postgres;

--
-- Name: TABLE refresh_tokens; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.refresh_tokens IS '控制并记录用户登录 / Controlar y registrar el inicio de sesión del usuario';


--
-- Name: refresh_tokens_token_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.refresh_tokens ALTER COLUMN token_id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.refresh_tokens_token_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: seq_deliveryman_id; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_deliveryman_id
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.seq_deliveryman_id OWNER TO postgres;

--
-- Name: seq_retailer_id; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_retailer_id
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.seq_retailer_id OWNER TO postgres;

--
-- Name: seq_support_id; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_support_id
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.seq_support_id OWNER TO postgres;

--
-- Name: seq_warehouse_id; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_warehouse_id
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.seq_warehouse_id OWNER TO postgres;

--
-- Name: seq_wholesaler_id; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.seq_wholesaler_id
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER SEQUENCE public.seq_wholesaler_id OWNER TO postgres;

--
-- Name: users; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.users (
    id uuid NOT NULL,
    user_id text,
    first_name character varying(50),
    last_name character varying(60),
    username character varying(30) NOT NULL,
    password text NOT NULL,
    email character varying(255),
    telephone character varying(15),
    status smallint DEFAULT '0'::smallint NOT NULL,
    profile jsonb,
    created_at timestamp without time zone DEFAULT (now() AT TIME ZONE 'utc'::text) NOT NULL,
    updated_at timestamp without time zone DEFAULT (now() AT TIME ZONE 'utc'::text) NOT NULL,
    role smallint NOT NULL
);


ALTER TABLE public.users OWNER TO postgres;

--
-- Name: TABLE users; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.users IS '用户表';


--
-- Name: variant_products; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.variant_products (
    id bigint NOT NULL,
    created_at timestamp without time zone DEFAULT (now() AT TIME ZONE 'utc'::text) NOT NULL,
    product_id bigint NOT NULL,
    type_sale smallint NOT NULL,
    price numeric(10,2) NOT NULL,
    price_iva numeric(10,2) NOT NULL,
    stock integer NOT NULL,
    sort smallint NOT NULL,
    attributes jsonb,
    status smallint NOT NULL,
    iva numeric(5,2) NOT NULL
);


ALTER TABLE public.variant_products OWNER TO postgres;

--
-- Name: TABLE variant_products; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON TABLE public.variant_products IS '变体销售配置';


--
-- Name: COLUMN variant_products.status; Type: COMMENT; Schema: public; Owner: postgres
--

COMMENT ON COLUMN public.variant_products.status IS '1=activado,0=desactivado';


--
-- Name: variant_products_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.variant_products ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.variant_products_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: cart_details cart_details_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cart_details
    ADD CONSTRAINT cart_details_pkey PRIMARY KEY (id);


--
-- Name: carts cart_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.carts
    ADD CONSTRAINT cart_pkey PRIMARY KEY (id);


--
-- Name: categories categories_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.categories
    ADD CONSTRAINT categories_pkey PRIMARY KEY (id);


--
-- Name: chat_panels chat_panel_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.chat_panels
    ADD CONSTRAINT chat_panel_pkey PRIMARY KEY (id);


--
-- Name: chat_participants chat_participants_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.chat_participants
    ADD CONSTRAINT chat_participants_pkey PRIMARY KEY (chat_panel_id, user_id);


--
-- Name: deliveries deliveries_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.deliveries
    ADD CONSTRAINT deliveries_pkey PRIMARY KEY (id);


--
-- Name: delivery_timeline delivery_timeline_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.delivery_timeline
    ADD CONSTRAINT delivery_timeline_pkey PRIMARY KEY (id);


--
-- Name: direcction direcction_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.direcction
    ADD CONSTRAINT direcction_pkey PRIMARY KEY (id);


--
-- Name: discounts discounts_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.discounts
    ADD CONSTRAINT discounts_pkey PRIMARY KEY (id);


--
-- Name: files files_file_hash_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.files
    ADD CONSTRAINT files_file_hash_key UNIQUE (file_hash);


--
-- Name: files files_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.files
    ADD CONSTRAINT files_pkey PRIMARY KEY (id);


--
-- Name: message_files message_files_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.message_files
    ADD CONSTRAINT message_files_pkey PRIMARY KEY (id);


--
-- Name: messages messages_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.messages
    ADD CONSTRAINT messages_pkey PRIMARY KEY (id);


--
-- Name: notifications notifications_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.notifications
    ADD CONSTRAINT notifications_pkey PRIMARY KEY (id);


--
-- Name: order_details order_details_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.order_details
    ADD CONSTRAINT order_details_pkey PRIMARY KEY (id);


--
-- Name: orders orders_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.orders
    ADD CONSTRAINT orders_pkey PRIMARY KEY (id);


--
-- Name: products_files products_files_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.products_files
    ADD CONSTRAINT products_files_pkey PRIMARY KEY (id);


--
-- Name: products products_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.products
    ADD CONSTRAINT products_pkey PRIMARY KEY (id);


--
-- Name: refresh_tokens refresh_tokens_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.refresh_tokens
    ADD CONSTRAINT refresh_tokens_pkey PRIMARY KEY (token_id);


--
-- Name: users users_email_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_email_key UNIQUE (email);


--
-- Name: users users_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_pkey PRIMARY KEY (id);


--
-- Name: users users_telephone_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_telephone_key UNIQUE (telephone);


--
-- Name: users users_username_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_username_key UNIQUE (username);


--
-- Name: variant_products variant_products_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.variant_products
    ADD CONSTRAINT variant_products_pkey PRIMARY KEY (id);


--
-- Name: users tg_insert_user_id; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER tg_insert_user_id BEFORE INSERT ON public.users FOR EACH ROW WHEN ((new.user_id IS NULL)) EXECUTE FUNCTION public.generate_user_id();


--
-- Name: users tg_update_user_id; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER tg_update_user_id BEFORE UPDATE ON public.users FOR EACH ROW WHEN ((new.role IS DISTINCT FROM old.role)) EXECUTE FUNCTION public.generate_user_id();


--
-- Name: cart_details cart_details_cart_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cart_details
    ADD CONSTRAINT cart_details_cart_id_fkey FOREIGN KEY (cart_id) REFERENCES public.carts(id) ON DELETE CASCADE;


--
-- Name: cart_details cart_details_variant_products_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cart_details
    ADD CONSTRAINT cart_details_variant_products_id_fkey FOREIGN KEY (variant_products_id) REFERENCES public.variant_products(id) ON DELETE CASCADE;


--
-- Name: carts carts_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.carts
    ADD CONSTRAINT carts_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id) ON DELETE CASCADE;


--
-- Name: categories categories_parent_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.categories
    ADD CONSTRAINT categories_parent_id_fkey FOREIGN KEY (parent_id) REFERENCES public.categories(id) ON DELETE CASCADE;


--
-- Name: categories categories_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.categories
    ADD CONSTRAINT categories_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id) ON DELETE CASCADE;


--
-- Name: chat_participants chat_participants_chat_panel_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.chat_participants
    ADD CONSTRAINT chat_participants_chat_panel_id_fkey FOREIGN KEY (chat_panel_id) REFERENCES public.chat_panels(id) ON DELETE CASCADE;


--
-- Name: chat_participants chat_participants_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.chat_participants
    ADD CONSTRAINT chat_participants_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id) ON DELETE CASCADE;


--
-- Name: deliveries deliveries_delivery_person_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.deliveries
    ADD CONSTRAINT deliveries_delivery_person_fkey FOREIGN KEY (delivery_person) REFERENCES public.users(id) ON DELETE SET NULL;


--
-- Name: delivery_timeline delivery_timeline_delivery_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.delivery_timeline
    ADD CONSTRAINT delivery_timeline_delivery_id_fkey FOREIGN KEY (delivery_id) REFERENCES public.deliveries(id) ON DELETE CASCADE;


--
-- Name: direcction direcction_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.direcction
    ADD CONSTRAINT direcction_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id) ON DELETE CASCADE;


--
-- Name: discounts discounts_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.discounts
    ADD CONSTRAINT discounts_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id) ON DELETE CASCADE;


--
-- Name: message_files message_files_file_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.message_files
    ADD CONSTRAINT message_files_file_id_fkey FOREIGN KEY (file_id) REFERENCES public.files(id) ON DELETE CASCADE;


--
-- Name: message_files message_files_message_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.message_files
    ADD CONSTRAINT message_files_message_id_fkey FOREIGN KEY (message_id) REFERENCES public.messages(id) ON DELETE CASCADE;


--
-- Name: messages messages_chat_panel_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.messages
    ADD CONSTRAINT messages_chat_panel_id_fkey FOREIGN KEY (chat_panel_id) REFERENCES public.chat_panels(id) ON DELETE CASCADE;


--
-- Name: messages messages_reply_to_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.messages
    ADD CONSTRAINT messages_reply_to_fkey FOREIGN KEY (reply_to) REFERENCES public.messages(id) ON DELETE SET DEFAULT;


--
-- Name: messages messages_sender_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.messages
    ADD CONSTRAINT messages_sender_id_fkey FOREIGN KEY (sender_id) REFERENCES public.users(id) ON DELETE SET DEFAULT;


--
-- Name: notifications notifications_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.notifications
    ADD CONSTRAINT notifications_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id) ON DELETE CASCADE;


--
-- Name: order_details order_details_order_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.order_details
    ADD CONSTRAINT order_details_order_id_fkey FOREIGN KEY (order_id) REFERENCES public.orders(id) ON DELETE CASCADE;


--
-- Name: order_details order_details_variant_product_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.order_details
    ADD CONSTRAINT order_details_variant_product_id_fkey FOREIGN KEY (variant_product_id) REFERENCES public.variant_products(id) ON DELETE CASCADE;


--
-- Name: orders orders_retailer_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.orders
    ADD CONSTRAINT orders_retailer_id_fkey FOREIGN KEY (retailer_id) REFERENCES public.users(id) ON DELETE SET NULL;


--
-- Name: orders orders_shipping_address_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.orders
    ADD CONSTRAINT orders_shipping_address_fkey FOREIGN KEY (shipping_address) REFERENCES public.direcction(id) ON DELETE SET NULL;


--
-- Name: orders orders_wholesaler_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.orders
    ADD CONSTRAINT orders_wholesaler_id_fkey FOREIGN KEY (wholesaler_id) REFERENCES public.users(id) ON DELETE SET NULL;


--
-- Name: products products_category_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.products
    ADD CONSTRAINT products_category_id_fkey FOREIGN KEY (category_id) REFERENCES public.categories(id);


--
-- Name: products_files products_files_file_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.products_files
    ADD CONSTRAINT products_files_file_id_fkey FOREIGN KEY (file_id) REFERENCES public.files(id) ON DELETE CASCADE;


--
-- Name: products_files products_files_product_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.products_files
    ADD CONSTRAINT products_files_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(id) ON DELETE CASCADE;


--
-- Name: products products_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.products
    ADD CONSTRAINT products_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id) ON DELETE CASCADE;


--
-- Name: refresh_tokens refresh_tokens_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.refresh_tokens
    ADD CONSTRAINT refresh_tokens_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id) ON DELETE CASCADE;


--
-- Name: users users_auth_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_auth_id_fkey FOREIGN KEY (id) REFERENCES auth.users(id) ON DELETE CASCADE;


--
-- Name: variant_products variant_products_product_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.variant_products
    ADD CONSTRAINT variant_products_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(id) ON DELETE CASCADE;


--
-- Name: cart_details Enable users to view their own data only; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Enable users to view their own data only" ON public.cart_details TO authenticated, anon USING ((( SELECT auth.uid() AS uid) = ( SELECT carts.user_id
   FROM public.carts
  WHERE (carts.id = cart_details.cart_id))));


--
-- Name: carts Enable users to view their own data only; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Enable users to view their own data only" ON public.carts TO authenticated, anon USING ((( SELECT auth.uid() AS uid) = user_id));


--
-- Name: deliveries Enable users to view their own data only; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Enable users to view their own data only" ON public.deliveries TO authenticated, anon USING ((( SELECT auth.uid() AS uid) = delivery_person));


--
-- Name: delivery_timeline Enable users to view their own data only; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Enable users to view their own data only" ON public.delivery_timeline TO authenticated, anon USING ((( SELECT auth.uid() AS uid) = ( SELECT deliveries.delivery_person
   FROM public.deliveries
  WHERE (deliveries.id = delivery_timeline.delivery_id))));


--
-- Name: direcction Enable users to view their own data only; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Enable users to view their own data only" ON public.direcction TO authenticated, anon USING ((( SELECT auth.uid() AS uid) = user_id));


--
-- Name: messages Enable users to view their own data only; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Enable users to view their own data only" ON public.messages TO authenticated, anon USING ((EXISTS ( SELECT 1
   FROM public.chat_participants
  WHERE ((chat_participants.chat_panel_id = messages.chat_panel_id) AND (chat_participants.user_id = auth.uid())))));


--
-- Name: notifications Enable users to view their own data only; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Enable users to view their own data only" ON public.notifications TO authenticated, anon USING ((( SELECT auth.uid() AS uid) = user_id));


--
-- Name: users Enable users to view their own data only; Type: POLICY; Schema: public; Owner: postgres
--

CREATE POLICY "Enable users to view their own data only" ON public.users TO authenticated USING ((( SELECT auth.uid() AS uid) = id));


--
-- Name: cart_details; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.cart_details ENABLE ROW LEVEL SECURITY;

--
-- Name: carts; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.carts ENABLE ROW LEVEL SECURITY;

--
-- Name: deliveries; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.deliveries ENABLE ROW LEVEL SECURITY;

--
-- Name: delivery_timeline; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.delivery_timeline ENABLE ROW LEVEL SECURITY;

--
-- Name: direcction; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.direcction ENABLE ROW LEVEL SECURITY;

--
-- Name: messages; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.messages ENABLE ROW LEVEL SECURITY;

--
-- Name: notifications; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.notifications ENABLE ROW LEVEL SECURITY;

--
-- Name: order_details; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.order_details ENABLE ROW LEVEL SECURITY;

--
-- Name: orders; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.orders ENABLE ROW LEVEL SECURITY;

--
-- Name: refresh_tokens; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.refresh_tokens ENABLE ROW LEVEL SECURITY;

--
-- Name: users; Type: ROW SECURITY; Schema: public; Owner: postgres
--

ALTER TABLE public.users ENABLE ROW LEVEL SECURITY;

--
-- Name: SCHEMA public; Type: ACL; Schema: -; Owner: pg_database_owner
--

GRANT USAGE ON SCHEMA public TO postgres;
GRANT USAGE ON SCHEMA public TO anon;
GRANT USAGE ON SCHEMA public TO authenticated;
GRANT USAGE ON SCHEMA public TO service_role;


--
-- Name: FUNCTION generate_user_id(); Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON FUNCTION public.generate_user_id() TO anon;
GRANT ALL ON FUNCTION public.generate_user_id() TO authenticated;
GRANT ALL ON FUNCTION public.generate_user_id() TO service_role;


--
-- Name: TABLE cart_details; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.cart_details TO anon;
GRANT ALL ON TABLE public.cart_details TO authenticated;
GRANT ALL ON TABLE public.cart_details TO service_role;


--
-- Name: SEQUENCE cart_details_id_seq; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON SEQUENCE public.cart_details_id_seq TO anon;
GRANT ALL ON SEQUENCE public.cart_details_id_seq TO authenticated;
GRANT ALL ON SEQUENCE public.cart_details_id_seq TO service_role;


--
-- Name: TABLE carts; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.carts TO anon;
GRANT ALL ON TABLE public.carts TO authenticated;
GRANT ALL ON TABLE public.carts TO service_role;


--
-- Name: SEQUENCE cart_id_seq; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON SEQUENCE public.cart_id_seq TO anon;
GRANT ALL ON SEQUENCE public.cart_id_seq TO authenticated;
GRANT ALL ON SEQUENCE public.cart_id_seq TO service_role;


--
-- Name: TABLE categories; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.categories TO anon;
GRANT ALL ON TABLE public.categories TO authenticated;
GRANT ALL ON TABLE public.categories TO service_role;


--
-- Name: SEQUENCE categories_id_seq; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON SEQUENCE public.categories_id_seq TO anon;
GRANT ALL ON SEQUENCE public.categories_id_seq TO authenticated;
GRANT ALL ON SEQUENCE public.categories_id_seq TO service_role;


--
-- Name: TABLE chat_panels; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.chat_panels TO anon;
GRANT ALL ON TABLE public.chat_panels TO authenticated;
GRANT ALL ON TABLE public.chat_panels TO service_role;


--
-- Name: SEQUENCE chat_panel_id_seq; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON SEQUENCE public.chat_panel_id_seq TO anon;
GRANT ALL ON SEQUENCE public.chat_panel_id_seq TO authenticated;
GRANT ALL ON SEQUENCE public.chat_panel_id_seq TO service_role;


--
-- Name: TABLE chat_participants; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.chat_participants TO anon;
GRANT ALL ON TABLE public.chat_participants TO authenticated;
GRANT ALL ON TABLE public.chat_participants TO service_role;


--
-- Name: TABLE deliveries; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.deliveries TO anon;
GRANT ALL ON TABLE public.deliveries TO authenticated;
GRANT ALL ON TABLE public.deliveries TO service_role;


--
-- Name: SEQUENCE deliveries_id_seq; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON SEQUENCE public.deliveries_id_seq TO anon;
GRANT ALL ON SEQUENCE public.deliveries_id_seq TO authenticated;
GRANT ALL ON SEQUENCE public.deliveries_id_seq TO service_role;


--
-- Name: TABLE delivery_timeline; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.delivery_timeline TO anon;
GRANT ALL ON TABLE public.delivery_timeline TO authenticated;
GRANT ALL ON TABLE public.delivery_timeline TO service_role;


--
-- Name: SEQUENCE delivery_timeline_id_seq; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON SEQUENCE public.delivery_timeline_id_seq TO anon;
GRANT ALL ON SEQUENCE public.delivery_timeline_id_seq TO authenticated;
GRANT ALL ON SEQUENCE public.delivery_timeline_id_seq TO service_role;


--
-- Name: TABLE direcction; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.direcction TO anon;
GRANT ALL ON TABLE public.direcction TO authenticated;
GRANT ALL ON TABLE public.direcction TO service_role;


--
-- Name: SEQUENCE direcction_id_seq; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON SEQUENCE public.direcction_id_seq TO anon;
GRANT ALL ON SEQUENCE public.direcction_id_seq TO authenticated;
GRANT ALL ON SEQUENCE public.direcction_id_seq TO service_role;


--
-- Name: TABLE discounts; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.discounts TO anon;
GRANT ALL ON TABLE public.discounts TO authenticated;
GRANT ALL ON TABLE public.discounts TO service_role;


--
-- Name: SEQUENCE discounts_id_seq; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON SEQUENCE public.discounts_id_seq TO anon;
GRANT ALL ON SEQUENCE public.discounts_id_seq TO authenticated;
GRANT ALL ON SEQUENCE public.discounts_id_seq TO service_role;


--
-- Name: TABLE files; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.files TO anon;
GRANT ALL ON TABLE public.files TO authenticated;
GRANT ALL ON TABLE public.files TO service_role;


--
-- Name: SEQUENCE files_id_seq; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON SEQUENCE public.files_id_seq TO anon;
GRANT ALL ON SEQUENCE public.files_id_seq TO authenticated;
GRANT ALL ON SEQUENCE public.files_id_seq TO service_role;


--
-- Name: TABLE message_files; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.message_files TO anon;
GRANT ALL ON TABLE public.message_files TO authenticated;
GRANT ALL ON TABLE public.message_files TO service_role;


--
-- Name: SEQUENCE message_files_id_seq; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON SEQUENCE public.message_files_id_seq TO anon;
GRANT ALL ON SEQUENCE public.message_files_id_seq TO authenticated;
GRANT ALL ON SEQUENCE public.message_files_id_seq TO service_role;


--
-- Name: TABLE messages; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.messages TO anon;
GRANT ALL ON TABLE public.messages TO authenticated;
GRANT ALL ON TABLE public.messages TO service_role;


--
-- Name: SEQUENCE messages_id_seq; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON SEQUENCE public.messages_id_seq TO anon;
GRANT ALL ON SEQUENCE public.messages_id_seq TO authenticated;
GRANT ALL ON SEQUENCE public.messages_id_seq TO service_role;


--
-- Name: TABLE notifications; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.notifications TO anon;
GRANT ALL ON TABLE public.notifications TO authenticated;
GRANT ALL ON TABLE public.notifications TO service_role;


--
-- Name: SEQUENCE notifications_id_seq; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON SEQUENCE public.notifications_id_seq TO anon;
GRANT ALL ON SEQUENCE public.notifications_id_seq TO authenticated;
GRANT ALL ON SEQUENCE public.notifications_id_seq TO service_role;


--
-- Name: TABLE order_details; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.order_details TO anon;
GRANT ALL ON TABLE public.order_details TO authenticated;
GRANT ALL ON TABLE public.order_details TO service_role;


--
-- Name: SEQUENCE order_details_id_seq; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON SEQUENCE public.order_details_id_seq TO anon;
GRANT ALL ON SEQUENCE public.order_details_id_seq TO authenticated;
GRANT ALL ON SEQUENCE public.order_details_id_seq TO service_role;


--
-- Name: TABLE orders; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.orders TO anon;
GRANT ALL ON TABLE public.orders TO authenticated;
GRANT ALL ON TABLE public.orders TO service_role;


--
-- Name: SEQUENCE orders_id_seq; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON SEQUENCE public.orders_id_seq TO anon;
GRANT ALL ON SEQUENCE public.orders_id_seq TO authenticated;
GRANT ALL ON SEQUENCE public.orders_id_seq TO service_role;


--
-- Name: TABLE products; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.products TO anon;
GRANT ALL ON TABLE public.products TO authenticated;
GRANT ALL ON TABLE public.products TO service_role;


--
-- Name: TABLE products_files; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.products_files TO anon;
GRANT ALL ON TABLE public.products_files TO authenticated;
GRANT ALL ON TABLE public.products_files TO service_role;


--
-- Name: SEQUENCE products_files_id_seq; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON SEQUENCE public.products_files_id_seq TO anon;
GRANT ALL ON SEQUENCE public.products_files_id_seq TO authenticated;
GRANT ALL ON SEQUENCE public.products_files_id_seq TO service_role;


--
-- Name: SEQUENCE products_id_seq; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON SEQUENCE public.products_id_seq TO anon;
GRANT ALL ON SEQUENCE public.products_id_seq TO authenticated;
GRANT ALL ON SEQUENCE public.products_id_seq TO service_role;


--
-- Name: TABLE refresh_tokens; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.refresh_tokens TO anon;
GRANT ALL ON TABLE public.refresh_tokens TO authenticated;
GRANT ALL ON TABLE public.refresh_tokens TO service_role;


--
-- Name: SEQUENCE refresh_tokens_token_id_seq; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON SEQUENCE public.refresh_tokens_token_id_seq TO anon;
GRANT ALL ON SEQUENCE public.refresh_tokens_token_id_seq TO authenticated;
GRANT ALL ON SEQUENCE public.refresh_tokens_token_id_seq TO service_role;


--
-- Name: SEQUENCE seq_deliveryman_id; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON SEQUENCE public.seq_deliveryman_id TO anon;
GRANT ALL ON SEQUENCE public.seq_deliveryman_id TO authenticated;
GRANT ALL ON SEQUENCE public.seq_deliveryman_id TO service_role;


--
-- Name: SEQUENCE seq_retailer_id; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON SEQUENCE public.seq_retailer_id TO anon;
GRANT ALL ON SEQUENCE public.seq_retailer_id TO authenticated;
GRANT ALL ON SEQUENCE public.seq_retailer_id TO service_role;


--
-- Name: SEQUENCE seq_support_id; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON SEQUENCE public.seq_support_id TO anon;
GRANT ALL ON SEQUENCE public.seq_support_id TO authenticated;
GRANT ALL ON SEQUENCE public.seq_support_id TO service_role;


--
-- Name: SEQUENCE seq_warehouse_id; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON SEQUENCE public.seq_warehouse_id TO anon;
GRANT ALL ON SEQUENCE public.seq_warehouse_id TO authenticated;
GRANT ALL ON SEQUENCE public.seq_warehouse_id TO service_role;


--
-- Name: SEQUENCE seq_wholesaler_id; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON SEQUENCE public.seq_wholesaler_id TO anon;
GRANT ALL ON SEQUENCE public.seq_wholesaler_id TO authenticated;
GRANT ALL ON SEQUENCE public.seq_wholesaler_id TO service_role;


--
-- Name: TABLE users; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.users TO anon;
GRANT ALL ON TABLE public.users TO authenticated;
GRANT ALL ON TABLE public.users TO service_role;


--
-- Name: TABLE variant_products; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON TABLE public.variant_products TO anon;
GRANT ALL ON TABLE public.variant_products TO authenticated;
GRANT ALL ON TABLE public.variant_products TO service_role;


--
-- Name: SEQUENCE variant_products_id_seq; Type: ACL; Schema: public; Owner: postgres
--

GRANT ALL ON SEQUENCE public.variant_products_id_seq TO anon;
GRANT ALL ON SEQUENCE public.variant_products_id_seq TO authenticated;
GRANT ALL ON SEQUENCE public.variant_products_id_seq TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR SEQUENCES; Type: DEFAULT ACL; Schema: public; Owner: postgres
--

ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON SEQUENCES TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON SEQUENCES TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON SEQUENCES TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON SEQUENCES TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR SEQUENCES; Type: DEFAULT ACL; Schema: public; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON SEQUENCES TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON SEQUENCES TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON SEQUENCES TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON SEQUENCES TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR FUNCTIONS; Type: DEFAULT ACL; Schema: public; Owner: postgres
--

ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON FUNCTIONS TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON FUNCTIONS TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON FUNCTIONS TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON FUNCTIONS TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR FUNCTIONS; Type: DEFAULT ACL; Schema: public; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON FUNCTIONS TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON FUNCTIONS TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON FUNCTIONS TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON FUNCTIONS TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR TABLES; Type: DEFAULT ACL; Schema: public; Owner: postgres
--

ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON TABLES TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON TABLES TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON TABLES TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres IN SCHEMA public GRANT ALL ON TABLES TO service_role;


--
-- Name: DEFAULT PRIVILEGES FOR TABLES; Type: DEFAULT ACL; Schema: public; Owner: supabase_admin
--

ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON TABLES TO postgres;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON TABLES TO anon;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON TABLES TO authenticated;
ALTER DEFAULT PRIVILEGES FOR ROLE supabase_admin IN SCHEMA public GRANT ALL ON TABLES TO service_role;


--
-- PostgreSQL database dump complete
--

