
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model cart_details
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type cart_details = $Result.DefaultSelection<Prisma.$cart_detailsPayload>
/**
 * Model carts
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type carts = $Result.DefaultSelection<Prisma.$cartsPayload>
/**
 * Model categories
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type categories = $Result.DefaultSelection<Prisma.$categoriesPayload>
/**
 * Model chat_panels
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type chat_panels = $Result.DefaultSelection<Prisma.$chat_panelsPayload>
/**
 * Model chat_participants
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type chat_participants = $Result.DefaultSelection<Prisma.$chat_participantsPayload>
/**
 * Model configurations
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type configurations = $Result.DefaultSelection<Prisma.$configurationsPayload>
/**
 * Model deliveries
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type deliveries = $Result.DefaultSelection<Prisma.$deliveriesPayload>
/**
 * Model delivery_timeline
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type delivery_timeline = $Result.DefaultSelection<Prisma.$delivery_timelinePayload>
/**
 * Model discounts
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type discounts = $Result.DefaultSelection<Prisma.$discountsPayload>
/**
 * Model files
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type files = $Result.DefaultSelection<Prisma.$filesPayload>
/**
 * Model message_files
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type message_files = $Result.DefaultSelection<Prisma.$message_filesPayload>
/**
 * Model messages
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type messages = $Result.DefaultSelection<Prisma.$messagesPayload>
/**
 * Model notifications
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type notifications = $Result.DefaultSelection<Prisma.$notificationsPayload>
/**
 * Model order_details
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type order_details = $Result.DefaultSelection<Prisma.$order_detailsPayload>
/**
 * Model orders
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type orders = $Result.DefaultSelection<Prisma.$ordersPayload>
/**
 * Model products
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type products = $Result.DefaultSelection<Prisma.$productsPayload>
/**
 * Model products_files
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type products_files = $Result.DefaultSelection<Prisma.$products_filesPayload>
/**
 * Model user_sessions
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type user_sessions = $Result.DefaultSelection<Prisma.$user_sessionsPayload>
/**
 * Model users
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type users = $Result.DefaultSelection<Prisma.$usersPayload>
/**
 * Model variant_products
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type variant_products = $Result.DefaultSelection<Prisma.$variant_productsPayload>
/**
 * Model direction
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type direction = $Result.DefaultSelection<Prisma.$directionPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const AddressType: {
  DELIVERY: 'DELIVERY',
  INVOICE: 'INVOICE',
  STORE: 'STORE'
};

export type AddressType = (typeof AddressType)[keyof typeof AddressType]


export const DeliveryStatus: {
  PENDING: 'PENDING',
  IN_PROGRESS: 'IN_PROGRESS',
  COMPLETED: 'COMPLETED'
};

export type DeliveryStatus = (typeof DeliveryStatus)[keyof typeof DeliveryStatus]


export const UserRole: {
  WHOLESALER: 'WHOLESALER',
  RETAILER: 'RETAILER',
  SUPPORT: 'SUPPORT',
  DELIVERY: 'DELIVERY',
  WAREHOUSE: 'WAREHOUSE'
};

export type UserRole = (typeof UserRole)[keyof typeof UserRole]


export const UserStatus: {
  INACTIVE: 'INACTIVE',
  ACTIVE: 'ACTIVE',
  BANNED: 'BANNED'
};

export type UserStatus = (typeof UserStatus)[keyof typeof UserStatus]

}

export type AddressType = $Enums.AddressType

export const AddressType: typeof $Enums.AddressType

export type DeliveryStatus = $Enums.DeliveryStatus

export const DeliveryStatus: typeof $Enums.DeliveryStatus

export type UserRole = $Enums.UserRole

export const UserRole: typeof $Enums.UserRole

export type UserStatus = $Enums.UserStatus

export const UserStatus: typeof $Enums.UserStatus

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Cart_details
 * const cart_details = await prisma.cart_details.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  const U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Cart_details
   * const cart_details = await prisma.cart_details.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.cart_details`: Exposes CRUD operations for the **cart_details** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Cart_details
    * const cart_details = await prisma.cart_details.findMany()
    * ```
    */
  get cart_details(): Prisma.cart_detailsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.carts`: Exposes CRUD operations for the **carts** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Carts
    * const carts = await prisma.carts.findMany()
    * ```
    */
  get carts(): Prisma.cartsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.categories`: Exposes CRUD operations for the **categories** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Categories
    * const categories = await prisma.categories.findMany()
    * ```
    */
  get categories(): Prisma.categoriesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.chat_panels`: Exposes CRUD operations for the **chat_panels** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Chat_panels
    * const chat_panels = await prisma.chat_panels.findMany()
    * ```
    */
  get chat_panels(): Prisma.chat_panelsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.chat_participants`: Exposes CRUD operations for the **chat_participants** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Chat_participants
    * const chat_participants = await prisma.chat_participants.findMany()
    * ```
    */
  get chat_participants(): Prisma.chat_participantsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.configurations`: Exposes CRUD operations for the **configurations** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Configurations
    * const configurations = await prisma.configurations.findMany()
    * ```
    */
  get configurations(): Prisma.configurationsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.deliveries`: Exposes CRUD operations for the **deliveries** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Deliveries
    * const deliveries = await prisma.deliveries.findMany()
    * ```
    */
  get deliveries(): Prisma.deliveriesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.delivery_timeline`: Exposes CRUD operations for the **delivery_timeline** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Delivery_timelines
    * const delivery_timelines = await prisma.delivery_timeline.findMany()
    * ```
    */
  get delivery_timeline(): Prisma.delivery_timelineDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.discounts`: Exposes CRUD operations for the **discounts** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Discounts
    * const discounts = await prisma.discounts.findMany()
    * ```
    */
  get discounts(): Prisma.discountsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.files`: Exposes CRUD operations for the **files** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Files
    * const files = await prisma.files.findMany()
    * ```
    */
  get files(): Prisma.filesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.message_files`: Exposes CRUD operations for the **message_files** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Message_files
    * const message_files = await prisma.message_files.findMany()
    * ```
    */
  get message_files(): Prisma.message_filesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.messages`: Exposes CRUD operations for the **messages** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Messages
    * const messages = await prisma.messages.findMany()
    * ```
    */
  get messages(): Prisma.messagesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.notifications`: Exposes CRUD operations for the **notifications** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Notifications
    * const notifications = await prisma.notifications.findMany()
    * ```
    */
  get notifications(): Prisma.notificationsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.order_details`: Exposes CRUD operations for the **order_details** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Order_details
    * const order_details = await prisma.order_details.findMany()
    * ```
    */
  get order_details(): Prisma.order_detailsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.orders`: Exposes CRUD operations for the **orders** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Orders
    * const orders = await prisma.orders.findMany()
    * ```
    */
  get orders(): Prisma.ordersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.products`: Exposes CRUD operations for the **products** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Products
    * const products = await prisma.products.findMany()
    * ```
    */
  get products(): Prisma.productsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.products_files`: Exposes CRUD operations for the **products_files** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Products_files
    * const products_files = await prisma.products_files.findMany()
    * ```
    */
  get products_files(): Prisma.products_filesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user_sessions`: Exposes CRUD operations for the **user_sessions** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_sessions
    * const user_sessions = await prisma.user_sessions.findMany()
    * ```
    */
  get user_sessions(): Prisma.user_sessionsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.users`: Exposes CRUD operations for the **users** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.users.findMany()
    * ```
    */
  get users(): Prisma.usersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.variant_products`: Exposes CRUD operations for the **variant_products** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Variant_products
    * const variant_products = await prisma.variant_products.findMany()
    * ```
    */
  get variant_products(): Prisma.variant_productsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.direction`: Exposes CRUD operations for the **direction** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Directions
    * const directions = await prisma.direction.findMany()
    * ```
    */
  get direction(): Prisma.directionDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.13.0
   * Query Engine version: 361e86d0ea4987e9f53a565309b3eed797a6bcbd
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    cart_details: 'cart_details',
    carts: 'carts',
    categories: 'categories',
    chat_panels: 'chat_panels',
    chat_participants: 'chat_participants',
    configurations: 'configurations',
    deliveries: 'deliveries',
    delivery_timeline: 'delivery_timeline',
    discounts: 'discounts',
    files: 'files',
    message_files: 'message_files',
    messages: 'messages',
    notifications: 'notifications',
    order_details: 'order_details',
    orders: 'orders',
    products: 'products',
    products_files: 'products_files',
    user_sessions: 'user_sessions',
    users: 'users',
    variant_products: 'variant_products',
    direction: 'direction'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "cart_details" | "carts" | "categories" | "chat_panels" | "chat_participants" | "configurations" | "deliveries" | "delivery_timeline" | "discounts" | "files" | "message_files" | "messages" | "notifications" | "order_details" | "orders" | "products" | "products_files" | "user_sessions" | "users" | "variant_products" | "direction"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      cart_details: {
        payload: Prisma.$cart_detailsPayload<ExtArgs>
        fields: Prisma.cart_detailsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.cart_detailsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cart_detailsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.cart_detailsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cart_detailsPayload>
          }
          findFirst: {
            args: Prisma.cart_detailsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cart_detailsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.cart_detailsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cart_detailsPayload>
          }
          findMany: {
            args: Prisma.cart_detailsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cart_detailsPayload>[]
          }
          create: {
            args: Prisma.cart_detailsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cart_detailsPayload>
          }
          createMany: {
            args: Prisma.cart_detailsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.cart_detailsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cart_detailsPayload>[]
          }
          delete: {
            args: Prisma.cart_detailsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cart_detailsPayload>
          }
          update: {
            args: Prisma.cart_detailsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cart_detailsPayload>
          }
          deleteMany: {
            args: Prisma.cart_detailsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.cart_detailsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.cart_detailsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cart_detailsPayload>[]
          }
          upsert: {
            args: Prisma.cart_detailsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cart_detailsPayload>
          }
          aggregate: {
            args: Prisma.Cart_detailsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCart_details>
          }
          groupBy: {
            args: Prisma.cart_detailsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Cart_detailsGroupByOutputType>[]
          }
          count: {
            args: Prisma.cart_detailsCountArgs<ExtArgs>
            result: $Utils.Optional<Cart_detailsCountAggregateOutputType> | number
          }
        }
      }
      carts: {
        payload: Prisma.$cartsPayload<ExtArgs>
        fields: Prisma.cartsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.cartsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cartsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.cartsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cartsPayload>
          }
          findFirst: {
            args: Prisma.cartsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cartsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.cartsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cartsPayload>
          }
          findMany: {
            args: Prisma.cartsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cartsPayload>[]
          }
          create: {
            args: Prisma.cartsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cartsPayload>
          }
          createMany: {
            args: Prisma.cartsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.cartsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cartsPayload>[]
          }
          delete: {
            args: Prisma.cartsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cartsPayload>
          }
          update: {
            args: Prisma.cartsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cartsPayload>
          }
          deleteMany: {
            args: Prisma.cartsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.cartsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.cartsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cartsPayload>[]
          }
          upsert: {
            args: Prisma.cartsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cartsPayload>
          }
          aggregate: {
            args: Prisma.CartsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCarts>
          }
          groupBy: {
            args: Prisma.cartsGroupByArgs<ExtArgs>
            result: $Utils.Optional<CartsGroupByOutputType>[]
          }
          count: {
            args: Prisma.cartsCountArgs<ExtArgs>
            result: $Utils.Optional<CartsCountAggregateOutputType> | number
          }
        }
      }
      categories: {
        payload: Prisma.$categoriesPayload<ExtArgs>
        fields: Prisma.categoriesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.categoriesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.categoriesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriesPayload>
          }
          findFirst: {
            args: Prisma.categoriesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.categoriesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriesPayload>
          }
          findMany: {
            args: Prisma.categoriesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriesPayload>[]
          }
          create: {
            args: Prisma.categoriesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriesPayload>
          }
          createMany: {
            args: Prisma.categoriesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.categoriesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriesPayload>[]
          }
          delete: {
            args: Prisma.categoriesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriesPayload>
          }
          update: {
            args: Prisma.categoriesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriesPayload>
          }
          deleteMany: {
            args: Prisma.categoriesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.categoriesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.categoriesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriesPayload>[]
          }
          upsert: {
            args: Prisma.categoriesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$categoriesPayload>
          }
          aggregate: {
            args: Prisma.CategoriesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCategories>
          }
          groupBy: {
            args: Prisma.categoriesGroupByArgs<ExtArgs>
            result: $Utils.Optional<CategoriesGroupByOutputType>[]
          }
          count: {
            args: Prisma.categoriesCountArgs<ExtArgs>
            result: $Utils.Optional<CategoriesCountAggregateOutputType> | number
          }
        }
      }
      chat_panels: {
        payload: Prisma.$chat_panelsPayload<ExtArgs>
        fields: Prisma.chat_panelsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.chat_panelsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_panelsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.chat_panelsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_panelsPayload>
          }
          findFirst: {
            args: Prisma.chat_panelsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_panelsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.chat_panelsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_panelsPayload>
          }
          findMany: {
            args: Prisma.chat_panelsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_panelsPayload>[]
          }
          create: {
            args: Prisma.chat_panelsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_panelsPayload>
          }
          createMany: {
            args: Prisma.chat_panelsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.chat_panelsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_panelsPayload>[]
          }
          delete: {
            args: Prisma.chat_panelsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_panelsPayload>
          }
          update: {
            args: Prisma.chat_panelsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_panelsPayload>
          }
          deleteMany: {
            args: Prisma.chat_panelsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.chat_panelsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.chat_panelsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_panelsPayload>[]
          }
          upsert: {
            args: Prisma.chat_panelsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_panelsPayload>
          }
          aggregate: {
            args: Prisma.Chat_panelsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateChat_panels>
          }
          groupBy: {
            args: Prisma.chat_panelsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Chat_panelsGroupByOutputType>[]
          }
          count: {
            args: Prisma.chat_panelsCountArgs<ExtArgs>
            result: $Utils.Optional<Chat_panelsCountAggregateOutputType> | number
          }
        }
      }
      chat_participants: {
        payload: Prisma.$chat_participantsPayload<ExtArgs>
        fields: Prisma.chat_participantsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.chat_participantsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_participantsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.chat_participantsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_participantsPayload>
          }
          findFirst: {
            args: Prisma.chat_participantsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_participantsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.chat_participantsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_participantsPayload>
          }
          findMany: {
            args: Prisma.chat_participantsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_participantsPayload>[]
          }
          create: {
            args: Prisma.chat_participantsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_participantsPayload>
          }
          createMany: {
            args: Prisma.chat_participantsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.chat_participantsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_participantsPayload>[]
          }
          delete: {
            args: Prisma.chat_participantsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_participantsPayload>
          }
          update: {
            args: Prisma.chat_participantsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_participantsPayload>
          }
          deleteMany: {
            args: Prisma.chat_participantsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.chat_participantsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.chat_participantsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_participantsPayload>[]
          }
          upsert: {
            args: Prisma.chat_participantsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$chat_participantsPayload>
          }
          aggregate: {
            args: Prisma.Chat_participantsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateChat_participants>
          }
          groupBy: {
            args: Prisma.chat_participantsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Chat_participantsGroupByOutputType>[]
          }
          count: {
            args: Prisma.chat_participantsCountArgs<ExtArgs>
            result: $Utils.Optional<Chat_participantsCountAggregateOutputType> | number
          }
        }
      }
      configurations: {
        payload: Prisma.$configurationsPayload<ExtArgs>
        fields: Prisma.configurationsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.configurationsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configurationsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.configurationsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configurationsPayload>
          }
          findFirst: {
            args: Prisma.configurationsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configurationsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.configurationsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configurationsPayload>
          }
          findMany: {
            args: Prisma.configurationsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configurationsPayload>[]
          }
          create: {
            args: Prisma.configurationsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configurationsPayload>
          }
          createMany: {
            args: Prisma.configurationsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.configurationsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configurationsPayload>[]
          }
          delete: {
            args: Prisma.configurationsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configurationsPayload>
          }
          update: {
            args: Prisma.configurationsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configurationsPayload>
          }
          deleteMany: {
            args: Prisma.configurationsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.configurationsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.configurationsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configurationsPayload>[]
          }
          upsert: {
            args: Prisma.configurationsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$configurationsPayload>
          }
          aggregate: {
            args: Prisma.ConfigurationsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateConfigurations>
          }
          groupBy: {
            args: Prisma.configurationsGroupByArgs<ExtArgs>
            result: $Utils.Optional<ConfigurationsGroupByOutputType>[]
          }
          count: {
            args: Prisma.configurationsCountArgs<ExtArgs>
            result: $Utils.Optional<ConfigurationsCountAggregateOutputType> | number
          }
        }
      }
      deliveries: {
        payload: Prisma.$deliveriesPayload<ExtArgs>
        fields: Prisma.deliveriesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.deliveriesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$deliveriesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.deliveriesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$deliveriesPayload>
          }
          findFirst: {
            args: Prisma.deliveriesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$deliveriesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.deliveriesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$deliveriesPayload>
          }
          findMany: {
            args: Prisma.deliveriesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$deliveriesPayload>[]
          }
          create: {
            args: Prisma.deliveriesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$deliveriesPayload>
          }
          createMany: {
            args: Prisma.deliveriesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.deliveriesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$deliveriesPayload>[]
          }
          delete: {
            args: Prisma.deliveriesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$deliveriesPayload>
          }
          update: {
            args: Prisma.deliveriesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$deliveriesPayload>
          }
          deleteMany: {
            args: Prisma.deliveriesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.deliveriesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.deliveriesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$deliveriesPayload>[]
          }
          upsert: {
            args: Prisma.deliveriesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$deliveriesPayload>
          }
          aggregate: {
            args: Prisma.DeliveriesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDeliveries>
          }
          groupBy: {
            args: Prisma.deliveriesGroupByArgs<ExtArgs>
            result: $Utils.Optional<DeliveriesGroupByOutputType>[]
          }
          count: {
            args: Prisma.deliveriesCountArgs<ExtArgs>
            result: $Utils.Optional<DeliveriesCountAggregateOutputType> | number
          }
        }
      }
      delivery_timeline: {
        payload: Prisma.$delivery_timelinePayload<ExtArgs>
        fields: Prisma.delivery_timelineFieldRefs
        operations: {
          findUnique: {
            args: Prisma.delivery_timelineFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$delivery_timelinePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.delivery_timelineFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$delivery_timelinePayload>
          }
          findFirst: {
            args: Prisma.delivery_timelineFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$delivery_timelinePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.delivery_timelineFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$delivery_timelinePayload>
          }
          findMany: {
            args: Prisma.delivery_timelineFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$delivery_timelinePayload>[]
          }
          create: {
            args: Prisma.delivery_timelineCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$delivery_timelinePayload>
          }
          createMany: {
            args: Prisma.delivery_timelineCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.delivery_timelineCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$delivery_timelinePayload>[]
          }
          delete: {
            args: Prisma.delivery_timelineDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$delivery_timelinePayload>
          }
          update: {
            args: Prisma.delivery_timelineUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$delivery_timelinePayload>
          }
          deleteMany: {
            args: Prisma.delivery_timelineDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.delivery_timelineUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.delivery_timelineUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$delivery_timelinePayload>[]
          }
          upsert: {
            args: Prisma.delivery_timelineUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$delivery_timelinePayload>
          }
          aggregate: {
            args: Prisma.Delivery_timelineAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDelivery_timeline>
          }
          groupBy: {
            args: Prisma.delivery_timelineGroupByArgs<ExtArgs>
            result: $Utils.Optional<Delivery_timelineGroupByOutputType>[]
          }
          count: {
            args: Prisma.delivery_timelineCountArgs<ExtArgs>
            result: $Utils.Optional<Delivery_timelineCountAggregateOutputType> | number
          }
        }
      }
      discounts: {
        payload: Prisma.$discountsPayload<ExtArgs>
        fields: Prisma.discountsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.discountsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$discountsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.discountsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$discountsPayload>
          }
          findFirst: {
            args: Prisma.discountsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$discountsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.discountsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$discountsPayload>
          }
          findMany: {
            args: Prisma.discountsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$discountsPayload>[]
          }
          create: {
            args: Prisma.discountsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$discountsPayload>
          }
          createMany: {
            args: Prisma.discountsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.discountsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$discountsPayload>[]
          }
          delete: {
            args: Prisma.discountsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$discountsPayload>
          }
          update: {
            args: Prisma.discountsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$discountsPayload>
          }
          deleteMany: {
            args: Prisma.discountsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.discountsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.discountsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$discountsPayload>[]
          }
          upsert: {
            args: Prisma.discountsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$discountsPayload>
          }
          aggregate: {
            args: Prisma.DiscountsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDiscounts>
          }
          groupBy: {
            args: Prisma.discountsGroupByArgs<ExtArgs>
            result: $Utils.Optional<DiscountsGroupByOutputType>[]
          }
          count: {
            args: Prisma.discountsCountArgs<ExtArgs>
            result: $Utils.Optional<DiscountsCountAggregateOutputType> | number
          }
        }
      }
      files: {
        payload: Prisma.$filesPayload<ExtArgs>
        fields: Prisma.filesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.filesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$filesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.filesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$filesPayload>
          }
          findFirst: {
            args: Prisma.filesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$filesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.filesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$filesPayload>
          }
          findMany: {
            args: Prisma.filesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$filesPayload>[]
          }
          create: {
            args: Prisma.filesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$filesPayload>
          }
          createMany: {
            args: Prisma.filesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.filesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$filesPayload>[]
          }
          delete: {
            args: Prisma.filesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$filesPayload>
          }
          update: {
            args: Prisma.filesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$filesPayload>
          }
          deleteMany: {
            args: Prisma.filesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.filesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.filesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$filesPayload>[]
          }
          upsert: {
            args: Prisma.filesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$filesPayload>
          }
          aggregate: {
            args: Prisma.FilesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFiles>
          }
          groupBy: {
            args: Prisma.filesGroupByArgs<ExtArgs>
            result: $Utils.Optional<FilesGroupByOutputType>[]
          }
          count: {
            args: Prisma.filesCountArgs<ExtArgs>
            result: $Utils.Optional<FilesCountAggregateOutputType> | number
          }
        }
      }
      message_files: {
        payload: Prisma.$message_filesPayload<ExtArgs>
        fields: Prisma.message_filesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.message_filesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$message_filesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.message_filesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$message_filesPayload>
          }
          findFirst: {
            args: Prisma.message_filesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$message_filesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.message_filesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$message_filesPayload>
          }
          findMany: {
            args: Prisma.message_filesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$message_filesPayload>[]
          }
          create: {
            args: Prisma.message_filesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$message_filesPayload>
          }
          createMany: {
            args: Prisma.message_filesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.message_filesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$message_filesPayload>[]
          }
          delete: {
            args: Prisma.message_filesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$message_filesPayload>
          }
          update: {
            args: Prisma.message_filesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$message_filesPayload>
          }
          deleteMany: {
            args: Prisma.message_filesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.message_filesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.message_filesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$message_filesPayload>[]
          }
          upsert: {
            args: Prisma.message_filesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$message_filesPayload>
          }
          aggregate: {
            args: Prisma.Message_filesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMessage_files>
          }
          groupBy: {
            args: Prisma.message_filesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Message_filesGroupByOutputType>[]
          }
          count: {
            args: Prisma.message_filesCountArgs<ExtArgs>
            result: $Utils.Optional<Message_filesCountAggregateOutputType> | number
          }
        }
      }
      messages: {
        payload: Prisma.$messagesPayload<ExtArgs>
        fields: Prisma.messagesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.messagesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$messagesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.messagesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$messagesPayload>
          }
          findFirst: {
            args: Prisma.messagesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$messagesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.messagesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$messagesPayload>
          }
          findMany: {
            args: Prisma.messagesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$messagesPayload>[]
          }
          create: {
            args: Prisma.messagesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$messagesPayload>
          }
          createMany: {
            args: Prisma.messagesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.messagesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$messagesPayload>[]
          }
          delete: {
            args: Prisma.messagesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$messagesPayload>
          }
          update: {
            args: Prisma.messagesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$messagesPayload>
          }
          deleteMany: {
            args: Prisma.messagesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.messagesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.messagesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$messagesPayload>[]
          }
          upsert: {
            args: Prisma.messagesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$messagesPayload>
          }
          aggregate: {
            args: Prisma.MessagesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMessages>
          }
          groupBy: {
            args: Prisma.messagesGroupByArgs<ExtArgs>
            result: $Utils.Optional<MessagesGroupByOutputType>[]
          }
          count: {
            args: Prisma.messagesCountArgs<ExtArgs>
            result: $Utils.Optional<MessagesCountAggregateOutputType> | number
          }
        }
      }
      notifications: {
        payload: Prisma.$notificationsPayload<ExtArgs>
        fields: Prisma.notificationsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.notificationsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.notificationsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationsPayload>
          }
          findFirst: {
            args: Prisma.notificationsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.notificationsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationsPayload>
          }
          findMany: {
            args: Prisma.notificationsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationsPayload>[]
          }
          create: {
            args: Prisma.notificationsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationsPayload>
          }
          createMany: {
            args: Prisma.notificationsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.notificationsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationsPayload>[]
          }
          delete: {
            args: Prisma.notificationsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationsPayload>
          }
          update: {
            args: Prisma.notificationsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationsPayload>
          }
          deleteMany: {
            args: Prisma.notificationsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.notificationsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.notificationsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationsPayload>[]
          }
          upsert: {
            args: Prisma.notificationsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$notificationsPayload>
          }
          aggregate: {
            args: Prisma.NotificationsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateNotifications>
          }
          groupBy: {
            args: Prisma.notificationsGroupByArgs<ExtArgs>
            result: $Utils.Optional<NotificationsGroupByOutputType>[]
          }
          count: {
            args: Prisma.notificationsCountArgs<ExtArgs>
            result: $Utils.Optional<NotificationsCountAggregateOutputType> | number
          }
        }
      }
      order_details: {
        payload: Prisma.$order_detailsPayload<ExtArgs>
        fields: Prisma.order_detailsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.order_detailsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_detailsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.order_detailsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_detailsPayload>
          }
          findFirst: {
            args: Prisma.order_detailsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_detailsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.order_detailsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_detailsPayload>
          }
          findMany: {
            args: Prisma.order_detailsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_detailsPayload>[]
          }
          create: {
            args: Prisma.order_detailsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_detailsPayload>
          }
          createMany: {
            args: Prisma.order_detailsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.order_detailsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_detailsPayload>[]
          }
          delete: {
            args: Prisma.order_detailsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_detailsPayload>
          }
          update: {
            args: Prisma.order_detailsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_detailsPayload>
          }
          deleteMany: {
            args: Prisma.order_detailsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.order_detailsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.order_detailsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_detailsPayload>[]
          }
          upsert: {
            args: Prisma.order_detailsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$order_detailsPayload>
          }
          aggregate: {
            args: Prisma.Order_detailsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrder_details>
          }
          groupBy: {
            args: Prisma.order_detailsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Order_detailsGroupByOutputType>[]
          }
          count: {
            args: Prisma.order_detailsCountArgs<ExtArgs>
            result: $Utils.Optional<Order_detailsCountAggregateOutputType> | number
          }
        }
      }
      orders: {
        payload: Prisma.$ordersPayload<ExtArgs>
        fields: Prisma.ordersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ordersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ordersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload>
          }
          findFirst: {
            args: Prisma.ordersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ordersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload>
          }
          findMany: {
            args: Prisma.ordersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload>[]
          }
          create: {
            args: Prisma.ordersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload>
          }
          createMany: {
            args: Prisma.ordersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ordersCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload>[]
          }
          delete: {
            args: Prisma.ordersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload>
          }
          update: {
            args: Prisma.ordersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload>
          }
          deleteMany: {
            args: Prisma.ordersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ordersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ordersUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload>[]
          }
          upsert: {
            args: Prisma.ordersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ordersPayload>
          }
          aggregate: {
            args: Prisma.OrdersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrders>
          }
          groupBy: {
            args: Prisma.ordersGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrdersGroupByOutputType>[]
          }
          count: {
            args: Prisma.ordersCountArgs<ExtArgs>
            result: $Utils.Optional<OrdersCountAggregateOutputType> | number
          }
        }
      }
      products: {
        payload: Prisma.$productsPayload<ExtArgs>
        fields: Prisma.productsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.productsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.productsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productsPayload>
          }
          findFirst: {
            args: Prisma.productsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.productsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productsPayload>
          }
          findMany: {
            args: Prisma.productsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productsPayload>[]
          }
          create: {
            args: Prisma.productsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productsPayload>
          }
          createMany: {
            args: Prisma.productsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.productsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productsPayload>[]
          }
          delete: {
            args: Prisma.productsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productsPayload>
          }
          update: {
            args: Prisma.productsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productsPayload>
          }
          deleteMany: {
            args: Prisma.productsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.productsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.productsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productsPayload>[]
          }
          upsert: {
            args: Prisma.productsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$productsPayload>
          }
          aggregate: {
            args: Prisma.ProductsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProducts>
          }
          groupBy: {
            args: Prisma.productsGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductsGroupByOutputType>[]
          }
          count: {
            args: Prisma.productsCountArgs<ExtArgs>
            result: $Utils.Optional<ProductsCountAggregateOutputType> | number
          }
        }
      }
      products_files: {
        payload: Prisma.$products_filesPayload<ExtArgs>
        fields: Prisma.products_filesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.products_filesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$products_filesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.products_filesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$products_filesPayload>
          }
          findFirst: {
            args: Prisma.products_filesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$products_filesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.products_filesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$products_filesPayload>
          }
          findMany: {
            args: Prisma.products_filesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$products_filesPayload>[]
          }
          create: {
            args: Prisma.products_filesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$products_filesPayload>
          }
          createMany: {
            args: Prisma.products_filesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.products_filesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$products_filesPayload>[]
          }
          delete: {
            args: Prisma.products_filesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$products_filesPayload>
          }
          update: {
            args: Prisma.products_filesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$products_filesPayload>
          }
          deleteMany: {
            args: Prisma.products_filesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.products_filesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.products_filesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$products_filesPayload>[]
          }
          upsert: {
            args: Prisma.products_filesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$products_filesPayload>
          }
          aggregate: {
            args: Prisma.Products_filesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProducts_files>
          }
          groupBy: {
            args: Prisma.products_filesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Products_filesGroupByOutputType>[]
          }
          count: {
            args: Prisma.products_filesCountArgs<ExtArgs>
            result: $Utils.Optional<Products_filesCountAggregateOutputType> | number
          }
        }
      }
      user_sessions: {
        payload: Prisma.$user_sessionsPayload<ExtArgs>
        fields: Prisma.user_sessionsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.user_sessionsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_sessionsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.user_sessionsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_sessionsPayload>
          }
          findFirst: {
            args: Prisma.user_sessionsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_sessionsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.user_sessionsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_sessionsPayload>
          }
          findMany: {
            args: Prisma.user_sessionsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_sessionsPayload>[]
          }
          create: {
            args: Prisma.user_sessionsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_sessionsPayload>
          }
          createMany: {
            args: Prisma.user_sessionsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.user_sessionsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_sessionsPayload>[]
          }
          delete: {
            args: Prisma.user_sessionsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_sessionsPayload>
          }
          update: {
            args: Prisma.user_sessionsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_sessionsPayload>
          }
          deleteMany: {
            args: Prisma.user_sessionsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.user_sessionsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.user_sessionsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_sessionsPayload>[]
          }
          upsert: {
            args: Prisma.user_sessionsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_sessionsPayload>
          }
          aggregate: {
            args: Prisma.User_sessionsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser_sessions>
          }
          groupBy: {
            args: Prisma.user_sessionsGroupByArgs<ExtArgs>
            result: $Utils.Optional<User_sessionsGroupByOutputType>[]
          }
          count: {
            args: Prisma.user_sessionsCountArgs<ExtArgs>
            result: $Utils.Optional<User_sessionsCountAggregateOutputType> | number
          }
        }
      }
      users: {
        payload: Prisma.$usersPayload<ExtArgs>
        fields: Prisma.usersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.usersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.usersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          findFirst: {
            args: Prisma.usersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.usersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          findMany: {
            args: Prisma.usersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>[]
          }
          create: {
            args: Prisma.usersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          createMany: {
            args: Prisma.usersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.usersCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>[]
          }
          delete: {
            args: Prisma.usersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          update: {
            args: Prisma.usersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          deleteMany: {
            args: Prisma.usersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.usersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.usersUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>[]
          }
          upsert: {
            args: Prisma.usersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          aggregate: {
            args: Prisma.UsersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsers>
          }
          groupBy: {
            args: Prisma.usersGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsersGroupByOutputType>[]
          }
          count: {
            args: Prisma.usersCountArgs<ExtArgs>
            result: $Utils.Optional<UsersCountAggregateOutputType> | number
          }
        }
      }
      variant_products: {
        payload: Prisma.$variant_productsPayload<ExtArgs>
        fields: Prisma.variant_productsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.variant_productsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$variant_productsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.variant_productsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$variant_productsPayload>
          }
          findFirst: {
            args: Prisma.variant_productsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$variant_productsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.variant_productsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$variant_productsPayload>
          }
          findMany: {
            args: Prisma.variant_productsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$variant_productsPayload>[]
          }
          create: {
            args: Prisma.variant_productsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$variant_productsPayload>
          }
          createMany: {
            args: Prisma.variant_productsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.variant_productsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$variant_productsPayload>[]
          }
          delete: {
            args: Prisma.variant_productsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$variant_productsPayload>
          }
          update: {
            args: Prisma.variant_productsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$variant_productsPayload>
          }
          deleteMany: {
            args: Prisma.variant_productsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.variant_productsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.variant_productsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$variant_productsPayload>[]
          }
          upsert: {
            args: Prisma.variant_productsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$variant_productsPayload>
          }
          aggregate: {
            args: Prisma.Variant_productsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVariant_products>
          }
          groupBy: {
            args: Prisma.variant_productsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Variant_productsGroupByOutputType>[]
          }
          count: {
            args: Prisma.variant_productsCountArgs<ExtArgs>
            result: $Utils.Optional<Variant_productsCountAggregateOutputType> | number
          }
        }
      }
      direction: {
        payload: Prisma.$directionPayload<ExtArgs>
        fields: Prisma.directionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.directionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$directionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.directionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$directionPayload>
          }
          findFirst: {
            args: Prisma.directionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$directionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.directionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$directionPayload>
          }
          findMany: {
            args: Prisma.directionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$directionPayload>[]
          }
          create: {
            args: Prisma.directionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$directionPayload>
          }
          createMany: {
            args: Prisma.directionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.directionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$directionPayload>[]
          }
          delete: {
            args: Prisma.directionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$directionPayload>
          }
          update: {
            args: Prisma.directionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$directionPayload>
          }
          deleteMany: {
            args: Prisma.directionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.directionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.directionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$directionPayload>[]
          }
          upsert: {
            args: Prisma.directionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$directionPayload>
          }
          aggregate: {
            args: Prisma.DirectionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDirection>
          }
          groupBy: {
            args: Prisma.directionGroupByArgs<ExtArgs>
            result: $Utils.Optional<DirectionGroupByOutputType>[]
          }
          count: {
            args: Prisma.directionCountArgs<ExtArgs>
            result: $Utils.Optional<DirectionCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Shorthand for `emit: 'stdout'`
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events only
     * log: [
     *   { emit: 'event', level: 'query' },
     *   { emit: 'event', level: 'info' },
     *   { emit: 'event', level: 'warn' }
     *   { emit: 'event', level: 'error' }
     * ]
     * 
     * / Emit as events and log to stdout
     * og: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * 
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    cart_details?: cart_detailsOmit
    carts?: cartsOmit
    categories?: categoriesOmit
    chat_panels?: chat_panelsOmit
    chat_participants?: chat_participantsOmit
    configurations?: configurationsOmit
    deliveries?: deliveriesOmit
    delivery_timeline?: delivery_timelineOmit
    discounts?: discountsOmit
    files?: filesOmit
    message_files?: message_filesOmit
    messages?: messagesOmit
    notifications?: notificationsOmit
    order_details?: order_detailsOmit
    orders?: ordersOmit
    products?: productsOmit
    products_files?: products_filesOmit
    user_sessions?: user_sessionsOmit
    users?: usersOmit
    variant_products?: variant_productsOmit
    direction?: directionOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type CheckIsLogLevel<T> = T extends LogLevel ? T : never;

  export type GetLogType<T> = CheckIsLogLevel<
    T extends LogDefinition ? T['level'] : T
  >;

  export type GetEvents<T extends any[]> = T extends Array<LogLevel | LogDefinition>
    ? GetLogType<T[number]>
    : never;

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type CartsCountOutputType
   */

  export type CartsCountOutputType = {
    cart_details: number
  }

  export type CartsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cart_details?: boolean | CartsCountOutputTypeCountCart_detailsArgs
  }

  // Custom InputTypes
  /**
   * CartsCountOutputType without action
   */
  export type CartsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CartsCountOutputType
     */
    select?: CartsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CartsCountOutputType without action
   */
  export type CartsCountOutputTypeCountCart_detailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cart_detailsWhereInput
  }


  /**
   * Count Type CategoriesCountOutputType
   */

  export type CategoriesCountOutputType = {
    other_categories: number
    products: number
  }

  export type CategoriesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    other_categories?: boolean | CategoriesCountOutputTypeCountOther_categoriesArgs
    products?: boolean | CategoriesCountOutputTypeCountProductsArgs
  }

  // Custom InputTypes
  /**
   * CategoriesCountOutputType without action
   */
  export type CategoriesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoriesCountOutputType
     */
    select?: CategoriesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CategoriesCountOutputType without action
   */
  export type CategoriesCountOutputTypeCountOther_categoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: categoriesWhereInput
  }

  /**
   * CategoriesCountOutputType without action
   */
  export type CategoriesCountOutputTypeCountProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: productsWhereInput
  }


  /**
   * Count Type Chat_panelsCountOutputType
   */

  export type Chat_panelsCountOutputType = {
    chat_participants: number
    messages: number
  }

  export type Chat_panelsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    chat_participants?: boolean | Chat_panelsCountOutputTypeCountChat_participantsArgs
    messages?: boolean | Chat_panelsCountOutputTypeCountMessagesArgs
  }

  // Custom InputTypes
  /**
   * Chat_panelsCountOutputType without action
   */
  export type Chat_panelsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Chat_panelsCountOutputType
     */
    select?: Chat_panelsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Chat_panelsCountOutputType without action
   */
  export type Chat_panelsCountOutputTypeCountChat_participantsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: chat_participantsWhereInput
  }

  /**
   * Chat_panelsCountOutputType without action
   */
  export type Chat_panelsCountOutputTypeCountMessagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: messagesWhereInput
  }


  /**
   * Count Type DeliveriesCountOutputType
   */

  export type DeliveriesCountOutputType = {
    delivery_timeline: number
  }

  export type DeliveriesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    delivery_timeline?: boolean | DeliveriesCountOutputTypeCountDelivery_timelineArgs
  }

  // Custom InputTypes
  /**
   * DeliveriesCountOutputType without action
   */
  export type DeliveriesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DeliveriesCountOutputType
     */
    select?: DeliveriesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DeliveriesCountOutputType without action
   */
  export type DeliveriesCountOutputTypeCountDelivery_timelineArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: delivery_timelineWhereInput
  }


  /**
   * Count Type FilesCountOutputType
   */

  export type FilesCountOutputType = {
    message_files: number
    products_files: number
  }

  export type FilesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    message_files?: boolean | FilesCountOutputTypeCountMessage_filesArgs
    products_files?: boolean | FilesCountOutputTypeCountProducts_filesArgs
  }

  // Custom InputTypes
  /**
   * FilesCountOutputType without action
   */
  export type FilesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FilesCountOutputType
     */
    select?: FilesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * FilesCountOutputType without action
   */
  export type FilesCountOutputTypeCountMessage_filesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: message_filesWhereInput
  }

  /**
   * FilesCountOutputType without action
   */
  export type FilesCountOutputTypeCountProducts_filesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: products_filesWhereInput
  }


  /**
   * Count Type MessagesCountOutputType
   */

  export type MessagesCountOutputType = {
    message_files: number
    other_messages: number
  }

  export type MessagesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    message_files?: boolean | MessagesCountOutputTypeCountMessage_filesArgs
    other_messages?: boolean | MessagesCountOutputTypeCountOther_messagesArgs
  }

  // Custom InputTypes
  /**
   * MessagesCountOutputType without action
   */
  export type MessagesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MessagesCountOutputType
     */
    select?: MessagesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * MessagesCountOutputType without action
   */
  export type MessagesCountOutputTypeCountMessage_filesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: message_filesWhereInput
  }

  /**
   * MessagesCountOutputType without action
   */
  export type MessagesCountOutputTypeCountOther_messagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: messagesWhereInput
  }


  /**
   * Count Type OrdersCountOutputType
   */

  export type OrdersCountOutputType = {
    order_details: number
  }

  export type OrdersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order_details?: boolean | OrdersCountOutputTypeCountOrder_detailsArgs
  }

  // Custom InputTypes
  /**
   * OrdersCountOutputType without action
   */
  export type OrdersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrdersCountOutputType
     */
    select?: OrdersCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * OrdersCountOutputType without action
   */
  export type OrdersCountOutputTypeCountOrder_detailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: order_detailsWhereInput
  }


  /**
   * Count Type ProductsCountOutputType
   */

  export type ProductsCountOutputType = {
    products_files: number
    variant_products: number
  }

  export type ProductsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    products_files?: boolean | ProductsCountOutputTypeCountProducts_filesArgs
    variant_products?: boolean | ProductsCountOutputTypeCountVariant_productsArgs
  }

  // Custom InputTypes
  /**
   * ProductsCountOutputType without action
   */
  export type ProductsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductsCountOutputType
     */
    select?: ProductsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProductsCountOutputType without action
   */
  export type ProductsCountOutputTypeCountProducts_filesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: products_filesWhereInput
  }

  /**
   * ProductsCountOutputType without action
   */
  export type ProductsCountOutputTypeCountVariant_productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: variant_productsWhereInput
  }


  /**
   * Count Type UsersCountOutputType
   */

  export type UsersCountOutputType = {
    carts: number
    categories: number
    chat_participants: number
    configurations: number
    deliveries: number
    direction: number
    discounts: number
    messages: number
    notifications: number
    orders_orders_retailer_idTousers: number
    orders_orders_wholesaler_idTousers: number
    products: number
    user_sessions: number
  }

  export type UsersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    carts?: boolean | UsersCountOutputTypeCountCartsArgs
    categories?: boolean | UsersCountOutputTypeCountCategoriesArgs
    chat_participants?: boolean | UsersCountOutputTypeCountChat_participantsArgs
    configurations?: boolean | UsersCountOutputTypeCountConfigurationsArgs
    deliveries?: boolean | UsersCountOutputTypeCountDeliveriesArgs
    direction?: boolean | UsersCountOutputTypeCountDirectionArgs
    discounts?: boolean | UsersCountOutputTypeCountDiscountsArgs
    messages?: boolean | UsersCountOutputTypeCountMessagesArgs
    notifications?: boolean | UsersCountOutputTypeCountNotificationsArgs
    orders_orders_retailer_idTousers?: boolean | UsersCountOutputTypeCountOrders_orders_retailer_idTousersArgs
    orders_orders_wholesaler_idTousers?: boolean | UsersCountOutputTypeCountOrders_orders_wholesaler_idTousersArgs
    products?: boolean | UsersCountOutputTypeCountProductsArgs
    user_sessions?: boolean | UsersCountOutputTypeCountUser_sessionsArgs
  }

  // Custom InputTypes
  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsersCountOutputType
     */
    select?: UsersCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountCartsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cartsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountCategoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: categoriesWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountChat_participantsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: chat_participantsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountConfigurationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: configurationsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountDeliveriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: deliveriesWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountDirectionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: directionWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountDiscountsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: discountsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountMessagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: messagesWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountNotificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: notificationsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountOrders_orders_retailer_idTousersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ordersWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountOrders_orders_wholesaler_idTousersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ordersWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: productsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountUser_sessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_sessionsWhereInput
  }


  /**
   * Count Type Variant_productsCountOutputType
   */

  export type Variant_productsCountOutputType = {
    cart_details: number
    order_details: number
  }

  export type Variant_productsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cart_details?: boolean | Variant_productsCountOutputTypeCountCart_detailsArgs
    order_details?: boolean | Variant_productsCountOutputTypeCountOrder_detailsArgs
  }

  // Custom InputTypes
  /**
   * Variant_productsCountOutputType without action
   */
  export type Variant_productsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Variant_productsCountOutputType
     */
    select?: Variant_productsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Variant_productsCountOutputType without action
   */
  export type Variant_productsCountOutputTypeCountCart_detailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cart_detailsWhereInput
  }

  /**
   * Variant_productsCountOutputType without action
   */
  export type Variant_productsCountOutputTypeCountOrder_detailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: order_detailsWhereInput
  }


  /**
   * Count Type DirectionCountOutputType
   */

  export type DirectionCountOutputType = {
    orders: number
  }

  export type DirectionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orders?: boolean | DirectionCountOutputTypeCountOrdersArgs
  }

  // Custom InputTypes
  /**
   * DirectionCountOutputType without action
   */
  export type DirectionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the DirectionCountOutputType
     */
    select?: DirectionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * DirectionCountOutputType without action
   */
  export type DirectionCountOutputTypeCountOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ordersWhereInput
  }


  /**
   * Models
   */

  /**
   * Model cart_details
   */

  export type AggregateCart_details = {
    _count: Cart_detailsCountAggregateOutputType | null
    _avg: Cart_detailsAvgAggregateOutputType | null
    _sum: Cart_detailsSumAggregateOutputType | null
    _min: Cart_detailsMinAggregateOutputType | null
    _max: Cart_detailsMaxAggregateOutputType | null
  }

  export type Cart_detailsAvgAggregateOutputType = {
    id: number | null
    cart_id: number | null
    variant_products_id: number | null
    quantity: number | null
  }

  export type Cart_detailsSumAggregateOutputType = {
    id: bigint | null
    cart_id: bigint | null
    variant_products_id: bigint | null
    quantity: number | null
  }

  export type Cart_detailsMinAggregateOutputType = {
    id: bigint | null
    cart_id: bigint | null
    variant_products_id: bigint | null
    quantity: number | null
    created_at: Date | null
  }

  export type Cart_detailsMaxAggregateOutputType = {
    id: bigint | null
    cart_id: bigint | null
    variant_products_id: bigint | null
    quantity: number | null
    created_at: Date | null
  }

  export type Cart_detailsCountAggregateOutputType = {
    id: number
    cart_id: number
    variant_products_id: number
    quantity: number
    created_at: number
    _all: number
  }


  export type Cart_detailsAvgAggregateInputType = {
    id?: true
    cart_id?: true
    variant_products_id?: true
    quantity?: true
  }

  export type Cart_detailsSumAggregateInputType = {
    id?: true
    cart_id?: true
    variant_products_id?: true
    quantity?: true
  }

  export type Cart_detailsMinAggregateInputType = {
    id?: true
    cart_id?: true
    variant_products_id?: true
    quantity?: true
    created_at?: true
  }

  export type Cart_detailsMaxAggregateInputType = {
    id?: true
    cart_id?: true
    variant_products_id?: true
    quantity?: true
    created_at?: true
  }

  export type Cart_detailsCountAggregateInputType = {
    id?: true
    cart_id?: true
    variant_products_id?: true
    quantity?: true
    created_at?: true
    _all?: true
  }

  export type Cart_detailsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cart_details to aggregate.
     */
    where?: cart_detailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cart_details to fetch.
     */
    orderBy?: cart_detailsOrderByWithRelationInput | cart_detailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: cart_detailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cart_details from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cart_details.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned cart_details
    **/
    _count?: true | Cart_detailsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Cart_detailsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Cart_detailsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Cart_detailsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Cart_detailsMaxAggregateInputType
  }

  export type GetCart_detailsAggregateType<T extends Cart_detailsAggregateArgs> = {
        [P in keyof T & keyof AggregateCart_details]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCart_details[P]>
      : GetScalarType<T[P], AggregateCart_details[P]>
  }




  export type cart_detailsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cart_detailsWhereInput
    orderBy?: cart_detailsOrderByWithAggregationInput | cart_detailsOrderByWithAggregationInput[]
    by: Cart_detailsScalarFieldEnum[] | Cart_detailsScalarFieldEnum
    having?: cart_detailsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Cart_detailsCountAggregateInputType | true
    _avg?: Cart_detailsAvgAggregateInputType
    _sum?: Cart_detailsSumAggregateInputType
    _min?: Cart_detailsMinAggregateInputType
    _max?: Cart_detailsMaxAggregateInputType
  }

  export type Cart_detailsGroupByOutputType = {
    id: bigint
    cart_id: bigint
    variant_products_id: bigint | null
    quantity: number
    created_at: Date
    _count: Cart_detailsCountAggregateOutputType | null
    _avg: Cart_detailsAvgAggregateOutputType | null
    _sum: Cart_detailsSumAggregateOutputType | null
    _min: Cart_detailsMinAggregateOutputType | null
    _max: Cart_detailsMaxAggregateOutputType | null
  }

  type GetCart_detailsGroupByPayload<T extends cart_detailsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Cart_detailsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Cart_detailsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Cart_detailsGroupByOutputType[P]>
            : GetScalarType<T[P], Cart_detailsGroupByOutputType[P]>
        }
      >
    >


  export type cart_detailsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cart_id?: boolean
    variant_products_id?: boolean
    quantity?: boolean
    created_at?: boolean
    carts?: boolean | cartsDefaultArgs<ExtArgs>
    variant_products?: boolean | cart_details$variant_productsArgs<ExtArgs>
  }, ExtArgs["result"]["cart_details"]>

  export type cart_detailsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cart_id?: boolean
    variant_products_id?: boolean
    quantity?: boolean
    created_at?: boolean
    carts?: boolean | cartsDefaultArgs<ExtArgs>
    variant_products?: boolean | cart_details$variant_productsArgs<ExtArgs>
  }, ExtArgs["result"]["cart_details"]>

  export type cart_detailsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cart_id?: boolean
    variant_products_id?: boolean
    quantity?: boolean
    created_at?: boolean
    carts?: boolean | cartsDefaultArgs<ExtArgs>
    variant_products?: boolean | cart_details$variant_productsArgs<ExtArgs>
  }, ExtArgs["result"]["cart_details"]>

  export type cart_detailsSelectScalar = {
    id?: boolean
    cart_id?: boolean
    variant_products_id?: boolean
    quantity?: boolean
    created_at?: boolean
  }

  export type cart_detailsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "cart_id" | "variant_products_id" | "quantity" | "created_at", ExtArgs["result"]["cart_details"]>
  export type cart_detailsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    carts?: boolean | cartsDefaultArgs<ExtArgs>
    variant_products?: boolean | cart_details$variant_productsArgs<ExtArgs>
  }
  export type cart_detailsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    carts?: boolean | cartsDefaultArgs<ExtArgs>
    variant_products?: boolean | cart_details$variant_productsArgs<ExtArgs>
  }
  export type cart_detailsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    carts?: boolean | cartsDefaultArgs<ExtArgs>
    variant_products?: boolean | cart_details$variant_productsArgs<ExtArgs>
  }

  export type $cart_detailsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "cart_details"
    objects: {
      carts: Prisma.$cartsPayload<ExtArgs>
      variant_products: Prisma.$variant_productsPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      cart_id: bigint
      variant_products_id: bigint | null
      quantity: number
      created_at: Date
    }, ExtArgs["result"]["cart_details"]>
    composites: {}
  }

  type cart_detailsGetPayload<S extends boolean | null | undefined | cart_detailsDefaultArgs> = $Result.GetResult<Prisma.$cart_detailsPayload, S>

  type cart_detailsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<cart_detailsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Cart_detailsCountAggregateInputType | true
    }

  export interface cart_detailsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['cart_details'], meta: { name: 'cart_details' } }
    /**
     * Find zero or one Cart_details that matches the filter.
     * @param {cart_detailsFindUniqueArgs} args - Arguments to find a Cart_details
     * @example
     * // Get one Cart_details
     * const cart_details = await prisma.cart_details.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends cart_detailsFindUniqueArgs>(args: SelectSubset<T, cart_detailsFindUniqueArgs<ExtArgs>>): Prisma__cart_detailsClient<$Result.GetResult<Prisma.$cart_detailsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Cart_details that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {cart_detailsFindUniqueOrThrowArgs} args - Arguments to find a Cart_details
     * @example
     * // Get one Cart_details
     * const cart_details = await prisma.cart_details.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends cart_detailsFindUniqueOrThrowArgs>(args: SelectSubset<T, cart_detailsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__cart_detailsClient<$Result.GetResult<Prisma.$cart_detailsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cart_details that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cart_detailsFindFirstArgs} args - Arguments to find a Cart_details
     * @example
     * // Get one Cart_details
     * const cart_details = await prisma.cart_details.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends cart_detailsFindFirstArgs>(args?: SelectSubset<T, cart_detailsFindFirstArgs<ExtArgs>>): Prisma__cart_detailsClient<$Result.GetResult<Prisma.$cart_detailsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Cart_details that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cart_detailsFindFirstOrThrowArgs} args - Arguments to find a Cart_details
     * @example
     * // Get one Cart_details
     * const cart_details = await prisma.cart_details.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends cart_detailsFindFirstOrThrowArgs>(args?: SelectSubset<T, cart_detailsFindFirstOrThrowArgs<ExtArgs>>): Prisma__cart_detailsClient<$Result.GetResult<Prisma.$cart_detailsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Cart_details that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cart_detailsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Cart_details
     * const cart_details = await prisma.cart_details.findMany()
     * 
     * // Get first 10 Cart_details
     * const cart_details = await prisma.cart_details.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cart_detailsWithIdOnly = await prisma.cart_details.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends cart_detailsFindManyArgs>(args?: SelectSubset<T, cart_detailsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cart_detailsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Cart_details.
     * @param {cart_detailsCreateArgs} args - Arguments to create a Cart_details.
     * @example
     * // Create one Cart_details
     * const Cart_details = await prisma.cart_details.create({
     *   data: {
     *     // ... data to create a Cart_details
     *   }
     * })
     * 
     */
    create<T extends cart_detailsCreateArgs>(args: SelectSubset<T, cart_detailsCreateArgs<ExtArgs>>): Prisma__cart_detailsClient<$Result.GetResult<Prisma.$cart_detailsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Cart_details.
     * @param {cart_detailsCreateManyArgs} args - Arguments to create many Cart_details.
     * @example
     * // Create many Cart_details
     * const cart_details = await prisma.cart_details.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends cart_detailsCreateManyArgs>(args?: SelectSubset<T, cart_detailsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Cart_details and returns the data saved in the database.
     * @param {cart_detailsCreateManyAndReturnArgs} args - Arguments to create many Cart_details.
     * @example
     * // Create many Cart_details
     * const cart_details = await prisma.cart_details.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Cart_details and only return the `id`
     * const cart_detailsWithIdOnly = await prisma.cart_details.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends cart_detailsCreateManyAndReturnArgs>(args?: SelectSubset<T, cart_detailsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cart_detailsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Cart_details.
     * @param {cart_detailsDeleteArgs} args - Arguments to delete one Cart_details.
     * @example
     * // Delete one Cart_details
     * const Cart_details = await prisma.cart_details.delete({
     *   where: {
     *     // ... filter to delete one Cart_details
     *   }
     * })
     * 
     */
    delete<T extends cart_detailsDeleteArgs>(args: SelectSubset<T, cart_detailsDeleteArgs<ExtArgs>>): Prisma__cart_detailsClient<$Result.GetResult<Prisma.$cart_detailsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Cart_details.
     * @param {cart_detailsUpdateArgs} args - Arguments to update one Cart_details.
     * @example
     * // Update one Cart_details
     * const cart_details = await prisma.cart_details.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends cart_detailsUpdateArgs>(args: SelectSubset<T, cart_detailsUpdateArgs<ExtArgs>>): Prisma__cart_detailsClient<$Result.GetResult<Prisma.$cart_detailsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Cart_details.
     * @param {cart_detailsDeleteManyArgs} args - Arguments to filter Cart_details to delete.
     * @example
     * // Delete a few Cart_details
     * const { count } = await prisma.cart_details.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends cart_detailsDeleteManyArgs>(args?: SelectSubset<T, cart_detailsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cart_details.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cart_detailsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Cart_details
     * const cart_details = await prisma.cart_details.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends cart_detailsUpdateManyArgs>(args: SelectSubset<T, cart_detailsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cart_details and returns the data updated in the database.
     * @param {cart_detailsUpdateManyAndReturnArgs} args - Arguments to update many Cart_details.
     * @example
     * // Update many Cart_details
     * const cart_details = await prisma.cart_details.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Cart_details and only return the `id`
     * const cart_detailsWithIdOnly = await prisma.cart_details.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends cart_detailsUpdateManyAndReturnArgs>(args: SelectSubset<T, cart_detailsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cart_detailsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Cart_details.
     * @param {cart_detailsUpsertArgs} args - Arguments to update or create a Cart_details.
     * @example
     * // Update or create a Cart_details
     * const cart_details = await prisma.cart_details.upsert({
     *   create: {
     *     // ... data to create a Cart_details
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Cart_details we want to update
     *   }
     * })
     */
    upsert<T extends cart_detailsUpsertArgs>(args: SelectSubset<T, cart_detailsUpsertArgs<ExtArgs>>): Prisma__cart_detailsClient<$Result.GetResult<Prisma.$cart_detailsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Cart_details.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cart_detailsCountArgs} args - Arguments to filter Cart_details to count.
     * @example
     * // Count the number of Cart_details
     * const count = await prisma.cart_details.count({
     *   where: {
     *     // ... the filter for the Cart_details we want to count
     *   }
     * })
    **/
    count<T extends cart_detailsCountArgs>(
      args?: Subset<T, cart_detailsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Cart_detailsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Cart_details.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Cart_detailsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Cart_detailsAggregateArgs>(args: Subset<T, Cart_detailsAggregateArgs>): Prisma.PrismaPromise<GetCart_detailsAggregateType<T>>

    /**
     * Group by Cart_details.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cart_detailsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends cart_detailsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: cart_detailsGroupByArgs['orderBy'] }
        : { orderBy?: cart_detailsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, cart_detailsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCart_detailsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the cart_details model
   */
  readonly fields: cart_detailsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for cart_details.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__cart_detailsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    carts<T extends cartsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, cartsDefaultArgs<ExtArgs>>): Prisma__cartsClient<$Result.GetResult<Prisma.$cartsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    variant_products<T extends cart_details$variant_productsArgs<ExtArgs> = {}>(args?: Subset<T, cart_details$variant_productsArgs<ExtArgs>>): Prisma__variant_productsClient<$Result.GetResult<Prisma.$variant_productsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the cart_details model
   */
  interface cart_detailsFieldRefs {
    readonly id: FieldRef<"cart_details", 'BigInt'>
    readonly cart_id: FieldRef<"cart_details", 'BigInt'>
    readonly variant_products_id: FieldRef<"cart_details", 'BigInt'>
    readonly quantity: FieldRef<"cart_details", 'Int'>
    readonly created_at: FieldRef<"cart_details", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * cart_details findUnique
   */
  export type cart_detailsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cart_details
     */
    select?: cart_detailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cart_details
     */
    omit?: cart_detailsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cart_detailsInclude<ExtArgs> | null
    /**
     * Filter, which cart_details to fetch.
     */
    where: cart_detailsWhereUniqueInput
  }

  /**
   * cart_details findUniqueOrThrow
   */
  export type cart_detailsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cart_details
     */
    select?: cart_detailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cart_details
     */
    omit?: cart_detailsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cart_detailsInclude<ExtArgs> | null
    /**
     * Filter, which cart_details to fetch.
     */
    where: cart_detailsWhereUniqueInput
  }

  /**
   * cart_details findFirst
   */
  export type cart_detailsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cart_details
     */
    select?: cart_detailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cart_details
     */
    omit?: cart_detailsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cart_detailsInclude<ExtArgs> | null
    /**
     * Filter, which cart_details to fetch.
     */
    where?: cart_detailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cart_details to fetch.
     */
    orderBy?: cart_detailsOrderByWithRelationInput | cart_detailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for cart_details.
     */
    cursor?: cart_detailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cart_details from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cart_details.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of cart_details.
     */
    distinct?: Cart_detailsScalarFieldEnum | Cart_detailsScalarFieldEnum[]
  }

  /**
   * cart_details findFirstOrThrow
   */
  export type cart_detailsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cart_details
     */
    select?: cart_detailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cart_details
     */
    omit?: cart_detailsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cart_detailsInclude<ExtArgs> | null
    /**
     * Filter, which cart_details to fetch.
     */
    where?: cart_detailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cart_details to fetch.
     */
    orderBy?: cart_detailsOrderByWithRelationInput | cart_detailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for cart_details.
     */
    cursor?: cart_detailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cart_details from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cart_details.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of cart_details.
     */
    distinct?: Cart_detailsScalarFieldEnum | Cart_detailsScalarFieldEnum[]
  }

  /**
   * cart_details findMany
   */
  export type cart_detailsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cart_details
     */
    select?: cart_detailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cart_details
     */
    omit?: cart_detailsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cart_detailsInclude<ExtArgs> | null
    /**
     * Filter, which cart_details to fetch.
     */
    where?: cart_detailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cart_details to fetch.
     */
    orderBy?: cart_detailsOrderByWithRelationInput | cart_detailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing cart_details.
     */
    cursor?: cart_detailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cart_details from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cart_details.
     */
    skip?: number
    distinct?: Cart_detailsScalarFieldEnum | Cart_detailsScalarFieldEnum[]
  }

  /**
   * cart_details create
   */
  export type cart_detailsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cart_details
     */
    select?: cart_detailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cart_details
     */
    omit?: cart_detailsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cart_detailsInclude<ExtArgs> | null
    /**
     * The data needed to create a cart_details.
     */
    data: XOR<cart_detailsCreateInput, cart_detailsUncheckedCreateInput>
  }

  /**
   * cart_details createMany
   */
  export type cart_detailsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many cart_details.
     */
    data: cart_detailsCreateManyInput | cart_detailsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * cart_details createManyAndReturn
   */
  export type cart_detailsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cart_details
     */
    select?: cart_detailsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the cart_details
     */
    omit?: cart_detailsOmit<ExtArgs> | null
    /**
     * The data used to create many cart_details.
     */
    data: cart_detailsCreateManyInput | cart_detailsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cart_detailsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * cart_details update
   */
  export type cart_detailsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cart_details
     */
    select?: cart_detailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cart_details
     */
    omit?: cart_detailsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cart_detailsInclude<ExtArgs> | null
    /**
     * The data needed to update a cart_details.
     */
    data: XOR<cart_detailsUpdateInput, cart_detailsUncheckedUpdateInput>
    /**
     * Choose, which cart_details to update.
     */
    where: cart_detailsWhereUniqueInput
  }

  /**
   * cart_details updateMany
   */
  export type cart_detailsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update cart_details.
     */
    data: XOR<cart_detailsUpdateManyMutationInput, cart_detailsUncheckedUpdateManyInput>
    /**
     * Filter which cart_details to update
     */
    where?: cart_detailsWhereInput
    /**
     * Limit how many cart_details to update.
     */
    limit?: number
  }

  /**
   * cart_details updateManyAndReturn
   */
  export type cart_detailsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cart_details
     */
    select?: cart_detailsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the cart_details
     */
    omit?: cart_detailsOmit<ExtArgs> | null
    /**
     * The data used to update cart_details.
     */
    data: XOR<cart_detailsUpdateManyMutationInput, cart_detailsUncheckedUpdateManyInput>
    /**
     * Filter which cart_details to update
     */
    where?: cart_detailsWhereInput
    /**
     * Limit how many cart_details to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cart_detailsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * cart_details upsert
   */
  export type cart_detailsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cart_details
     */
    select?: cart_detailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cart_details
     */
    omit?: cart_detailsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cart_detailsInclude<ExtArgs> | null
    /**
     * The filter to search for the cart_details to update in case it exists.
     */
    where: cart_detailsWhereUniqueInput
    /**
     * In case the cart_details found by the `where` argument doesn't exist, create a new cart_details with this data.
     */
    create: XOR<cart_detailsCreateInput, cart_detailsUncheckedCreateInput>
    /**
     * In case the cart_details was found with the provided `where` argument, update it with this data.
     */
    update: XOR<cart_detailsUpdateInput, cart_detailsUncheckedUpdateInput>
  }

  /**
   * cart_details delete
   */
  export type cart_detailsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cart_details
     */
    select?: cart_detailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cart_details
     */
    omit?: cart_detailsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cart_detailsInclude<ExtArgs> | null
    /**
     * Filter which cart_details to delete.
     */
    where: cart_detailsWhereUniqueInput
  }

  /**
   * cart_details deleteMany
   */
  export type cart_detailsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cart_details to delete
     */
    where?: cart_detailsWhereInput
    /**
     * Limit how many cart_details to delete.
     */
    limit?: number
  }

  /**
   * cart_details.variant_products
   */
  export type cart_details$variant_productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the variant_products
     */
    select?: variant_productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the variant_products
     */
    omit?: variant_productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: variant_productsInclude<ExtArgs> | null
    where?: variant_productsWhereInput
  }

  /**
   * cart_details without action
   */
  export type cart_detailsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cart_details
     */
    select?: cart_detailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cart_details
     */
    omit?: cart_detailsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cart_detailsInclude<ExtArgs> | null
  }


  /**
   * Model carts
   */

  export type AggregateCarts = {
    _count: CartsCountAggregateOutputType | null
    _avg: CartsAvgAggregateOutputType | null
    _sum: CartsSumAggregateOutputType | null
    _min: CartsMinAggregateOutputType | null
    _max: CartsMaxAggregateOutputType | null
  }

  export type CartsAvgAggregateOutputType = {
    id: number | null
  }

  export type CartsSumAggregateOutputType = {
    id: bigint | null
  }

  export type CartsMinAggregateOutputType = {
    id: bigint | null
    user_id: string | null
    created_at: Date | null
  }

  export type CartsMaxAggregateOutputType = {
    id: bigint | null
    user_id: string | null
    created_at: Date | null
  }

  export type CartsCountAggregateOutputType = {
    id: number
    user_id: number
    created_at: number
    _all: number
  }


  export type CartsAvgAggregateInputType = {
    id?: true
  }

  export type CartsSumAggregateInputType = {
    id?: true
  }

  export type CartsMinAggregateInputType = {
    id?: true
    user_id?: true
    created_at?: true
  }

  export type CartsMaxAggregateInputType = {
    id?: true
    user_id?: true
    created_at?: true
  }

  export type CartsCountAggregateInputType = {
    id?: true
    user_id?: true
    created_at?: true
    _all?: true
  }

  export type CartsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which carts to aggregate.
     */
    where?: cartsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of carts to fetch.
     */
    orderBy?: cartsOrderByWithRelationInput | cartsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: cartsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` carts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` carts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned carts
    **/
    _count?: true | CartsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CartsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CartsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CartsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CartsMaxAggregateInputType
  }

  export type GetCartsAggregateType<T extends CartsAggregateArgs> = {
        [P in keyof T & keyof AggregateCarts]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCarts[P]>
      : GetScalarType<T[P], AggregateCarts[P]>
  }




  export type cartsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cartsWhereInput
    orderBy?: cartsOrderByWithAggregationInput | cartsOrderByWithAggregationInput[]
    by: CartsScalarFieldEnum[] | CartsScalarFieldEnum
    having?: cartsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CartsCountAggregateInputType | true
    _avg?: CartsAvgAggregateInputType
    _sum?: CartsSumAggregateInputType
    _min?: CartsMinAggregateInputType
    _max?: CartsMaxAggregateInputType
  }

  export type CartsGroupByOutputType = {
    id: bigint
    user_id: string
    created_at: Date
    _count: CartsCountAggregateOutputType | null
    _avg: CartsAvgAggregateOutputType | null
    _sum: CartsSumAggregateOutputType | null
    _min: CartsMinAggregateOutputType | null
    _max: CartsMaxAggregateOutputType | null
  }

  type GetCartsGroupByPayload<T extends cartsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CartsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CartsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CartsGroupByOutputType[P]>
            : GetScalarType<T[P], CartsGroupByOutputType[P]>
        }
      >
    >


  export type cartsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    created_at?: boolean
    cart_details?: boolean | carts$cart_detailsArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
    _count?: boolean | CartsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["carts"]>

  export type cartsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    created_at?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["carts"]>

  export type cartsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    created_at?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["carts"]>

  export type cartsSelectScalar = {
    id?: boolean
    user_id?: boolean
    created_at?: boolean
  }

  export type cartsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "created_at", ExtArgs["result"]["carts"]>
  export type cartsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cart_details?: boolean | carts$cart_detailsArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
    _count?: boolean | CartsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type cartsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type cartsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $cartsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "carts"
    objects: {
      cart_details: Prisma.$cart_detailsPayload<ExtArgs>[]
      users: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      user_id: string
      created_at: Date
    }, ExtArgs["result"]["carts"]>
    composites: {}
  }

  type cartsGetPayload<S extends boolean | null | undefined | cartsDefaultArgs> = $Result.GetResult<Prisma.$cartsPayload, S>

  type cartsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<cartsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CartsCountAggregateInputType | true
    }

  export interface cartsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['carts'], meta: { name: 'carts' } }
    /**
     * Find zero or one Carts that matches the filter.
     * @param {cartsFindUniqueArgs} args - Arguments to find a Carts
     * @example
     * // Get one Carts
     * const carts = await prisma.carts.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends cartsFindUniqueArgs>(args: SelectSubset<T, cartsFindUniqueArgs<ExtArgs>>): Prisma__cartsClient<$Result.GetResult<Prisma.$cartsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Carts that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {cartsFindUniqueOrThrowArgs} args - Arguments to find a Carts
     * @example
     * // Get one Carts
     * const carts = await prisma.carts.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends cartsFindUniqueOrThrowArgs>(args: SelectSubset<T, cartsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__cartsClient<$Result.GetResult<Prisma.$cartsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Carts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cartsFindFirstArgs} args - Arguments to find a Carts
     * @example
     * // Get one Carts
     * const carts = await prisma.carts.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends cartsFindFirstArgs>(args?: SelectSubset<T, cartsFindFirstArgs<ExtArgs>>): Prisma__cartsClient<$Result.GetResult<Prisma.$cartsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Carts that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cartsFindFirstOrThrowArgs} args - Arguments to find a Carts
     * @example
     * // Get one Carts
     * const carts = await prisma.carts.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends cartsFindFirstOrThrowArgs>(args?: SelectSubset<T, cartsFindFirstOrThrowArgs<ExtArgs>>): Prisma__cartsClient<$Result.GetResult<Prisma.$cartsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Carts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cartsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Carts
     * const carts = await prisma.carts.findMany()
     * 
     * // Get first 10 Carts
     * const carts = await prisma.carts.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cartsWithIdOnly = await prisma.carts.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends cartsFindManyArgs>(args?: SelectSubset<T, cartsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cartsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Carts.
     * @param {cartsCreateArgs} args - Arguments to create a Carts.
     * @example
     * // Create one Carts
     * const Carts = await prisma.carts.create({
     *   data: {
     *     // ... data to create a Carts
     *   }
     * })
     * 
     */
    create<T extends cartsCreateArgs>(args: SelectSubset<T, cartsCreateArgs<ExtArgs>>): Prisma__cartsClient<$Result.GetResult<Prisma.$cartsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Carts.
     * @param {cartsCreateManyArgs} args - Arguments to create many Carts.
     * @example
     * // Create many Carts
     * const carts = await prisma.carts.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends cartsCreateManyArgs>(args?: SelectSubset<T, cartsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Carts and returns the data saved in the database.
     * @param {cartsCreateManyAndReturnArgs} args - Arguments to create many Carts.
     * @example
     * // Create many Carts
     * const carts = await prisma.carts.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Carts and only return the `id`
     * const cartsWithIdOnly = await prisma.carts.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends cartsCreateManyAndReturnArgs>(args?: SelectSubset<T, cartsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cartsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Carts.
     * @param {cartsDeleteArgs} args - Arguments to delete one Carts.
     * @example
     * // Delete one Carts
     * const Carts = await prisma.carts.delete({
     *   where: {
     *     // ... filter to delete one Carts
     *   }
     * })
     * 
     */
    delete<T extends cartsDeleteArgs>(args: SelectSubset<T, cartsDeleteArgs<ExtArgs>>): Prisma__cartsClient<$Result.GetResult<Prisma.$cartsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Carts.
     * @param {cartsUpdateArgs} args - Arguments to update one Carts.
     * @example
     * // Update one Carts
     * const carts = await prisma.carts.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends cartsUpdateArgs>(args: SelectSubset<T, cartsUpdateArgs<ExtArgs>>): Prisma__cartsClient<$Result.GetResult<Prisma.$cartsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Carts.
     * @param {cartsDeleteManyArgs} args - Arguments to filter Carts to delete.
     * @example
     * // Delete a few Carts
     * const { count } = await prisma.carts.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends cartsDeleteManyArgs>(args?: SelectSubset<T, cartsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Carts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cartsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Carts
     * const carts = await prisma.carts.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends cartsUpdateManyArgs>(args: SelectSubset<T, cartsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Carts and returns the data updated in the database.
     * @param {cartsUpdateManyAndReturnArgs} args - Arguments to update many Carts.
     * @example
     * // Update many Carts
     * const carts = await prisma.carts.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Carts and only return the `id`
     * const cartsWithIdOnly = await prisma.carts.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends cartsUpdateManyAndReturnArgs>(args: SelectSubset<T, cartsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cartsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Carts.
     * @param {cartsUpsertArgs} args - Arguments to update or create a Carts.
     * @example
     * // Update or create a Carts
     * const carts = await prisma.carts.upsert({
     *   create: {
     *     // ... data to create a Carts
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Carts we want to update
     *   }
     * })
     */
    upsert<T extends cartsUpsertArgs>(args: SelectSubset<T, cartsUpsertArgs<ExtArgs>>): Prisma__cartsClient<$Result.GetResult<Prisma.$cartsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Carts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cartsCountArgs} args - Arguments to filter Carts to count.
     * @example
     * // Count the number of Carts
     * const count = await prisma.carts.count({
     *   where: {
     *     // ... the filter for the Carts we want to count
     *   }
     * })
    **/
    count<T extends cartsCountArgs>(
      args?: Subset<T, cartsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CartsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Carts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CartsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CartsAggregateArgs>(args: Subset<T, CartsAggregateArgs>): Prisma.PrismaPromise<GetCartsAggregateType<T>>

    /**
     * Group by Carts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cartsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends cartsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: cartsGroupByArgs['orderBy'] }
        : { orderBy?: cartsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, cartsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCartsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the carts model
   */
  readonly fields: cartsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for carts.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__cartsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cart_details<T extends carts$cart_detailsArgs<ExtArgs> = {}>(args?: Subset<T, carts$cart_detailsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cart_detailsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the carts model
   */
  interface cartsFieldRefs {
    readonly id: FieldRef<"carts", 'BigInt'>
    readonly user_id: FieldRef<"carts", 'String'>
    readonly created_at: FieldRef<"carts", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * carts findUnique
   */
  export type cartsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the carts
     */
    select?: cartsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the carts
     */
    omit?: cartsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cartsInclude<ExtArgs> | null
    /**
     * Filter, which carts to fetch.
     */
    where: cartsWhereUniqueInput
  }

  /**
   * carts findUniqueOrThrow
   */
  export type cartsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the carts
     */
    select?: cartsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the carts
     */
    omit?: cartsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cartsInclude<ExtArgs> | null
    /**
     * Filter, which carts to fetch.
     */
    where: cartsWhereUniqueInput
  }

  /**
   * carts findFirst
   */
  export type cartsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the carts
     */
    select?: cartsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the carts
     */
    omit?: cartsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cartsInclude<ExtArgs> | null
    /**
     * Filter, which carts to fetch.
     */
    where?: cartsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of carts to fetch.
     */
    orderBy?: cartsOrderByWithRelationInput | cartsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for carts.
     */
    cursor?: cartsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` carts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` carts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of carts.
     */
    distinct?: CartsScalarFieldEnum | CartsScalarFieldEnum[]
  }

  /**
   * carts findFirstOrThrow
   */
  export type cartsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the carts
     */
    select?: cartsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the carts
     */
    omit?: cartsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cartsInclude<ExtArgs> | null
    /**
     * Filter, which carts to fetch.
     */
    where?: cartsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of carts to fetch.
     */
    orderBy?: cartsOrderByWithRelationInput | cartsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for carts.
     */
    cursor?: cartsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` carts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` carts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of carts.
     */
    distinct?: CartsScalarFieldEnum | CartsScalarFieldEnum[]
  }

  /**
   * carts findMany
   */
  export type cartsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the carts
     */
    select?: cartsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the carts
     */
    omit?: cartsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cartsInclude<ExtArgs> | null
    /**
     * Filter, which carts to fetch.
     */
    where?: cartsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of carts to fetch.
     */
    orderBy?: cartsOrderByWithRelationInput | cartsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing carts.
     */
    cursor?: cartsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` carts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` carts.
     */
    skip?: number
    distinct?: CartsScalarFieldEnum | CartsScalarFieldEnum[]
  }

  /**
   * carts create
   */
  export type cartsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the carts
     */
    select?: cartsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the carts
     */
    omit?: cartsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cartsInclude<ExtArgs> | null
    /**
     * The data needed to create a carts.
     */
    data: XOR<cartsCreateInput, cartsUncheckedCreateInput>
  }

  /**
   * carts createMany
   */
  export type cartsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many carts.
     */
    data: cartsCreateManyInput | cartsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * carts createManyAndReturn
   */
  export type cartsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the carts
     */
    select?: cartsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the carts
     */
    omit?: cartsOmit<ExtArgs> | null
    /**
     * The data used to create many carts.
     */
    data: cartsCreateManyInput | cartsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cartsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * carts update
   */
  export type cartsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the carts
     */
    select?: cartsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the carts
     */
    omit?: cartsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cartsInclude<ExtArgs> | null
    /**
     * The data needed to update a carts.
     */
    data: XOR<cartsUpdateInput, cartsUncheckedUpdateInput>
    /**
     * Choose, which carts to update.
     */
    where: cartsWhereUniqueInput
  }

  /**
   * carts updateMany
   */
  export type cartsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update carts.
     */
    data: XOR<cartsUpdateManyMutationInput, cartsUncheckedUpdateManyInput>
    /**
     * Filter which carts to update
     */
    where?: cartsWhereInput
    /**
     * Limit how many carts to update.
     */
    limit?: number
  }

  /**
   * carts updateManyAndReturn
   */
  export type cartsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the carts
     */
    select?: cartsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the carts
     */
    omit?: cartsOmit<ExtArgs> | null
    /**
     * The data used to update carts.
     */
    data: XOR<cartsUpdateManyMutationInput, cartsUncheckedUpdateManyInput>
    /**
     * Filter which carts to update
     */
    where?: cartsWhereInput
    /**
     * Limit how many carts to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cartsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * carts upsert
   */
  export type cartsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the carts
     */
    select?: cartsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the carts
     */
    omit?: cartsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cartsInclude<ExtArgs> | null
    /**
     * The filter to search for the carts to update in case it exists.
     */
    where: cartsWhereUniqueInput
    /**
     * In case the carts found by the `where` argument doesn't exist, create a new carts with this data.
     */
    create: XOR<cartsCreateInput, cartsUncheckedCreateInput>
    /**
     * In case the carts was found with the provided `where` argument, update it with this data.
     */
    update: XOR<cartsUpdateInput, cartsUncheckedUpdateInput>
  }

  /**
   * carts delete
   */
  export type cartsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the carts
     */
    select?: cartsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the carts
     */
    omit?: cartsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cartsInclude<ExtArgs> | null
    /**
     * Filter which carts to delete.
     */
    where: cartsWhereUniqueInput
  }

  /**
   * carts deleteMany
   */
  export type cartsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which carts to delete
     */
    where?: cartsWhereInput
    /**
     * Limit how many carts to delete.
     */
    limit?: number
  }

  /**
   * carts.cart_details
   */
  export type carts$cart_detailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cart_details
     */
    select?: cart_detailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cart_details
     */
    omit?: cart_detailsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cart_detailsInclude<ExtArgs> | null
    where?: cart_detailsWhereInput
    orderBy?: cart_detailsOrderByWithRelationInput | cart_detailsOrderByWithRelationInput[]
    cursor?: cart_detailsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Cart_detailsScalarFieldEnum | Cart_detailsScalarFieldEnum[]
  }

  /**
   * carts without action
   */
  export type cartsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the carts
     */
    select?: cartsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the carts
     */
    omit?: cartsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cartsInclude<ExtArgs> | null
  }


  /**
   * Model categories
   */

  export type AggregateCategories = {
    _count: CategoriesCountAggregateOutputType | null
    _avg: CategoriesAvgAggregateOutputType | null
    _sum: CategoriesSumAggregateOutputType | null
    _min: CategoriesMinAggregateOutputType | null
    _max: CategoriesMaxAggregateOutputType | null
  }

  export type CategoriesAvgAggregateOutputType = {
    id: number | null
    iva: Decimal | null
    parent_id: number | null
  }

  export type CategoriesSumAggregateOutputType = {
    id: bigint | null
    iva: Decimal | null
    parent_id: bigint | null
  }

  export type CategoriesMinAggregateOutputType = {
    id: bigint | null
    user_id: string | null
    name: string | null
    iva: Decimal | null
    parent_id: bigint | null
    created_at: Date | null
  }

  export type CategoriesMaxAggregateOutputType = {
    id: bigint | null
    user_id: string | null
    name: string | null
    iva: Decimal | null
    parent_id: bigint | null
    created_at: Date | null
  }

  export type CategoriesCountAggregateOutputType = {
    id: number
    user_id: number
    name: number
    iva: number
    parent_id: number
    created_at: number
    _all: number
  }


  export type CategoriesAvgAggregateInputType = {
    id?: true
    iva?: true
    parent_id?: true
  }

  export type CategoriesSumAggregateInputType = {
    id?: true
    iva?: true
    parent_id?: true
  }

  export type CategoriesMinAggregateInputType = {
    id?: true
    user_id?: true
    name?: true
    iva?: true
    parent_id?: true
    created_at?: true
  }

  export type CategoriesMaxAggregateInputType = {
    id?: true
    user_id?: true
    name?: true
    iva?: true
    parent_id?: true
    created_at?: true
  }

  export type CategoriesCountAggregateInputType = {
    id?: true
    user_id?: true
    name?: true
    iva?: true
    parent_id?: true
    created_at?: true
    _all?: true
  }

  export type CategoriesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which categories to aggregate.
     */
    where?: categoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of categories to fetch.
     */
    orderBy?: categoriesOrderByWithRelationInput | categoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: categoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned categories
    **/
    _count?: true | CategoriesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CategoriesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CategoriesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CategoriesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CategoriesMaxAggregateInputType
  }

  export type GetCategoriesAggregateType<T extends CategoriesAggregateArgs> = {
        [P in keyof T & keyof AggregateCategories]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCategories[P]>
      : GetScalarType<T[P], AggregateCategories[P]>
  }




  export type categoriesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: categoriesWhereInput
    orderBy?: categoriesOrderByWithAggregationInput | categoriesOrderByWithAggregationInput[]
    by: CategoriesScalarFieldEnum[] | CategoriesScalarFieldEnum
    having?: categoriesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CategoriesCountAggregateInputType | true
    _avg?: CategoriesAvgAggregateInputType
    _sum?: CategoriesSumAggregateInputType
    _min?: CategoriesMinAggregateInputType
    _max?: CategoriesMaxAggregateInputType
  }

  export type CategoriesGroupByOutputType = {
    id: bigint
    user_id: string | null
    name: string
    iva: Decimal | null
    parent_id: bigint | null
    created_at: Date
    _count: CategoriesCountAggregateOutputType | null
    _avg: CategoriesAvgAggregateOutputType | null
    _sum: CategoriesSumAggregateOutputType | null
    _min: CategoriesMinAggregateOutputType | null
    _max: CategoriesMaxAggregateOutputType | null
  }

  type GetCategoriesGroupByPayload<T extends categoriesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CategoriesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CategoriesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CategoriesGroupByOutputType[P]>
            : GetScalarType<T[P], CategoriesGroupByOutputType[P]>
        }
      >
    >


  export type categoriesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    name?: boolean
    iva?: boolean
    parent_id?: boolean
    created_at?: boolean
    categories?: boolean | categories$categoriesArgs<ExtArgs>
    other_categories?: boolean | categories$other_categoriesArgs<ExtArgs>
    users?: boolean | categories$usersArgs<ExtArgs>
    products?: boolean | categories$productsArgs<ExtArgs>
    _count?: boolean | CategoriesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["categories"]>

  export type categoriesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    name?: boolean
    iva?: boolean
    parent_id?: boolean
    created_at?: boolean
    categories?: boolean | categories$categoriesArgs<ExtArgs>
    users?: boolean | categories$usersArgs<ExtArgs>
  }, ExtArgs["result"]["categories"]>

  export type categoriesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    name?: boolean
    iva?: boolean
    parent_id?: boolean
    created_at?: boolean
    categories?: boolean | categories$categoriesArgs<ExtArgs>
    users?: boolean | categories$usersArgs<ExtArgs>
  }, ExtArgs["result"]["categories"]>

  export type categoriesSelectScalar = {
    id?: boolean
    user_id?: boolean
    name?: boolean
    iva?: boolean
    parent_id?: boolean
    created_at?: boolean
  }

  export type categoriesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "name" | "iva" | "parent_id" | "created_at", ExtArgs["result"]["categories"]>
  export type categoriesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    categories?: boolean | categories$categoriesArgs<ExtArgs>
    other_categories?: boolean | categories$other_categoriesArgs<ExtArgs>
    users?: boolean | categories$usersArgs<ExtArgs>
    products?: boolean | categories$productsArgs<ExtArgs>
    _count?: boolean | CategoriesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type categoriesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    categories?: boolean | categories$categoriesArgs<ExtArgs>
    users?: boolean | categories$usersArgs<ExtArgs>
  }
  export type categoriesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    categories?: boolean | categories$categoriesArgs<ExtArgs>
    users?: boolean | categories$usersArgs<ExtArgs>
  }

  export type $categoriesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "categories"
    objects: {
      categories: Prisma.$categoriesPayload<ExtArgs> | null
      other_categories: Prisma.$categoriesPayload<ExtArgs>[]
      users: Prisma.$usersPayload<ExtArgs> | null
      products: Prisma.$productsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      user_id: string | null
      name: string
      iva: Prisma.Decimal | null
      parent_id: bigint | null
      created_at: Date
    }, ExtArgs["result"]["categories"]>
    composites: {}
  }

  type categoriesGetPayload<S extends boolean | null | undefined | categoriesDefaultArgs> = $Result.GetResult<Prisma.$categoriesPayload, S>

  type categoriesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<categoriesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CategoriesCountAggregateInputType | true
    }

  export interface categoriesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['categories'], meta: { name: 'categories' } }
    /**
     * Find zero or one Categories that matches the filter.
     * @param {categoriesFindUniqueArgs} args - Arguments to find a Categories
     * @example
     * // Get one Categories
     * const categories = await prisma.categories.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends categoriesFindUniqueArgs>(args: SelectSubset<T, categoriesFindUniqueArgs<ExtArgs>>): Prisma__categoriesClient<$Result.GetResult<Prisma.$categoriesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Categories that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {categoriesFindUniqueOrThrowArgs} args - Arguments to find a Categories
     * @example
     * // Get one Categories
     * const categories = await prisma.categories.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends categoriesFindUniqueOrThrowArgs>(args: SelectSubset<T, categoriesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__categoriesClient<$Result.GetResult<Prisma.$categoriesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Categories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriesFindFirstArgs} args - Arguments to find a Categories
     * @example
     * // Get one Categories
     * const categories = await prisma.categories.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends categoriesFindFirstArgs>(args?: SelectSubset<T, categoriesFindFirstArgs<ExtArgs>>): Prisma__categoriesClient<$Result.GetResult<Prisma.$categoriesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Categories that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriesFindFirstOrThrowArgs} args - Arguments to find a Categories
     * @example
     * // Get one Categories
     * const categories = await prisma.categories.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends categoriesFindFirstOrThrowArgs>(args?: SelectSubset<T, categoriesFindFirstOrThrowArgs<ExtArgs>>): Prisma__categoriesClient<$Result.GetResult<Prisma.$categoriesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Categories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Categories
     * const categories = await prisma.categories.findMany()
     * 
     * // Get first 10 Categories
     * const categories = await prisma.categories.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const categoriesWithIdOnly = await prisma.categories.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends categoriesFindManyArgs>(args?: SelectSubset<T, categoriesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$categoriesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Categories.
     * @param {categoriesCreateArgs} args - Arguments to create a Categories.
     * @example
     * // Create one Categories
     * const Categories = await prisma.categories.create({
     *   data: {
     *     // ... data to create a Categories
     *   }
     * })
     * 
     */
    create<T extends categoriesCreateArgs>(args: SelectSubset<T, categoriesCreateArgs<ExtArgs>>): Prisma__categoriesClient<$Result.GetResult<Prisma.$categoriesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Categories.
     * @param {categoriesCreateManyArgs} args - Arguments to create many Categories.
     * @example
     * // Create many Categories
     * const categories = await prisma.categories.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends categoriesCreateManyArgs>(args?: SelectSubset<T, categoriesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Categories and returns the data saved in the database.
     * @param {categoriesCreateManyAndReturnArgs} args - Arguments to create many Categories.
     * @example
     * // Create many Categories
     * const categories = await prisma.categories.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Categories and only return the `id`
     * const categoriesWithIdOnly = await prisma.categories.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends categoriesCreateManyAndReturnArgs>(args?: SelectSubset<T, categoriesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$categoriesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Categories.
     * @param {categoriesDeleteArgs} args - Arguments to delete one Categories.
     * @example
     * // Delete one Categories
     * const Categories = await prisma.categories.delete({
     *   where: {
     *     // ... filter to delete one Categories
     *   }
     * })
     * 
     */
    delete<T extends categoriesDeleteArgs>(args: SelectSubset<T, categoriesDeleteArgs<ExtArgs>>): Prisma__categoriesClient<$Result.GetResult<Prisma.$categoriesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Categories.
     * @param {categoriesUpdateArgs} args - Arguments to update one Categories.
     * @example
     * // Update one Categories
     * const categories = await prisma.categories.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends categoriesUpdateArgs>(args: SelectSubset<T, categoriesUpdateArgs<ExtArgs>>): Prisma__categoriesClient<$Result.GetResult<Prisma.$categoriesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Categories.
     * @param {categoriesDeleteManyArgs} args - Arguments to filter Categories to delete.
     * @example
     * // Delete a few Categories
     * const { count } = await prisma.categories.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends categoriesDeleteManyArgs>(args?: SelectSubset<T, categoriesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Categories
     * const categories = await prisma.categories.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends categoriesUpdateManyArgs>(args: SelectSubset<T, categoriesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categories and returns the data updated in the database.
     * @param {categoriesUpdateManyAndReturnArgs} args - Arguments to update many Categories.
     * @example
     * // Update many Categories
     * const categories = await prisma.categories.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Categories and only return the `id`
     * const categoriesWithIdOnly = await prisma.categories.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends categoriesUpdateManyAndReturnArgs>(args: SelectSubset<T, categoriesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$categoriesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Categories.
     * @param {categoriesUpsertArgs} args - Arguments to update or create a Categories.
     * @example
     * // Update or create a Categories
     * const categories = await prisma.categories.upsert({
     *   create: {
     *     // ... data to create a Categories
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Categories we want to update
     *   }
     * })
     */
    upsert<T extends categoriesUpsertArgs>(args: SelectSubset<T, categoriesUpsertArgs<ExtArgs>>): Prisma__categoriesClient<$Result.GetResult<Prisma.$categoriesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriesCountArgs} args - Arguments to filter Categories to count.
     * @example
     * // Count the number of Categories
     * const count = await prisma.categories.count({
     *   where: {
     *     // ... the filter for the Categories we want to count
     *   }
     * })
    **/
    count<T extends categoriesCountArgs>(
      args?: Subset<T, categoriesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CategoriesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoriesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CategoriesAggregateArgs>(args: Subset<T, CategoriesAggregateArgs>): Prisma.PrismaPromise<GetCategoriesAggregateType<T>>

    /**
     * Group by Categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoriesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends categoriesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: categoriesGroupByArgs['orderBy'] }
        : { orderBy?: categoriesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, categoriesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCategoriesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the categories model
   */
  readonly fields: categoriesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for categories.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__categoriesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    categories<T extends categories$categoriesArgs<ExtArgs> = {}>(args?: Subset<T, categories$categoriesArgs<ExtArgs>>): Prisma__categoriesClient<$Result.GetResult<Prisma.$categoriesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    other_categories<T extends categories$other_categoriesArgs<ExtArgs> = {}>(args?: Subset<T, categories$other_categoriesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$categoriesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    users<T extends categories$usersArgs<ExtArgs> = {}>(args?: Subset<T, categories$usersArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    products<T extends categories$productsArgs<ExtArgs> = {}>(args?: Subset<T, categories$productsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the categories model
   */
  interface categoriesFieldRefs {
    readonly id: FieldRef<"categories", 'BigInt'>
    readonly user_id: FieldRef<"categories", 'String'>
    readonly name: FieldRef<"categories", 'String'>
    readonly iva: FieldRef<"categories", 'Decimal'>
    readonly parent_id: FieldRef<"categories", 'BigInt'>
    readonly created_at: FieldRef<"categories", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * categories findUnique
   */
  export type categoriesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categories
     */
    select?: categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categories
     */
    omit?: categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoriesInclude<ExtArgs> | null
    /**
     * Filter, which categories to fetch.
     */
    where: categoriesWhereUniqueInput
  }

  /**
   * categories findUniqueOrThrow
   */
  export type categoriesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categories
     */
    select?: categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categories
     */
    omit?: categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoriesInclude<ExtArgs> | null
    /**
     * Filter, which categories to fetch.
     */
    where: categoriesWhereUniqueInput
  }

  /**
   * categories findFirst
   */
  export type categoriesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categories
     */
    select?: categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categories
     */
    omit?: categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoriesInclude<ExtArgs> | null
    /**
     * Filter, which categories to fetch.
     */
    where?: categoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of categories to fetch.
     */
    orderBy?: categoriesOrderByWithRelationInput | categoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for categories.
     */
    cursor?: categoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of categories.
     */
    distinct?: CategoriesScalarFieldEnum | CategoriesScalarFieldEnum[]
  }

  /**
   * categories findFirstOrThrow
   */
  export type categoriesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categories
     */
    select?: categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categories
     */
    omit?: categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoriesInclude<ExtArgs> | null
    /**
     * Filter, which categories to fetch.
     */
    where?: categoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of categories to fetch.
     */
    orderBy?: categoriesOrderByWithRelationInput | categoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for categories.
     */
    cursor?: categoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of categories.
     */
    distinct?: CategoriesScalarFieldEnum | CategoriesScalarFieldEnum[]
  }

  /**
   * categories findMany
   */
  export type categoriesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categories
     */
    select?: categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categories
     */
    omit?: categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoriesInclude<ExtArgs> | null
    /**
     * Filter, which categories to fetch.
     */
    where?: categoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of categories to fetch.
     */
    orderBy?: categoriesOrderByWithRelationInput | categoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing categories.
     */
    cursor?: categoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` categories.
     */
    skip?: number
    distinct?: CategoriesScalarFieldEnum | CategoriesScalarFieldEnum[]
  }

  /**
   * categories create
   */
  export type categoriesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categories
     */
    select?: categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categories
     */
    omit?: categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoriesInclude<ExtArgs> | null
    /**
     * The data needed to create a categories.
     */
    data: XOR<categoriesCreateInput, categoriesUncheckedCreateInput>
  }

  /**
   * categories createMany
   */
  export type categoriesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many categories.
     */
    data: categoriesCreateManyInput | categoriesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * categories createManyAndReturn
   */
  export type categoriesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categories
     */
    select?: categoriesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the categories
     */
    omit?: categoriesOmit<ExtArgs> | null
    /**
     * The data used to create many categories.
     */
    data: categoriesCreateManyInput | categoriesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoriesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * categories update
   */
  export type categoriesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categories
     */
    select?: categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categories
     */
    omit?: categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoriesInclude<ExtArgs> | null
    /**
     * The data needed to update a categories.
     */
    data: XOR<categoriesUpdateInput, categoriesUncheckedUpdateInput>
    /**
     * Choose, which categories to update.
     */
    where: categoriesWhereUniqueInput
  }

  /**
   * categories updateMany
   */
  export type categoriesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update categories.
     */
    data: XOR<categoriesUpdateManyMutationInput, categoriesUncheckedUpdateManyInput>
    /**
     * Filter which categories to update
     */
    where?: categoriesWhereInput
    /**
     * Limit how many categories to update.
     */
    limit?: number
  }

  /**
   * categories updateManyAndReturn
   */
  export type categoriesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categories
     */
    select?: categoriesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the categories
     */
    omit?: categoriesOmit<ExtArgs> | null
    /**
     * The data used to update categories.
     */
    data: XOR<categoriesUpdateManyMutationInput, categoriesUncheckedUpdateManyInput>
    /**
     * Filter which categories to update
     */
    where?: categoriesWhereInput
    /**
     * Limit how many categories to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoriesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * categories upsert
   */
  export type categoriesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categories
     */
    select?: categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categories
     */
    omit?: categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoriesInclude<ExtArgs> | null
    /**
     * The filter to search for the categories to update in case it exists.
     */
    where: categoriesWhereUniqueInput
    /**
     * In case the categories found by the `where` argument doesn't exist, create a new categories with this data.
     */
    create: XOR<categoriesCreateInput, categoriesUncheckedCreateInput>
    /**
     * In case the categories was found with the provided `where` argument, update it with this data.
     */
    update: XOR<categoriesUpdateInput, categoriesUncheckedUpdateInput>
  }

  /**
   * categories delete
   */
  export type categoriesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categories
     */
    select?: categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categories
     */
    omit?: categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoriesInclude<ExtArgs> | null
    /**
     * Filter which categories to delete.
     */
    where: categoriesWhereUniqueInput
  }

  /**
   * categories deleteMany
   */
  export type categoriesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which categories to delete
     */
    where?: categoriesWhereInput
    /**
     * Limit how many categories to delete.
     */
    limit?: number
  }

  /**
   * categories.categories
   */
  export type categories$categoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categories
     */
    select?: categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categories
     */
    omit?: categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoriesInclude<ExtArgs> | null
    where?: categoriesWhereInput
  }

  /**
   * categories.other_categories
   */
  export type categories$other_categoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categories
     */
    select?: categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categories
     */
    omit?: categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoriesInclude<ExtArgs> | null
    where?: categoriesWhereInput
    orderBy?: categoriesOrderByWithRelationInput | categoriesOrderByWithRelationInput[]
    cursor?: categoriesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CategoriesScalarFieldEnum | CategoriesScalarFieldEnum[]
  }

  /**
   * categories.users
   */
  export type categories$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
  }

  /**
   * categories.products
   */
  export type categories$productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
    where?: productsWhereInput
    orderBy?: productsOrderByWithRelationInput | productsOrderByWithRelationInput[]
    cursor?: productsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductsScalarFieldEnum | ProductsScalarFieldEnum[]
  }

  /**
   * categories without action
   */
  export type categoriesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categories
     */
    select?: categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categories
     */
    omit?: categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoriesInclude<ExtArgs> | null
  }


  /**
   * Model chat_panels
   */

  export type AggregateChat_panels = {
    _count: Chat_panelsCountAggregateOutputType | null
    _avg: Chat_panelsAvgAggregateOutputType | null
    _sum: Chat_panelsSumAggregateOutputType | null
    _min: Chat_panelsMinAggregateOutputType | null
    _max: Chat_panelsMaxAggregateOutputType | null
  }

  export type Chat_panelsAvgAggregateOutputType = {
    id: number | null
  }

  export type Chat_panelsSumAggregateOutputType = {
    id: bigint | null
  }

  export type Chat_panelsMinAggregateOutputType = {
    id: bigint | null
    name: string | null
    created_at: Date | null
  }

  export type Chat_panelsMaxAggregateOutputType = {
    id: bigint | null
    name: string | null
    created_at: Date | null
  }

  export type Chat_panelsCountAggregateOutputType = {
    id: number
    name: number
    created_at: number
    _all: number
  }


  export type Chat_panelsAvgAggregateInputType = {
    id?: true
  }

  export type Chat_panelsSumAggregateInputType = {
    id?: true
  }

  export type Chat_panelsMinAggregateInputType = {
    id?: true
    name?: true
    created_at?: true
  }

  export type Chat_panelsMaxAggregateInputType = {
    id?: true
    name?: true
    created_at?: true
  }

  export type Chat_panelsCountAggregateInputType = {
    id?: true
    name?: true
    created_at?: true
    _all?: true
  }

  export type Chat_panelsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which chat_panels to aggregate.
     */
    where?: chat_panelsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of chat_panels to fetch.
     */
    orderBy?: chat_panelsOrderByWithRelationInput | chat_panelsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: chat_panelsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` chat_panels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` chat_panels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned chat_panels
    **/
    _count?: true | Chat_panelsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Chat_panelsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Chat_panelsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Chat_panelsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Chat_panelsMaxAggregateInputType
  }

  export type GetChat_panelsAggregateType<T extends Chat_panelsAggregateArgs> = {
        [P in keyof T & keyof AggregateChat_panels]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateChat_panels[P]>
      : GetScalarType<T[P], AggregateChat_panels[P]>
  }




  export type chat_panelsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: chat_panelsWhereInput
    orderBy?: chat_panelsOrderByWithAggregationInput | chat_panelsOrderByWithAggregationInput[]
    by: Chat_panelsScalarFieldEnum[] | Chat_panelsScalarFieldEnum
    having?: chat_panelsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Chat_panelsCountAggregateInputType | true
    _avg?: Chat_panelsAvgAggregateInputType
    _sum?: Chat_panelsSumAggregateInputType
    _min?: Chat_panelsMinAggregateInputType
    _max?: Chat_panelsMaxAggregateInputType
  }

  export type Chat_panelsGroupByOutputType = {
    id: bigint
    name: string
    created_at: Date
    _count: Chat_panelsCountAggregateOutputType | null
    _avg: Chat_panelsAvgAggregateOutputType | null
    _sum: Chat_panelsSumAggregateOutputType | null
    _min: Chat_panelsMinAggregateOutputType | null
    _max: Chat_panelsMaxAggregateOutputType | null
  }

  type GetChat_panelsGroupByPayload<T extends chat_panelsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Chat_panelsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Chat_panelsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Chat_panelsGroupByOutputType[P]>
            : GetScalarType<T[P], Chat_panelsGroupByOutputType[P]>
        }
      >
    >


  export type chat_panelsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    created_at?: boolean
    chat_participants?: boolean | chat_panels$chat_participantsArgs<ExtArgs>
    messages?: boolean | chat_panels$messagesArgs<ExtArgs>
    _count?: boolean | Chat_panelsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["chat_panels"]>

  export type chat_panelsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    created_at?: boolean
  }, ExtArgs["result"]["chat_panels"]>

  export type chat_panelsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    created_at?: boolean
  }, ExtArgs["result"]["chat_panels"]>

  export type chat_panelsSelectScalar = {
    id?: boolean
    name?: boolean
    created_at?: boolean
  }

  export type chat_panelsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "created_at", ExtArgs["result"]["chat_panels"]>
  export type chat_panelsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    chat_participants?: boolean | chat_panels$chat_participantsArgs<ExtArgs>
    messages?: boolean | chat_panels$messagesArgs<ExtArgs>
    _count?: boolean | Chat_panelsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type chat_panelsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type chat_panelsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $chat_panelsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "chat_panels"
    objects: {
      chat_participants: Prisma.$chat_participantsPayload<ExtArgs>[]
      messages: Prisma.$messagesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      name: string
      created_at: Date
    }, ExtArgs["result"]["chat_panels"]>
    composites: {}
  }

  type chat_panelsGetPayload<S extends boolean | null | undefined | chat_panelsDefaultArgs> = $Result.GetResult<Prisma.$chat_panelsPayload, S>

  type chat_panelsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<chat_panelsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Chat_panelsCountAggregateInputType | true
    }

  export interface chat_panelsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['chat_panels'], meta: { name: 'chat_panels' } }
    /**
     * Find zero or one Chat_panels that matches the filter.
     * @param {chat_panelsFindUniqueArgs} args - Arguments to find a Chat_panels
     * @example
     * // Get one Chat_panels
     * const chat_panels = await prisma.chat_panels.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends chat_panelsFindUniqueArgs>(args: SelectSubset<T, chat_panelsFindUniqueArgs<ExtArgs>>): Prisma__chat_panelsClient<$Result.GetResult<Prisma.$chat_panelsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Chat_panels that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {chat_panelsFindUniqueOrThrowArgs} args - Arguments to find a Chat_panels
     * @example
     * // Get one Chat_panels
     * const chat_panels = await prisma.chat_panels.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends chat_panelsFindUniqueOrThrowArgs>(args: SelectSubset<T, chat_panelsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__chat_panelsClient<$Result.GetResult<Prisma.$chat_panelsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Chat_panels that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chat_panelsFindFirstArgs} args - Arguments to find a Chat_panels
     * @example
     * // Get one Chat_panels
     * const chat_panels = await prisma.chat_panels.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends chat_panelsFindFirstArgs>(args?: SelectSubset<T, chat_panelsFindFirstArgs<ExtArgs>>): Prisma__chat_panelsClient<$Result.GetResult<Prisma.$chat_panelsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Chat_panels that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chat_panelsFindFirstOrThrowArgs} args - Arguments to find a Chat_panels
     * @example
     * // Get one Chat_panels
     * const chat_panels = await prisma.chat_panels.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends chat_panelsFindFirstOrThrowArgs>(args?: SelectSubset<T, chat_panelsFindFirstOrThrowArgs<ExtArgs>>): Prisma__chat_panelsClient<$Result.GetResult<Prisma.$chat_panelsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Chat_panels that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chat_panelsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Chat_panels
     * const chat_panels = await prisma.chat_panels.findMany()
     * 
     * // Get first 10 Chat_panels
     * const chat_panels = await prisma.chat_panels.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const chat_panelsWithIdOnly = await prisma.chat_panels.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends chat_panelsFindManyArgs>(args?: SelectSubset<T, chat_panelsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$chat_panelsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Chat_panels.
     * @param {chat_panelsCreateArgs} args - Arguments to create a Chat_panels.
     * @example
     * // Create one Chat_panels
     * const Chat_panels = await prisma.chat_panels.create({
     *   data: {
     *     // ... data to create a Chat_panels
     *   }
     * })
     * 
     */
    create<T extends chat_panelsCreateArgs>(args: SelectSubset<T, chat_panelsCreateArgs<ExtArgs>>): Prisma__chat_panelsClient<$Result.GetResult<Prisma.$chat_panelsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Chat_panels.
     * @param {chat_panelsCreateManyArgs} args - Arguments to create many Chat_panels.
     * @example
     * // Create many Chat_panels
     * const chat_panels = await prisma.chat_panels.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends chat_panelsCreateManyArgs>(args?: SelectSubset<T, chat_panelsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Chat_panels and returns the data saved in the database.
     * @param {chat_panelsCreateManyAndReturnArgs} args - Arguments to create many Chat_panels.
     * @example
     * // Create many Chat_panels
     * const chat_panels = await prisma.chat_panels.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Chat_panels and only return the `id`
     * const chat_panelsWithIdOnly = await prisma.chat_panels.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends chat_panelsCreateManyAndReturnArgs>(args?: SelectSubset<T, chat_panelsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$chat_panelsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Chat_panels.
     * @param {chat_panelsDeleteArgs} args - Arguments to delete one Chat_panels.
     * @example
     * // Delete one Chat_panels
     * const Chat_panels = await prisma.chat_panels.delete({
     *   where: {
     *     // ... filter to delete one Chat_panels
     *   }
     * })
     * 
     */
    delete<T extends chat_panelsDeleteArgs>(args: SelectSubset<T, chat_panelsDeleteArgs<ExtArgs>>): Prisma__chat_panelsClient<$Result.GetResult<Prisma.$chat_panelsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Chat_panels.
     * @param {chat_panelsUpdateArgs} args - Arguments to update one Chat_panels.
     * @example
     * // Update one Chat_panels
     * const chat_panels = await prisma.chat_panels.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends chat_panelsUpdateArgs>(args: SelectSubset<T, chat_panelsUpdateArgs<ExtArgs>>): Prisma__chat_panelsClient<$Result.GetResult<Prisma.$chat_panelsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Chat_panels.
     * @param {chat_panelsDeleteManyArgs} args - Arguments to filter Chat_panels to delete.
     * @example
     * // Delete a few Chat_panels
     * const { count } = await prisma.chat_panels.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends chat_panelsDeleteManyArgs>(args?: SelectSubset<T, chat_panelsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Chat_panels.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chat_panelsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Chat_panels
     * const chat_panels = await prisma.chat_panels.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends chat_panelsUpdateManyArgs>(args: SelectSubset<T, chat_panelsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Chat_panels and returns the data updated in the database.
     * @param {chat_panelsUpdateManyAndReturnArgs} args - Arguments to update many Chat_panels.
     * @example
     * // Update many Chat_panels
     * const chat_panels = await prisma.chat_panels.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Chat_panels and only return the `id`
     * const chat_panelsWithIdOnly = await prisma.chat_panels.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends chat_panelsUpdateManyAndReturnArgs>(args: SelectSubset<T, chat_panelsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$chat_panelsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Chat_panels.
     * @param {chat_panelsUpsertArgs} args - Arguments to update or create a Chat_panels.
     * @example
     * // Update or create a Chat_panels
     * const chat_panels = await prisma.chat_panels.upsert({
     *   create: {
     *     // ... data to create a Chat_panels
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Chat_panels we want to update
     *   }
     * })
     */
    upsert<T extends chat_panelsUpsertArgs>(args: SelectSubset<T, chat_panelsUpsertArgs<ExtArgs>>): Prisma__chat_panelsClient<$Result.GetResult<Prisma.$chat_panelsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Chat_panels.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chat_panelsCountArgs} args - Arguments to filter Chat_panels to count.
     * @example
     * // Count the number of Chat_panels
     * const count = await prisma.chat_panels.count({
     *   where: {
     *     // ... the filter for the Chat_panels we want to count
     *   }
     * })
    **/
    count<T extends chat_panelsCountArgs>(
      args?: Subset<T, chat_panelsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Chat_panelsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Chat_panels.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Chat_panelsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Chat_panelsAggregateArgs>(args: Subset<T, Chat_panelsAggregateArgs>): Prisma.PrismaPromise<GetChat_panelsAggregateType<T>>

    /**
     * Group by Chat_panels.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chat_panelsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends chat_panelsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: chat_panelsGroupByArgs['orderBy'] }
        : { orderBy?: chat_panelsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, chat_panelsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetChat_panelsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the chat_panels model
   */
  readonly fields: chat_panelsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for chat_panels.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__chat_panelsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    chat_participants<T extends chat_panels$chat_participantsArgs<ExtArgs> = {}>(args?: Subset<T, chat_panels$chat_participantsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$chat_participantsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    messages<T extends chat_panels$messagesArgs<ExtArgs> = {}>(args?: Subset<T, chat_panels$messagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$messagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the chat_panels model
   */
  interface chat_panelsFieldRefs {
    readonly id: FieldRef<"chat_panels", 'BigInt'>
    readonly name: FieldRef<"chat_panels", 'String'>
    readonly created_at: FieldRef<"chat_panels", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * chat_panels findUnique
   */
  export type chat_panelsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_panels
     */
    select?: chat_panelsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_panels
     */
    omit?: chat_panelsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_panelsInclude<ExtArgs> | null
    /**
     * Filter, which chat_panels to fetch.
     */
    where: chat_panelsWhereUniqueInput
  }

  /**
   * chat_panels findUniqueOrThrow
   */
  export type chat_panelsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_panels
     */
    select?: chat_panelsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_panels
     */
    omit?: chat_panelsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_panelsInclude<ExtArgs> | null
    /**
     * Filter, which chat_panels to fetch.
     */
    where: chat_panelsWhereUniqueInput
  }

  /**
   * chat_panels findFirst
   */
  export type chat_panelsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_panels
     */
    select?: chat_panelsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_panels
     */
    omit?: chat_panelsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_panelsInclude<ExtArgs> | null
    /**
     * Filter, which chat_panels to fetch.
     */
    where?: chat_panelsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of chat_panels to fetch.
     */
    orderBy?: chat_panelsOrderByWithRelationInput | chat_panelsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for chat_panels.
     */
    cursor?: chat_panelsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` chat_panels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` chat_panels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of chat_panels.
     */
    distinct?: Chat_panelsScalarFieldEnum | Chat_panelsScalarFieldEnum[]
  }

  /**
   * chat_panels findFirstOrThrow
   */
  export type chat_panelsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_panels
     */
    select?: chat_panelsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_panels
     */
    omit?: chat_panelsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_panelsInclude<ExtArgs> | null
    /**
     * Filter, which chat_panels to fetch.
     */
    where?: chat_panelsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of chat_panels to fetch.
     */
    orderBy?: chat_panelsOrderByWithRelationInput | chat_panelsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for chat_panels.
     */
    cursor?: chat_panelsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` chat_panels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` chat_panels.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of chat_panels.
     */
    distinct?: Chat_panelsScalarFieldEnum | Chat_panelsScalarFieldEnum[]
  }

  /**
   * chat_panels findMany
   */
  export type chat_panelsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_panels
     */
    select?: chat_panelsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_panels
     */
    omit?: chat_panelsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_panelsInclude<ExtArgs> | null
    /**
     * Filter, which chat_panels to fetch.
     */
    where?: chat_panelsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of chat_panels to fetch.
     */
    orderBy?: chat_panelsOrderByWithRelationInput | chat_panelsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing chat_panels.
     */
    cursor?: chat_panelsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` chat_panels from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` chat_panels.
     */
    skip?: number
    distinct?: Chat_panelsScalarFieldEnum | Chat_panelsScalarFieldEnum[]
  }

  /**
   * chat_panels create
   */
  export type chat_panelsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_panels
     */
    select?: chat_panelsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_panels
     */
    omit?: chat_panelsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_panelsInclude<ExtArgs> | null
    /**
     * The data needed to create a chat_panels.
     */
    data: XOR<chat_panelsCreateInput, chat_panelsUncheckedCreateInput>
  }

  /**
   * chat_panels createMany
   */
  export type chat_panelsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many chat_panels.
     */
    data: chat_panelsCreateManyInput | chat_panelsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * chat_panels createManyAndReturn
   */
  export type chat_panelsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_panels
     */
    select?: chat_panelsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the chat_panels
     */
    omit?: chat_panelsOmit<ExtArgs> | null
    /**
     * The data used to create many chat_panels.
     */
    data: chat_panelsCreateManyInput | chat_panelsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * chat_panels update
   */
  export type chat_panelsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_panels
     */
    select?: chat_panelsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_panels
     */
    omit?: chat_panelsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_panelsInclude<ExtArgs> | null
    /**
     * The data needed to update a chat_panels.
     */
    data: XOR<chat_panelsUpdateInput, chat_panelsUncheckedUpdateInput>
    /**
     * Choose, which chat_panels to update.
     */
    where: chat_panelsWhereUniqueInput
  }

  /**
   * chat_panels updateMany
   */
  export type chat_panelsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update chat_panels.
     */
    data: XOR<chat_panelsUpdateManyMutationInput, chat_panelsUncheckedUpdateManyInput>
    /**
     * Filter which chat_panels to update
     */
    where?: chat_panelsWhereInput
    /**
     * Limit how many chat_panels to update.
     */
    limit?: number
  }

  /**
   * chat_panels updateManyAndReturn
   */
  export type chat_panelsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_panels
     */
    select?: chat_panelsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the chat_panels
     */
    omit?: chat_panelsOmit<ExtArgs> | null
    /**
     * The data used to update chat_panels.
     */
    data: XOR<chat_panelsUpdateManyMutationInput, chat_panelsUncheckedUpdateManyInput>
    /**
     * Filter which chat_panels to update
     */
    where?: chat_panelsWhereInput
    /**
     * Limit how many chat_panels to update.
     */
    limit?: number
  }

  /**
   * chat_panels upsert
   */
  export type chat_panelsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_panels
     */
    select?: chat_panelsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_panels
     */
    omit?: chat_panelsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_panelsInclude<ExtArgs> | null
    /**
     * The filter to search for the chat_panels to update in case it exists.
     */
    where: chat_panelsWhereUniqueInput
    /**
     * In case the chat_panels found by the `where` argument doesn't exist, create a new chat_panels with this data.
     */
    create: XOR<chat_panelsCreateInput, chat_panelsUncheckedCreateInput>
    /**
     * In case the chat_panels was found with the provided `where` argument, update it with this data.
     */
    update: XOR<chat_panelsUpdateInput, chat_panelsUncheckedUpdateInput>
  }

  /**
   * chat_panels delete
   */
  export type chat_panelsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_panels
     */
    select?: chat_panelsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_panels
     */
    omit?: chat_panelsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_panelsInclude<ExtArgs> | null
    /**
     * Filter which chat_panels to delete.
     */
    where: chat_panelsWhereUniqueInput
  }

  /**
   * chat_panels deleteMany
   */
  export type chat_panelsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which chat_panels to delete
     */
    where?: chat_panelsWhereInput
    /**
     * Limit how many chat_panels to delete.
     */
    limit?: number
  }

  /**
   * chat_panels.chat_participants
   */
  export type chat_panels$chat_participantsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_participants
     */
    select?: chat_participantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_participants
     */
    omit?: chat_participantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_participantsInclude<ExtArgs> | null
    where?: chat_participantsWhereInput
    orderBy?: chat_participantsOrderByWithRelationInput | chat_participantsOrderByWithRelationInput[]
    cursor?: chat_participantsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Chat_participantsScalarFieldEnum | Chat_participantsScalarFieldEnum[]
  }

  /**
   * chat_panels.messages
   */
  export type chat_panels$messagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the messages
     */
    select?: messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the messages
     */
    omit?: messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messagesInclude<ExtArgs> | null
    where?: messagesWhereInput
    orderBy?: messagesOrderByWithRelationInput | messagesOrderByWithRelationInput[]
    cursor?: messagesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MessagesScalarFieldEnum | MessagesScalarFieldEnum[]
  }

  /**
   * chat_panels without action
   */
  export type chat_panelsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_panels
     */
    select?: chat_panelsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_panels
     */
    omit?: chat_panelsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_panelsInclude<ExtArgs> | null
  }


  /**
   * Model chat_participants
   */

  export type AggregateChat_participants = {
    _count: Chat_participantsCountAggregateOutputType | null
    _avg: Chat_participantsAvgAggregateOutputType | null
    _sum: Chat_participantsSumAggregateOutputType | null
    _min: Chat_participantsMinAggregateOutputType | null
    _max: Chat_participantsMaxAggregateOutputType | null
  }

  export type Chat_participantsAvgAggregateOutputType = {
    chat_panel_id: number | null
  }

  export type Chat_participantsSumAggregateOutputType = {
    chat_panel_id: bigint | null
  }

  export type Chat_participantsMinAggregateOutputType = {
    user_id: string | null
    chat_panel_id: bigint | null
    created_at: Date | null
  }

  export type Chat_participantsMaxAggregateOutputType = {
    user_id: string | null
    chat_panel_id: bigint | null
    created_at: Date | null
  }

  export type Chat_participantsCountAggregateOutputType = {
    user_id: number
    chat_panel_id: number
    created_at: number
    _all: number
  }


  export type Chat_participantsAvgAggregateInputType = {
    chat_panel_id?: true
  }

  export type Chat_participantsSumAggregateInputType = {
    chat_panel_id?: true
  }

  export type Chat_participantsMinAggregateInputType = {
    user_id?: true
    chat_panel_id?: true
    created_at?: true
  }

  export type Chat_participantsMaxAggregateInputType = {
    user_id?: true
    chat_panel_id?: true
    created_at?: true
  }

  export type Chat_participantsCountAggregateInputType = {
    user_id?: true
    chat_panel_id?: true
    created_at?: true
    _all?: true
  }

  export type Chat_participantsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which chat_participants to aggregate.
     */
    where?: chat_participantsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of chat_participants to fetch.
     */
    orderBy?: chat_participantsOrderByWithRelationInput | chat_participantsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: chat_participantsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` chat_participants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` chat_participants.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned chat_participants
    **/
    _count?: true | Chat_participantsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Chat_participantsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Chat_participantsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Chat_participantsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Chat_participantsMaxAggregateInputType
  }

  export type GetChat_participantsAggregateType<T extends Chat_participantsAggregateArgs> = {
        [P in keyof T & keyof AggregateChat_participants]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateChat_participants[P]>
      : GetScalarType<T[P], AggregateChat_participants[P]>
  }




  export type chat_participantsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: chat_participantsWhereInput
    orderBy?: chat_participantsOrderByWithAggregationInput | chat_participantsOrderByWithAggregationInput[]
    by: Chat_participantsScalarFieldEnum[] | Chat_participantsScalarFieldEnum
    having?: chat_participantsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Chat_participantsCountAggregateInputType | true
    _avg?: Chat_participantsAvgAggregateInputType
    _sum?: Chat_participantsSumAggregateInputType
    _min?: Chat_participantsMinAggregateInputType
    _max?: Chat_participantsMaxAggregateInputType
  }

  export type Chat_participantsGroupByOutputType = {
    user_id: string
    chat_panel_id: bigint
    created_at: Date | null
    _count: Chat_participantsCountAggregateOutputType | null
    _avg: Chat_participantsAvgAggregateOutputType | null
    _sum: Chat_participantsSumAggregateOutputType | null
    _min: Chat_participantsMinAggregateOutputType | null
    _max: Chat_participantsMaxAggregateOutputType | null
  }

  type GetChat_participantsGroupByPayload<T extends chat_participantsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Chat_participantsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Chat_participantsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Chat_participantsGroupByOutputType[P]>
            : GetScalarType<T[P], Chat_participantsGroupByOutputType[P]>
        }
      >
    >


  export type chat_participantsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_id?: boolean
    chat_panel_id?: boolean
    created_at?: boolean
    chat_panels?: boolean | chat_panelsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["chat_participants"]>

  export type chat_participantsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_id?: boolean
    chat_panel_id?: boolean
    created_at?: boolean
    chat_panels?: boolean | chat_panelsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["chat_participants"]>

  export type chat_participantsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_id?: boolean
    chat_panel_id?: boolean
    created_at?: boolean
    chat_panels?: boolean | chat_panelsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["chat_participants"]>

  export type chat_participantsSelectScalar = {
    user_id?: boolean
    chat_panel_id?: boolean
    created_at?: boolean
  }

  export type chat_participantsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"user_id" | "chat_panel_id" | "created_at", ExtArgs["result"]["chat_participants"]>
  export type chat_participantsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    chat_panels?: boolean | chat_panelsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type chat_participantsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    chat_panels?: boolean | chat_panelsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type chat_participantsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    chat_panels?: boolean | chat_panelsDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $chat_participantsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "chat_participants"
    objects: {
      chat_panels: Prisma.$chat_panelsPayload<ExtArgs>
      users: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      user_id: string
      chat_panel_id: bigint
      created_at: Date | null
    }, ExtArgs["result"]["chat_participants"]>
    composites: {}
  }

  type chat_participantsGetPayload<S extends boolean | null | undefined | chat_participantsDefaultArgs> = $Result.GetResult<Prisma.$chat_participantsPayload, S>

  type chat_participantsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<chat_participantsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Chat_participantsCountAggregateInputType | true
    }

  export interface chat_participantsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['chat_participants'], meta: { name: 'chat_participants' } }
    /**
     * Find zero or one Chat_participants that matches the filter.
     * @param {chat_participantsFindUniqueArgs} args - Arguments to find a Chat_participants
     * @example
     * // Get one Chat_participants
     * const chat_participants = await prisma.chat_participants.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends chat_participantsFindUniqueArgs>(args: SelectSubset<T, chat_participantsFindUniqueArgs<ExtArgs>>): Prisma__chat_participantsClient<$Result.GetResult<Prisma.$chat_participantsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Chat_participants that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {chat_participantsFindUniqueOrThrowArgs} args - Arguments to find a Chat_participants
     * @example
     * // Get one Chat_participants
     * const chat_participants = await prisma.chat_participants.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends chat_participantsFindUniqueOrThrowArgs>(args: SelectSubset<T, chat_participantsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__chat_participantsClient<$Result.GetResult<Prisma.$chat_participantsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Chat_participants that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chat_participantsFindFirstArgs} args - Arguments to find a Chat_participants
     * @example
     * // Get one Chat_participants
     * const chat_participants = await prisma.chat_participants.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends chat_participantsFindFirstArgs>(args?: SelectSubset<T, chat_participantsFindFirstArgs<ExtArgs>>): Prisma__chat_participantsClient<$Result.GetResult<Prisma.$chat_participantsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Chat_participants that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chat_participantsFindFirstOrThrowArgs} args - Arguments to find a Chat_participants
     * @example
     * // Get one Chat_participants
     * const chat_participants = await prisma.chat_participants.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends chat_participantsFindFirstOrThrowArgs>(args?: SelectSubset<T, chat_participantsFindFirstOrThrowArgs<ExtArgs>>): Prisma__chat_participantsClient<$Result.GetResult<Prisma.$chat_participantsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Chat_participants that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chat_participantsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Chat_participants
     * const chat_participants = await prisma.chat_participants.findMany()
     * 
     * // Get first 10 Chat_participants
     * const chat_participants = await prisma.chat_participants.findMany({ take: 10 })
     * 
     * // Only select the `user_id`
     * const chat_participantsWithUser_idOnly = await prisma.chat_participants.findMany({ select: { user_id: true } })
     * 
     */
    findMany<T extends chat_participantsFindManyArgs>(args?: SelectSubset<T, chat_participantsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$chat_participantsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Chat_participants.
     * @param {chat_participantsCreateArgs} args - Arguments to create a Chat_participants.
     * @example
     * // Create one Chat_participants
     * const Chat_participants = await prisma.chat_participants.create({
     *   data: {
     *     // ... data to create a Chat_participants
     *   }
     * })
     * 
     */
    create<T extends chat_participantsCreateArgs>(args: SelectSubset<T, chat_participantsCreateArgs<ExtArgs>>): Prisma__chat_participantsClient<$Result.GetResult<Prisma.$chat_participantsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Chat_participants.
     * @param {chat_participantsCreateManyArgs} args - Arguments to create many Chat_participants.
     * @example
     * // Create many Chat_participants
     * const chat_participants = await prisma.chat_participants.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends chat_participantsCreateManyArgs>(args?: SelectSubset<T, chat_participantsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Chat_participants and returns the data saved in the database.
     * @param {chat_participantsCreateManyAndReturnArgs} args - Arguments to create many Chat_participants.
     * @example
     * // Create many Chat_participants
     * const chat_participants = await prisma.chat_participants.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Chat_participants and only return the `user_id`
     * const chat_participantsWithUser_idOnly = await prisma.chat_participants.createManyAndReturn({
     *   select: { user_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends chat_participantsCreateManyAndReturnArgs>(args?: SelectSubset<T, chat_participantsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$chat_participantsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Chat_participants.
     * @param {chat_participantsDeleteArgs} args - Arguments to delete one Chat_participants.
     * @example
     * // Delete one Chat_participants
     * const Chat_participants = await prisma.chat_participants.delete({
     *   where: {
     *     // ... filter to delete one Chat_participants
     *   }
     * })
     * 
     */
    delete<T extends chat_participantsDeleteArgs>(args: SelectSubset<T, chat_participantsDeleteArgs<ExtArgs>>): Prisma__chat_participantsClient<$Result.GetResult<Prisma.$chat_participantsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Chat_participants.
     * @param {chat_participantsUpdateArgs} args - Arguments to update one Chat_participants.
     * @example
     * // Update one Chat_participants
     * const chat_participants = await prisma.chat_participants.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends chat_participantsUpdateArgs>(args: SelectSubset<T, chat_participantsUpdateArgs<ExtArgs>>): Prisma__chat_participantsClient<$Result.GetResult<Prisma.$chat_participantsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Chat_participants.
     * @param {chat_participantsDeleteManyArgs} args - Arguments to filter Chat_participants to delete.
     * @example
     * // Delete a few Chat_participants
     * const { count } = await prisma.chat_participants.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends chat_participantsDeleteManyArgs>(args?: SelectSubset<T, chat_participantsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Chat_participants.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chat_participantsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Chat_participants
     * const chat_participants = await prisma.chat_participants.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends chat_participantsUpdateManyArgs>(args: SelectSubset<T, chat_participantsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Chat_participants and returns the data updated in the database.
     * @param {chat_participantsUpdateManyAndReturnArgs} args - Arguments to update many Chat_participants.
     * @example
     * // Update many Chat_participants
     * const chat_participants = await prisma.chat_participants.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Chat_participants and only return the `user_id`
     * const chat_participantsWithUser_idOnly = await prisma.chat_participants.updateManyAndReturn({
     *   select: { user_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends chat_participantsUpdateManyAndReturnArgs>(args: SelectSubset<T, chat_participantsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$chat_participantsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Chat_participants.
     * @param {chat_participantsUpsertArgs} args - Arguments to update or create a Chat_participants.
     * @example
     * // Update or create a Chat_participants
     * const chat_participants = await prisma.chat_participants.upsert({
     *   create: {
     *     // ... data to create a Chat_participants
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Chat_participants we want to update
     *   }
     * })
     */
    upsert<T extends chat_participantsUpsertArgs>(args: SelectSubset<T, chat_participantsUpsertArgs<ExtArgs>>): Prisma__chat_participantsClient<$Result.GetResult<Prisma.$chat_participantsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Chat_participants.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chat_participantsCountArgs} args - Arguments to filter Chat_participants to count.
     * @example
     * // Count the number of Chat_participants
     * const count = await prisma.chat_participants.count({
     *   where: {
     *     // ... the filter for the Chat_participants we want to count
     *   }
     * })
    **/
    count<T extends chat_participantsCountArgs>(
      args?: Subset<T, chat_participantsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Chat_participantsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Chat_participants.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Chat_participantsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Chat_participantsAggregateArgs>(args: Subset<T, Chat_participantsAggregateArgs>): Prisma.PrismaPromise<GetChat_participantsAggregateType<T>>

    /**
     * Group by Chat_participants.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {chat_participantsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends chat_participantsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: chat_participantsGroupByArgs['orderBy'] }
        : { orderBy?: chat_participantsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, chat_participantsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetChat_participantsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the chat_participants model
   */
  readonly fields: chat_participantsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for chat_participants.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__chat_participantsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    chat_panels<T extends chat_panelsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, chat_panelsDefaultArgs<ExtArgs>>): Prisma__chat_panelsClient<$Result.GetResult<Prisma.$chat_panelsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the chat_participants model
   */
  interface chat_participantsFieldRefs {
    readonly user_id: FieldRef<"chat_participants", 'String'>
    readonly chat_panel_id: FieldRef<"chat_participants", 'BigInt'>
    readonly created_at: FieldRef<"chat_participants", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * chat_participants findUnique
   */
  export type chat_participantsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_participants
     */
    select?: chat_participantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_participants
     */
    omit?: chat_participantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_participantsInclude<ExtArgs> | null
    /**
     * Filter, which chat_participants to fetch.
     */
    where: chat_participantsWhereUniqueInput
  }

  /**
   * chat_participants findUniqueOrThrow
   */
  export type chat_participantsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_participants
     */
    select?: chat_participantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_participants
     */
    omit?: chat_participantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_participantsInclude<ExtArgs> | null
    /**
     * Filter, which chat_participants to fetch.
     */
    where: chat_participantsWhereUniqueInput
  }

  /**
   * chat_participants findFirst
   */
  export type chat_participantsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_participants
     */
    select?: chat_participantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_participants
     */
    omit?: chat_participantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_participantsInclude<ExtArgs> | null
    /**
     * Filter, which chat_participants to fetch.
     */
    where?: chat_participantsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of chat_participants to fetch.
     */
    orderBy?: chat_participantsOrderByWithRelationInput | chat_participantsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for chat_participants.
     */
    cursor?: chat_participantsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` chat_participants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` chat_participants.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of chat_participants.
     */
    distinct?: Chat_participantsScalarFieldEnum | Chat_participantsScalarFieldEnum[]
  }

  /**
   * chat_participants findFirstOrThrow
   */
  export type chat_participantsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_participants
     */
    select?: chat_participantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_participants
     */
    omit?: chat_participantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_participantsInclude<ExtArgs> | null
    /**
     * Filter, which chat_participants to fetch.
     */
    where?: chat_participantsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of chat_participants to fetch.
     */
    orderBy?: chat_participantsOrderByWithRelationInput | chat_participantsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for chat_participants.
     */
    cursor?: chat_participantsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` chat_participants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` chat_participants.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of chat_participants.
     */
    distinct?: Chat_participantsScalarFieldEnum | Chat_participantsScalarFieldEnum[]
  }

  /**
   * chat_participants findMany
   */
  export type chat_participantsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_participants
     */
    select?: chat_participantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_participants
     */
    omit?: chat_participantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_participantsInclude<ExtArgs> | null
    /**
     * Filter, which chat_participants to fetch.
     */
    where?: chat_participantsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of chat_participants to fetch.
     */
    orderBy?: chat_participantsOrderByWithRelationInput | chat_participantsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing chat_participants.
     */
    cursor?: chat_participantsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` chat_participants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` chat_participants.
     */
    skip?: number
    distinct?: Chat_participantsScalarFieldEnum | Chat_participantsScalarFieldEnum[]
  }

  /**
   * chat_participants create
   */
  export type chat_participantsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_participants
     */
    select?: chat_participantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_participants
     */
    omit?: chat_participantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_participantsInclude<ExtArgs> | null
    /**
     * The data needed to create a chat_participants.
     */
    data: XOR<chat_participantsCreateInput, chat_participantsUncheckedCreateInput>
  }

  /**
   * chat_participants createMany
   */
  export type chat_participantsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many chat_participants.
     */
    data: chat_participantsCreateManyInput | chat_participantsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * chat_participants createManyAndReturn
   */
  export type chat_participantsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_participants
     */
    select?: chat_participantsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the chat_participants
     */
    omit?: chat_participantsOmit<ExtArgs> | null
    /**
     * The data used to create many chat_participants.
     */
    data: chat_participantsCreateManyInput | chat_participantsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_participantsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * chat_participants update
   */
  export type chat_participantsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_participants
     */
    select?: chat_participantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_participants
     */
    omit?: chat_participantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_participantsInclude<ExtArgs> | null
    /**
     * The data needed to update a chat_participants.
     */
    data: XOR<chat_participantsUpdateInput, chat_participantsUncheckedUpdateInput>
    /**
     * Choose, which chat_participants to update.
     */
    where: chat_participantsWhereUniqueInput
  }

  /**
   * chat_participants updateMany
   */
  export type chat_participantsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update chat_participants.
     */
    data: XOR<chat_participantsUpdateManyMutationInput, chat_participantsUncheckedUpdateManyInput>
    /**
     * Filter which chat_participants to update
     */
    where?: chat_participantsWhereInput
    /**
     * Limit how many chat_participants to update.
     */
    limit?: number
  }

  /**
   * chat_participants updateManyAndReturn
   */
  export type chat_participantsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_participants
     */
    select?: chat_participantsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the chat_participants
     */
    omit?: chat_participantsOmit<ExtArgs> | null
    /**
     * The data used to update chat_participants.
     */
    data: XOR<chat_participantsUpdateManyMutationInput, chat_participantsUncheckedUpdateManyInput>
    /**
     * Filter which chat_participants to update
     */
    where?: chat_participantsWhereInput
    /**
     * Limit how many chat_participants to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_participantsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * chat_participants upsert
   */
  export type chat_participantsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_participants
     */
    select?: chat_participantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_participants
     */
    omit?: chat_participantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_participantsInclude<ExtArgs> | null
    /**
     * The filter to search for the chat_participants to update in case it exists.
     */
    where: chat_participantsWhereUniqueInput
    /**
     * In case the chat_participants found by the `where` argument doesn't exist, create a new chat_participants with this data.
     */
    create: XOR<chat_participantsCreateInput, chat_participantsUncheckedCreateInput>
    /**
     * In case the chat_participants was found with the provided `where` argument, update it with this data.
     */
    update: XOR<chat_participantsUpdateInput, chat_participantsUncheckedUpdateInput>
  }

  /**
   * chat_participants delete
   */
  export type chat_participantsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_participants
     */
    select?: chat_participantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_participants
     */
    omit?: chat_participantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_participantsInclude<ExtArgs> | null
    /**
     * Filter which chat_participants to delete.
     */
    where: chat_participantsWhereUniqueInput
  }

  /**
   * chat_participants deleteMany
   */
  export type chat_participantsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which chat_participants to delete
     */
    where?: chat_participantsWhereInput
    /**
     * Limit how many chat_participants to delete.
     */
    limit?: number
  }

  /**
   * chat_participants without action
   */
  export type chat_participantsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_participants
     */
    select?: chat_participantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_participants
     */
    omit?: chat_participantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_participantsInclude<ExtArgs> | null
  }


  /**
   * Model configurations
   */

  export type AggregateConfigurations = {
    _count: ConfigurationsCountAggregateOutputType | null
    _avg: ConfigurationsAvgAggregateOutputType | null
    _sum: ConfigurationsSumAggregateOutputType | null
    _min: ConfigurationsMinAggregateOutputType | null
    _max: ConfigurationsMaxAggregateOutputType | null
  }

  export type ConfigurationsAvgAggregateOutputType = {
    id: number | null
  }

  export type ConfigurationsSumAggregateOutputType = {
    id: bigint | null
  }

  export type ConfigurationsMinAggregateOutputType = {
    id: bigint | null
    user_id: string | null
    language: string | null
    timezone: string | null
  }

  export type ConfigurationsMaxAggregateOutputType = {
    id: bigint | null
    user_id: string | null
    language: string | null
    timezone: string | null
  }

  export type ConfigurationsCountAggregateOutputType = {
    id: number
    user_id: number
    language: number
    timezone: number
    _all: number
  }


  export type ConfigurationsAvgAggregateInputType = {
    id?: true
  }

  export type ConfigurationsSumAggregateInputType = {
    id?: true
  }

  export type ConfigurationsMinAggregateInputType = {
    id?: true
    user_id?: true
    language?: true
    timezone?: true
  }

  export type ConfigurationsMaxAggregateInputType = {
    id?: true
    user_id?: true
    language?: true
    timezone?: true
  }

  export type ConfigurationsCountAggregateInputType = {
    id?: true
    user_id?: true
    language?: true
    timezone?: true
    _all?: true
  }

  export type ConfigurationsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which configurations to aggregate.
     */
    where?: configurationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of configurations to fetch.
     */
    orderBy?: configurationsOrderByWithRelationInput | configurationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: configurationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` configurations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` configurations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned configurations
    **/
    _count?: true | ConfigurationsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ConfigurationsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ConfigurationsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ConfigurationsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ConfigurationsMaxAggregateInputType
  }

  export type GetConfigurationsAggregateType<T extends ConfigurationsAggregateArgs> = {
        [P in keyof T & keyof AggregateConfigurations]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateConfigurations[P]>
      : GetScalarType<T[P], AggregateConfigurations[P]>
  }




  export type configurationsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: configurationsWhereInput
    orderBy?: configurationsOrderByWithAggregationInput | configurationsOrderByWithAggregationInput[]
    by: ConfigurationsScalarFieldEnum[] | ConfigurationsScalarFieldEnum
    having?: configurationsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ConfigurationsCountAggregateInputType | true
    _avg?: ConfigurationsAvgAggregateInputType
    _sum?: ConfigurationsSumAggregateInputType
    _min?: ConfigurationsMinAggregateInputType
    _max?: ConfigurationsMaxAggregateInputType
  }

  export type ConfigurationsGroupByOutputType = {
    id: bigint
    user_id: string
    language: string
    timezone: string
    _count: ConfigurationsCountAggregateOutputType | null
    _avg: ConfigurationsAvgAggregateOutputType | null
    _sum: ConfigurationsSumAggregateOutputType | null
    _min: ConfigurationsMinAggregateOutputType | null
    _max: ConfigurationsMaxAggregateOutputType | null
  }

  type GetConfigurationsGroupByPayload<T extends configurationsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ConfigurationsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ConfigurationsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ConfigurationsGroupByOutputType[P]>
            : GetScalarType<T[P], ConfigurationsGroupByOutputType[P]>
        }
      >
    >


  export type configurationsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    language?: boolean
    timezone?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["configurations"]>

  export type configurationsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    language?: boolean
    timezone?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["configurations"]>

  export type configurationsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    language?: boolean
    timezone?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["configurations"]>

  export type configurationsSelectScalar = {
    id?: boolean
    user_id?: boolean
    language?: boolean
    timezone?: boolean
  }

  export type configurationsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "language" | "timezone", ExtArgs["result"]["configurations"]>
  export type configurationsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type configurationsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type configurationsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $configurationsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "configurations"
    objects: {
      users: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      user_id: string
      language: string
      timezone: string
    }, ExtArgs["result"]["configurations"]>
    composites: {}
  }

  type configurationsGetPayload<S extends boolean | null | undefined | configurationsDefaultArgs> = $Result.GetResult<Prisma.$configurationsPayload, S>

  type configurationsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<configurationsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ConfigurationsCountAggregateInputType | true
    }

  export interface configurationsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['configurations'], meta: { name: 'configurations' } }
    /**
     * Find zero or one Configurations that matches the filter.
     * @param {configurationsFindUniqueArgs} args - Arguments to find a Configurations
     * @example
     * // Get one Configurations
     * const configurations = await prisma.configurations.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends configurationsFindUniqueArgs>(args: SelectSubset<T, configurationsFindUniqueArgs<ExtArgs>>): Prisma__configurationsClient<$Result.GetResult<Prisma.$configurationsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Configurations that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {configurationsFindUniqueOrThrowArgs} args - Arguments to find a Configurations
     * @example
     * // Get one Configurations
     * const configurations = await prisma.configurations.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends configurationsFindUniqueOrThrowArgs>(args: SelectSubset<T, configurationsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__configurationsClient<$Result.GetResult<Prisma.$configurationsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Configurations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {configurationsFindFirstArgs} args - Arguments to find a Configurations
     * @example
     * // Get one Configurations
     * const configurations = await prisma.configurations.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends configurationsFindFirstArgs>(args?: SelectSubset<T, configurationsFindFirstArgs<ExtArgs>>): Prisma__configurationsClient<$Result.GetResult<Prisma.$configurationsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Configurations that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {configurationsFindFirstOrThrowArgs} args - Arguments to find a Configurations
     * @example
     * // Get one Configurations
     * const configurations = await prisma.configurations.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends configurationsFindFirstOrThrowArgs>(args?: SelectSubset<T, configurationsFindFirstOrThrowArgs<ExtArgs>>): Prisma__configurationsClient<$Result.GetResult<Prisma.$configurationsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Configurations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {configurationsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Configurations
     * const configurations = await prisma.configurations.findMany()
     * 
     * // Get first 10 Configurations
     * const configurations = await prisma.configurations.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const configurationsWithIdOnly = await prisma.configurations.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends configurationsFindManyArgs>(args?: SelectSubset<T, configurationsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$configurationsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Configurations.
     * @param {configurationsCreateArgs} args - Arguments to create a Configurations.
     * @example
     * // Create one Configurations
     * const Configurations = await prisma.configurations.create({
     *   data: {
     *     // ... data to create a Configurations
     *   }
     * })
     * 
     */
    create<T extends configurationsCreateArgs>(args: SelectSubset<T, configurationsCreateArgs<ExtArgs>>): Prisma__configurationsClient<$Result.GetResult<Prisma.$configurationsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Configurations.
     * @param {configurationsCreateManyArgs} args - Arguments to create many Configurations.
     * @example
     * // Create many Configurations
     * const configurations = await prisma.configurations.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends configurationsCreateManyArgs>(args?: SelectSubset<T, configurationsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Configurations and returns the data saved in the database.
     * @param {configurationsCreateManyAndReturnArgs} args - Arguments to create many Configurations.
     * @example
     * // Create many Configurations
     * const configurations = await prisma.configurations.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Configurations and only return the `id`
     * const configurationsWithIdOnly = await prisma.configurations.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends configurationsCreateManyAndReturnArgs>(args?: SelectSubset<T, configurationsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$configurationsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Configurations.
     * @param {configurationsDeleteArgs} args - Arguments to delete one Configurations.
     * @example
     * // Delete one Configurations
     * const Configurations = await prisma.configurations.delete({
     *   where: {
     *     // ... filter to delete one Configurations
     *   }
     * })
     * 
     */
    delete<T extends configurationsDeleteArgs>(args: SelectSubset<T, configurationsDeleteArgs<ExtArgs>>): Prisma__configurationsClient<$Result.GetResult<Prisma.$configurationsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Configurations.
     * @param {configurationsUpdateArgs} args - Arguments to update one Configurations.
     * @example
     * // Update one Configurations
     * const configurations = await prisma.configurations.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends configurationsUpdateArgs>(args: SelectSubset<T, configurationsUpdateArgs<ExtArgs>>): Prisma__configurationsClient<$Result.GetResult<Prisma.$configurationsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Configurations.
     * @param {configurationsDeleteManyArgs} args - Arguments to filter Configurations to delete.
     * @example
     * // Delete a few Configurations
     * const { count } = await prisma.configurations.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends configurationsDeleteManyArgs>(args?: SelectSubset<T, configurationsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Configurations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {configurationsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Configurations
     * const configurations = await prisma.configurations.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends configurationsUpdateManyArgs>(args: SelectSubset<T, configurationsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Configurations and returns the data updated in the database.
     * @param {configurationsUpdateManyAndReturnArgs} args - Arguments to update many Configurations.
     * @example
     * // Update many Configurations
     * const configurations = await prisma.configurations.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Configurations and only return the `id`
     * const configurationsWithIdOnly = await prisma.configurations.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends configurationsUpdateManyAndReturnArgs>(args: SelectSubset<T, configurationsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$configurationsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Configurations.
     * @param {configurationsUpsertArgs} args - Arguments to update or create a Configurations.
     * @example
     * // Update or create a Configurations
     * const configurations = await prisma.configurations.upsert({
     *   create: {
     *     // ... data to create a Configurations
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Configurations we want to update
     *   }
     * })
     */
    upsert<T extends configurationsUpsertArgs>(args: SelectSubset<T, configurationsUpsertArgs<ExtArgs>>): Prisma__configurationsClient<$Result.GetResult<Prisma.$configurationsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Configurations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {configurationsCountArgs} args - Arguments to filter Configurations to count.
     * @example
     * // Count the number of Configurations
     * const count = await prisma.configurations.count({
     *   where: {
     *     // ... the filter for the Configurations we want to count
     *   }
     * })
    **/
    count<T extends configurationsCountArgs>(
      args?: Subset<T, configurationsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ConfigurationsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Configurations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ConfigurationsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ConfigurationsAggregateArgs>(args: Subset<T, ConfigurationsAggregateArgs>): Prisma.PrismaPromise<GetConfigurationsAggregateType<T>>

    /**
     * Group by Configurations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {configurationsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends configurationsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: configurationsGroupByArgs['orderBy'] }
        : { orderBy?: configurationsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, configurationsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetConfigurationsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the configurations model
   */
  readonly fields: configurationsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for configurations.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__configurationsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the configurations model
   */
  interface configurationsFieldRefs {
    readonly id: FieldRef<"configurations", 'BigInt'>
    readonly user_id: FieldRef<"configurations", 'String'>
    readonly language: FieldRef<"configurations", 'String'>
    readonly timezone: FieldRef<"configurations", 'String'>
  }
    

  // Custom InputTypes
  /**
   * configurations findUnique
   */
  export type configurationsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configurations
     */
    select?: configurationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configurations
     */
    omit?: configurationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: configurationsInclude<ExtArgs> | null
    /**
     * Filter, which configurations to fetch.
     */
    where: configurationsWhereUniqueInput
  }

  /**
   * configurations findUniqueOrThrow
   */
  export type configurationsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configurations
     */
    select?: configurationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configurations
     */
    omit?: configurationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: configurationsInclude<ExtArgs> | null
    /**
     * Filter, which configurations to fetch.
     */
    where: configurationsWhereUniqueInput
  }

  /**
   * configurations findFirst
   */
  export type configurationsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configurations
     */
    select?: configurationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configurations
     */
    omit?: configurationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: configurationsInclude<ExtArgs> | null
    /**
     * Filter, which configurations to fetch.
     */
    where?: configurationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of configurations to fetch.
     */
    orderBy?: configurationsOrderByWithRelationInput | configurationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for configurations.
     */
    cursor?: configurationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` configurations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` configurations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of configurations.
     */
    distinct?: ConfigurationsScalarFieldEnum | ConfigurationsScalarFieldEnum[]
  }

  /**
   * configurations findFirstOrThrow
   */
  export type configurationsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configurations
     */
    select?: configurationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configurations
     */
    omit?: configurationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: configurationsInclude<ExtArgs> | null
    /**
     * Filter, which configurations to fetch.
     */
    where?: configurationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of configurations to fetch.
     */
    orderBy?: configurationsOrderByWithRelationInput | configurationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for configurations.
     */
    cursor?: configurationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` configurations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` configurations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of configurations.
     */
    distinct?: ConfigurationsScalarFieldEnum | ConfigurationsScalarFieldEnum[]
  }

  /**
   * configurations findMany
   */
  export type configurationsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configurations
     */
    select?: configurationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configurations
     */
    omit?: configurationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: configurationsInclude<ExtArgs> | null
    /**
     * Filter, which configurations to fetch.
     */
    where?: configurationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of configurations to fetch.
     */
    orderBy?: configurationsOrderByWithRelationInput | configurationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing configurations.
     */
    cursor?: configurationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` configurations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` configurations.
     */
    skip?: number
    distinct?: ConfigurationsScalarFieldEnum | ConfigurationsScalarFieldEnum[]
  }

  /**
   * configurations create
   */
  export type configurationsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configurations
     */
    select?: configurationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configurations
     */
    omit?: configurationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: configurationsInclude<ExtArgs> | null
    /**
     * The data needed to create a configurations.
     */
    data: XOR<configurationsCreateInput, configurationsUncheckedCreateInput>
  }

  /**
   * configurations createMany
   */
  export type configurationsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many configurations.
     */
    data: configurationsCreateManyInput | configurationsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * configurations createManyAndReturn
   */
  export type configurationsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configurations
     */
    select?: configurationsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the configurations
     */
    omit?: configurationsOmit<ExtArgs> | null
    /**
     * The data used to create many configurations.
     */
    data: configurationsCreateManyInput | configurationsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: configurationsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * configurations update
   */
  export type configurationsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configurations
     */
    select?: configurationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configurations
     */
    omit?: configurationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: configurationsInclude<ExtArgs> | null
    /**
     * The data needed to update a configurations.
     */
    data: XOR<configurationsUpdateInput, configurationsUncheckedUpdateInput>
    /**
     * Choose, which configurations to update.
     */
    where: configurationsWhereUniqueInput
  }

  /**
   * configurations updateMany
   */
  export type configurationsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update configurations.
     */
    data: XOR<configurationsUpdateManyMutationInput, configurationsUncheckedUpdateManyInput>
    /**
     * Filter which configurations to update
     */
    where?: configurationsWhereInput
    /**
     * Limit how many configurations to update.
     */
    limit?: number
  }

  /**
   * configurations updateManyAndReturn
   */
  export type configurationsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configurations
     */
    select?: configurationsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the configurations
     */
    omit?: configurationsOmit<ExtArgs> | null
    /**
     * The data used to update configurations.
     */
    data: XOR<configurationsUpdateManyMutationInput, configurationsUncheckedUpdateManyInput>
    /**
     * Filter which configurations to update
     */
    where?: configurationsWhereInput
    /**
     * Limit how many configurations to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: configurationsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * configurations upsert
   */
  export type configurationsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configurations
     */
    select?: configurationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configurations
     */
    omit?: configurationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: configurationsInclude<ExtArgs> | null
    /**
     * The filter to search for the configurations to update in case it exists.
     */
    where: configurationsWhereUniqueInput
    /**
     * In case the configurations found by the `where` argument doesn't exist, create a new configurations with this data.
     */
    create: XOR<configurationsCreateInput, configurationsUncheckedCreateInput>
    /**
     * In case the configurations was found with the provided `where` argument, update it with this data.
     */
    update: XOR<configurationsUpdateInput, configurationsUncheckedUpdateInput>
  }

  /**
   * configurations delete
   */
  export type configurationsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configurations
     */
    select?: configurationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configurations
     */
    omit?: configurationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: configurationsInclude<ExtArgs> | null
    /**
     * Filter which configurations to delete.
     */
    where: configurationsWhereUniqueInput
  }

  /**
   * configurations deleteMany
   */
  export type configurationsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which configurations to delete
     */
    where?: configurationsWhereInput
    /**
     * Limit how many configurations to delete.
     */
    limit?: number
  }

  /**
   * configurations without action
   */
  export type configurationsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configurations
     */
    select?: configurationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configurations
     */
    omit?: configurationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: configurationsInclude<ExtArgs> | null
  }


  /**
   * Model deliveries
   */

  export type AggregateDeliveries = {
    _count: DeliveriesCountAggregateOutputType | null
    _avg: DeliveriesAvgAggregateOutputType | null
    _sum: DeliveriesSumAggregateOutputType | null
    _min: DeliveriesMinAggregateOutputType | null
    _max: DeliveriesMaxAggregateOutputType | null
  }

  export type DeliveriesAvgAggregateOutputType = {
    id: number | null
    order_id: number | null
    latitude: number | null
    longitude: number | null
  }

  export type DeliveriesSumAggregateOutputType = {
    id: bigint | null
    order_id: bigint | null
    latitude: number | null
    longitude: number | null
  }

  export type DeliveriesMinAggregateOutputType = {
    id: bigint | null
    order_id: bigint | null
    delivery_person: string | null
    status: $Enums.DeliveryStatus | null
    start_time: Date | null
    end_time: Date | null
    notes: string | null
    created_at: Date | null
    updated_at: Date | null
    latitude: number | null
    longitude: number | null
  }

  export type DeliveriesMaxAggregateOutputType = {
    id: bigint | null
    order_id: bigint | null
    delivery_person: string | null
    status: $Enums.DeliveryStatus | null
    start_time: Date | null
    end_time: Date | null
    notes: string | null
    created_at: Date | null
    updated_at: Date | null
    latitude: number | null
    longitude: number | null
  }

  export type DeliveriesCountAggregateOutputType = {
    id: number
    order_id: number
    delivery_person: number
    status: number
    start_time: number
    end_time: number
    notes: number
    created_at: number
    updated_at: number
    latitude: number
    longitude: number
    _all: number
  }


  export type DeliveriesAvgAggregateInputType = {
    id?: true
    order_id?: true
    latitude?: true
    longitude?: true
  }

  export type DeliveriesSumAggregateInputType = {
    id?: true
    order_id?: true
    latitude?: true
    longitude?: true
  }

  export type DeliveriesMinAggregateInputType = {
    id?: true
    order_id?: true
    delivery_person?: true
    status?: true
    start_time?: true
    end_time?: true
    notes?: true
    created_at?: true
    updated_at?: true
    latitude?: true
    longitude?: true
  }

  export type DeliveriesMaxAggregateInputType = {
    id?: true
    order_id?: true
    delivery_person?: true
    status?: true
    start_time?: true
    end_time?: true
    notes?: true
    created_at?: true
    updated_at?: true
    latitude?: true
    longitude?: true
  }

  export type DeliveriesCountAggregateInputType = {
    id?: true
    order_id?: true
    delivery_person?: true
    status?: true
    start_time?: true
    end_time?: true
    notes?: true
    created_at?: true
    updated_at?: true
    latitude?: true
    longitude?: true
    _all?: true
  }

  export type DeliveriesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which deliveries to aggregate.
     */
    where?: deliveriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of deliveries to fetch.
     */
    orderBy?: deliveriesOrderByWithRelationInput | deliveriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: deliveriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` deliveries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` deliveries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned deliveries
    **/
    _count?: true | DeliveriesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DeliveriesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DeliveriesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DeliveriesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DeliveriesMaxAggregateInputType
  }

  export type GetDeliveriesAggregateType<T extends DeliveriesAggregateArgs> = {
        [P in keyof T & keyof AggregateDeliveries]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDeliveries[P]>
      : GetScalarType<T[P], AggregateDeliveries[P]>
  }




  export type deliveriesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: deliveriesWhereInput
    orderBy?: deliveriesOrderByWithAggregationInput | deliveriesOrderByWithAggregationInput[]
    by: DeliveriesScalarFieldEnum[] | DeliveriesScalarFieldEnum
    having?: deliveriesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DeliveriesCountAggregateInputType | true
    _avg?: DeliveriesAvgAggregateInputType
    _sum?: DeliveriesSumAggregateInputType
    _min?: DeliveriesMinAggregateInputType
    _max?: DeliveriesMaxAggregateInputType
  }

  export type DeliveriesGroupByOutputType = {
    id: bigint
    order_id: bigint
    delivery_person: string
    status: $Enums.DeliveryStatus
    start_time: Date
    end_time: Date | null
    notes: string
    created_at: Date
    updated_at: Date | null
    latitude: number
    longitude: number
    _count: DeliveriesCountAggregateOutputType | null
    _avg: DeliveriesAvgAggregateOutputType | null
    _sum: DeliveriesSumAggregateOutputType | null
    _min: DeliveriesMinAggregateOutputType | null
    _max: DeliveriesMaxAggregateOutputType | null
  }

  type GetDeliveriesGroupByPayload<T extends deliveriesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DeliveriesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DeliveriesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DeliveriesGroupByOutputType[P]>
            : GetScalarType<T[P], DeliveriesGroupByOutputType[P]>
        }
      >
    >


  export type deliveriesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    order_id?: boolean
    delivery_person?: boolean
    status?: boolean
    start_time?: boolean
    end_time?: boolean
    notes?: boolean
    created_at?: boolean
    updated_at?: boolean
    latitude?: boolean
    longitude?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
    delivery_timeline?: boolean | deliveries$delivery_timelineArgs<ExtArgs>
    _count?: boolean | DeliveriesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["deliveries"]>

  export type deliveriesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    order_id?: boolean
    delivery_person?: boolean
    status?: boolean
    start_time?: boolean
    end_time?: boolean
    notes?: boolean
    created_at?: boolean
    updated_at?: boolean
    latitude?: boolean
    longitude?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["deliveries"]>

  export type deliveriesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    order_id?: boolean
    delivery_person?: boolean
    status?: boolean
    start_time?: boolean
    end_time?: boolean
    notes?: boolean
    created_at?: boolean
    updated_at?: boolean
    latitude?: boolean
    longitude?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["deliveries"]>

  export type deliveriesSelectScalar = {
    id?: boolean
    order_id?: boolean
    delivery_person?: boolean
    status?: boolean
    start_time?: boolean
    end_time?: boolean
    notes?: boolean
    created_at?: boolean
    updated_at?: boolean
    latitude?: boolean
    longitude?: boolean
  }

  export type deliveriesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "order_id" | "delivery_person" | "status" | "start_time" | "end_time" | "notes" | "created_at" | "updated_at" | "latitude" | "longitude", ExtArgs["result"]["deliveries"]>
  export type deliveriesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
    delivery_timeline?: boolean | deliveries$delivery_timelineArgs<ExtArgs>
    _count?: boolean | DeliveriesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type deliveriesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type deliveriesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $deliveriesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "deliveries"
    objects: {
      users: Prisma.$usersPayload<ExtArgs>
      delivery_timeline: Prisma.$delivery_timelinePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      order_id: bigint
      delivery_person: string
      status: $Enums.DeliveryStatus
      start_time: Date
      end_time: Date | null
      notes: string
      created_at: Date
      updated_at: Date | null
      latitude: number
      longitude: number
    }, ExtArgs["result"]["deliveries"]>
    composites: {}
  }

  type deliveriesGetPayload<S extends boolean | null | undefined | deliveriesDefaultArgs> = $Result.GetResult<Prisma.$deliveriesPayload, S>

  type deliveriesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<deliveriesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DeliveriesCountAggregateInputType | true
    }

  export interface deliveriesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['deliveries'], meta: { name: 'deliveries' } }
    /**
     * Find zero or one Deliveries that matches the filter.
     * @param {deliveriesFindUniqueArgs} args - Arguments to find a Deliveries
     * @example
     * // Get one Deliveries
     * const deliveries = await prisma.deliveries.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends deliveriesFindUniqueArgs>(args: SelectSubset<T, deliveriesFindUniqueArgs<ExtArgs>>): Prisma__deliveriesClient<$Result.GetResult<Prisma.$deliveriesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Deliveries that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {deliveriesFindUniqueOrThrowArgs} args - Arguments to find a Deliveries
     * @example
     * // Get one Deliveries
     * const deliveries = await prisma.deliveries.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends deliveriesFindUniqueOrThrowArgs>(args: SelectSubset<T, deliveriesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__deliveriesClient<$Result.GetResult<Prisma.$deliveriesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Deliveries that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {deliveriesFindFirstArgs} args - Arguments to find a Deliveries
     * @example
     * // Get one Deliveries
     * const deliveries = await prisma.deliveries.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends deliveriesFindFirstArgs>(args?: SelectSubset<T, deliveriesFindFirstArgs<ExtArgs>>): Prisma__deliveriesClient<$Result.GetResult<Prisma.$deliveriesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Deliveries that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {deliveriesFindFirstOrThrowArgs} args - Arguments to find a Deliveries
     * @example
     * // Get one Deliveries
     * const deliveries = await prisma.deliveries.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends deliveriesFindFirstOrThrowArgs>(args?: SelectSubset<T, deliveriesFindFirstOrThrowArgs<ExtArgs>>): Prisma__deliveriesClient<$Result.GetResult<Prisma.$deliveriesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Deliveries that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {deliveriesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Deliveries
     * const deliveries = await prisma.deliveries.findMany()
     * 
     * // Get first 10 Deliveries
     * const deliveries = await prisma.deliveries.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const deliveriesWithIdOnly = await prisma.deliveries.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends deliveriesFindManyArgs>(args?: SelectSubset<T, deliveriesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$deliveriesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Deliveries.
     * @param {deliveriesCreateArgs} args - Arguments to create a Deliveries.
     * @example
     * // Create one Deliveries
     * const Deliveries = await prisma.deliveries.create({
     *   data: {
     *     // ... data to create a Deliveries
     *   }
     * })
     * 
     */
    create<T extends deliveriesCreateArgs>(args: SelectSubset<T, deliveriesCreateArgs<ExtArgs>>): Prisma__deliveriesClient<$Result.GetResult<Prisma.$deliveriesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Deliveries.
     * @param {deliveriesCreateManyArgs} args - Arguments to create many Deliveries.
     * @example
     * // Create many Deliveries
     * const deliveries = await prisma.deliveries.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends deliveriesCreateManyArgs>(args?: SelectSubset<T, deliveriesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Deliveries and returns the data saved in the database.
     * @param {deliveriesCreateManyAndReturnArgs} args - Arguments to create many Deliveries.
     * @example
     * // Create many Deliveries
     * const deliveries = await prisma.deliveries.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Deliveries and only return the `id`
     * const deliveriesWithIdOnly = await prisma.deliveries.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends deliveriesCreateManyAndReturnArgs>(args?: SelectSubset<T, deliveriesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$deliveriesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Deliveries.
     * @param {deliveriesDeleteArgs} args - Arguments to delete one Deliveries.
     * @example
     * // Delete one Deliveries
     * const Deliveries = await prisma.deliveries.delete({
     *   where: {
     *     // ... filter to delete one Deliveries
     *   }
     * })
     * 
     */
    delete<T extends deliveriesDeleteArgs>(args: SelectSubset<T, deliveriesDeleteArgs<ExtArgs>>): Prisma__deliveriesClient<$Result.GetResult<Prisma.$deliveriesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Deliveries.
     * @param {deliveriesUpdateArgs} args - Arguments to update one Deliveries.
     * @example
     * // Update one Deliveries
     * const deliveries = await prisma.deliveries.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends deliveriesUpdateArgs>(args: SelectSubset<T, deliveriesUpdateArgs<ExtArgs>>): Prisma__deliveriesClient<$Result.GetResult<Prisma.$deliveriesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Deliveries.
     * @param {deliveriesDeleteManyArgs} args - Arguments to filter Deliveries to delete.
     * @example
     * // Delete a few Deliveries
     * const { count } = await prisma.deliveries.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends deliveriesDeleteManyArgs>(args?: SelectSubset<T, deliveriesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Deliveries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {deliveriesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Deliveries
     * const deliveries = await prisma.deliveries.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends deliveriesUpdateManyArgs>(args: SelectSubset<T, deliveriesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Deliveries and returns the data updated in the database.
     * @param {deliveriesUpdateManyAndReturnArgs} args - Arguments to update many Deliveries.
     * @example
     * // Update many Deliveries
     * const deliveries = await prisma.deliveries.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Deliveries and only return the `id`
     * const deliveriesWithIdOnly = await prisma.deliveries.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends deliveriesUpdateManyAndReturnArgs>(args: SelectSubset<T, deliveriesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$deliveriesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Deliveries.
     * @param {deliveriesUpsertArgs} args - Arguments to update or create a Deliveries.
     * @example
     * // Update or create a Deliveries
     * const deliveries = await prisma.deliveries.upsert({
     *   create: {
     *     // ... data to create a Deliveries
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Deliveries we want to update
     *   }
     * })
     */
    upsert<T extends deliveriesUpsertArgs>(args: SelectSubset<T, deliveriesUpsertArgs<ExtArgs>>): Prisma__deliveriesClient<$Result.GetResult<Prisma.$deliveriesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Deliveries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {deliveriesCountArgs} args - Arguments to filter Deliveries to count.
     * @example
     * // Count the number of Deliveries
     * const count = await prisma.deliveries.count({
     *   where: {
     *     // ... the filter for the Deliveries we want to count
     *   }
     * })
    **/
    count<T extends deliveriesCountArgs>(
      args?: Subset<T, deliveriesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DeliveriesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Deliveries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DeliveriesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DeliveriesAggregateArgs>(args: Subset<T, DeliveriesAggregateArgs>): Prisma.PrismaPromise<GetDeliveriesAggregateType<T>>

    /**
     * Group by Deliveries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {deliveriesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends deliveriesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: deliveriesGroupByArgs['orderBy'] }
        : { orderBy?: deliveriesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, deliveriesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDeliveriesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the deliveries model
   */
  readonly fields: deliveriesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for deliveries.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__deliveriesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    delivery_timeline<T extends deliveries$delivery_timelineArgs<ExtArgs> = {}>(args?: Subset<T, deliveries$delivery_timelineArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$delivery_timelinePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the deliveries model
   */
  interface deliveriesFieldRefs {
    readonly id: FieldRef<"deliveries", 'BigInt'>
    readonly order_id: FieldRef<"deliveries", 'BigInt'>
    readonly delivery_person: FieldRef<"deliveries", 'String'>
    readonly status: FieldRef<"deliveries", 'DeliveryStatus'>
    readonly start_time: FieldRef<"deliveries", 'DateTime'>
    readonly end_time: FieldRef<"deliveries", 'DateTime'>
    readonly notes: FieldRef<"deliveries", 'String'>
    readonly created_at: FieldRef<"deliveries", 'DateTime'>
    readonly updated_at: FieldRef<"deliveries", 'DateTime'>
    readonly latitude: FieldRef<"deliveries", 'Float'>
    readonly longitude: FieldRef<"deliveries", 'Float'>
  }
    

  // Custom InputTypes
  /**
   * deliveries findUnique
   */
  export type deliveriesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the deliveries
     */
    select?: deliveriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the deliveries
     */
    omit?: deliveriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: deliveriesInclude<ExtArgs> | null
    /**
     * Filter, which deliveries to fetch.
     */
    where: deliveriesWhereUniqueInput
  }

  /**
   * deliveries findUniqueOrThrow
   */
  export type deliveriesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the deliveries
     */
    select?: deliveriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the deliveries
     */
    omit?: deliveriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: deliveriesInclude<ExtArgs> | null
    /**
     * Filter, which deliveries to fetch.
     */
    where: deliveriesWhereUniqueInput
  }

  /**
   * deliveries findFirst
   */
  export type deliveriesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the deliveries
     */
    select?: deliveriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the deliveries
     */
    omit?: deliveriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: deliveriesInclude<ExtArgs> | null
    /**
     * Filter, which deliveries to fetch.
     */
    where?: deliveriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of deliveries to fetch.
     */
    orderBy?: deliveriesOrderByWithRelationInput | deliveriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for deliveries.
     */
    cursor?: deliveriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` deliveries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` deliveries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of deliveries.
     */
    distinct?: DeliveriesScalarFieldEnum | DeliveriesScalarFieldEnum[]
  }

  /**
   * deliveries findFirstOrThrow
   */
  export type deliveriesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the deliveries
     */
    select?: deliveriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the deliveries
     */
    omit?: deliveriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: deliveriesInclude<ExtArgs> | null
    /**
     * Filter, which deliveries to fetch.
     */
    where?: deliveriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of deliveries to fetch.
     */
    orderBy?: deliveriesOrderByWithRelationInput | deliveriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for deliveries.
     */
    cursor?: deliveriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` deliveries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` deliveries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of deliveries.
     */
    distinct?: DeliveriesScalarFieldEnum | DeliveriesScalarFieldEnum[]
  }

  /**
   * deliveries findMany
   */
  export type deliveriesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the deliveries
     */
    select?: deliveriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the deliveries
     */
    omit?: deliveriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: deliveriesInclude<ExtArgs> | null
    /**
     * Filter, which deliveries to fetch.
     */
    where?: deliveriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of deliveries to fetch.
     */
    orderBy?: deliveriesOrderByWithRelationInput | deliveriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing deliveries.
     */
    cursor?: deliveriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` deliveries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` deliveries.
     */
    skip?: number
    distinct?: DeliveriesScalarFieldEnum | DeliveriesScalarFieldEnum[]
  }

  /**
   * deliveries create
   */
  export type deliveriesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the deliveries
     */
    select?: deliveriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the deliveries
     */
    omit?: deliveriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: deliveriesInclude<ExtArgs> | null
    /**
     * The data needed to create a deliveries.
     */
    data: XOR<deliveriesCreateInput, deliveriesUncheckedCreateInput>
  }

  /**
   * deliveries createMany
   */
  export type deliveriesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many deliveries.
     */
    data: deliveriesCreateManyInput | deliveriesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * deliveries createManyAndReturn
   */
  export type deliveriesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the deliveries
     */
    select?: deliveriesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the deliveries
     */
    omit?: deliveriesOmit<ExtArgs> | null
    /**
     * The data used to create many deliveries.
     */
    data: deliveriesCreateManyInput | deliveriesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: deliveriesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * deliveries update
   */
  export type deliveriesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the deliveries
     */
    select?: deliveriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the deliveries
     */
    omit?: deliveriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: deliveriesInclude<ExtArgs> | null
    /**
     * The data needed to update a deliveries.
     */
    data: XOR<deliveriesUpdateInput, deliveriesUncheckedUpdateInput>
    /**
     * Choose, which deliveries to update.
     */
    where: deliveriesWhereUniqueInput
  }

  /**
   * deliveries updateMany
   */
  export type deliveriesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update deliveries.
     */
    data: XOR<deliveriesUpdateManyMutationInput, deliveriesUncheckedUpdateManyInput>
    /**
     * Filter which deliveries to update
     */
    where?: deliveriesWhereInput
    /**
     * Limit how many deliveries to update.
     */
    limit?: number
  }

  /**
   * deliveries updateManyAndReturn
   */
  export type deliveriesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the deliveries
     */
    select?: deliveriesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the deliveries
     */
    omit?: deliveriesOmit<ExtArgs> | null
    /**
     * The data used to update deliveries.
     */
    data: XOR<deliveriesUpdateManyMutationInput, deliveriesUncheckedUpdateManyInput>
    /**
     * Filter which deliveries to update
     */
    where?: deliveriesWhereInput
    /**
     * Limit how many deliveries to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: deliveriesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * deliveries upsert
   */
  export type deliveriesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the deliveries
     */
    select?: deliveriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the deliveries
     */
    omit?: deliveriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: deliveriesInclude<ExtArgs> | null
    /**
     * The filter to search for the deliveries to update in case it exists.
     */
    where: deliveriesWhereUniqueInput
    /**
     * In case the deliveries found by the `where` argument doesn't exist, create a new deliveries with this data.
     */
    create: XOR<deliveriesCreateInput, deliveriesUncheckedCreateInput>
    /**
     * In case the deliveries was found with the provided `where` argument, update it with this data.
     */
    update: XOR<deliveriesUpdateInput, deliveriesUncheckedUpdateInput>
  }

  /**
   * deliveries delete
   */
  export type deliveriesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the deliveries
     */
    select?: deliveriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the deliveries
     */
    omit?: deliveriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: deliveriesInclude<ExtArgs> | null
    /**
     * Filter which deliveries to delete.
     */
    where: deliveriesWhereUniqueInput
  }

  /**
   * deliveries deleteMany
   */
  export type deliveriesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which deliveries to delete
     */
    where?: deliveriesWhereInput
    /**
     * Limit how many deliveries to delete.
     */
    limit?: number
  }

  /**
   * deliveries.delivery_timeline
   */
  export type deliveries$delivery_timelineArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the delivery_timeline
     */
    select?: delivery_timelineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the delivery_timeline
     */
    omit?: delivery_timelineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: delivery_timelineInclude<ExtArgs> | null
    where?: delivery_timelineWhereInput
    orderBy?: delivery_timelineOrderByWithRelationInput | delivery_timelineOrderByWithRelationInput[]
    cursor?: delivery_timelineWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Delivery_timelineScalarFieldEnum | Delivery_timelineScalarFieldEnum[]
  }

  /**
   * deliveries without action
   */
  export type deliveriesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the deliveries
     */
    select?: deliveriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the deliveries
     */
    omit?: deliveriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: deliveriesInclude<ExtArgs> | null
  }


  /**
   * Model delivery_timeline
   */

  export type AggregateDelivery_timeline = {
    _count: Delivery_timelineCountAggregateOutputType | null
    _avg: Delivery_timelineAvgAggregateOutputType | null
    _sum: Delivery_timelineSumAggregateOutputType | null
    _min: Delivery_timelineMinAggregateOutputType | null
    _max: Delivery_timelineMaxAggregateOutputType | null
  }

  export type Delivery_timelineAvgAggregateOutputType = {
    id: number | null
    delivery_id: number | null
    latitude: number | null
    longitude: number | null
  }

  export type Delivery_timelineSumAggregateOutputType = {
    id: bigint | null
    delivery_id: bigint | null
    latitude: number | null
    longitude: number | null
  }

  export type Delivery_timelineMinAggregateOutputType = {
    id: bigint | null
    delivery_id: bigint | null
    status: $Enums.DeliveryStatus | null
    notes: string | null
    created_at: Date | null
    latitude: number | null
    longitude: number | null
  }

  export type Delivery_timelineMaxAggregateOutputType = {
    id: bigint | null
    delivery_id: bigint | null
    status: $Enums.DeliveryStatus | null
    notes: string | null
    created_at: Date | null
    latitude: number | null
    longitude: number | null
  }

  export type Delivery_timelineCountAggregateOutputType = {
    id: number
    delivery_id: number
    status: number
    notes: number
    created_at: number
    latitude: number
    longitude: number
    _all: number
  }


  export type Delivery_timelineAvgAggregateInputType = {
    id?: true
    delivery_id?: true
    latitude?: true
    longitude?: true
  }

  export type Delivery_timelineSumAggregateInputType = {
    id?: true
    delivery_id?: true
    latitude?: true
    longitude?: true
  }

  export type Delivery_timelineMinAggregateInputType = {
    id?: true
    delivery_id?: true
    status?: true
    notes?: true
    created_at?: true
    latitude?: true
    longitude?: true
  }

  export type Delivery_timelineMaxAggregateInputType = {
    id?: true
    delivery_id?: true
    status?: true
    notes?: true
    created_at?: true
    latitude?: true
    longitude?: true
  }

  export type Delivery_timelineCountAggregateInputType = {
    id?: true
    delivery_id?: true
    status?: true
    notes?: true
    created_at?: true
    latitude?: true
    longitude?: true
    _all?: true
  }

  export type Delivery_timelineAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which delivery_timeline to aggregate.
     */
    where?: delivery_timelineWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of delivery_timelines to fetch.
     */
    orderBy?: delivery_timelineOrderByWithRelationInput | delivery_timelineOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: delivery_timelineWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` delivery_timelines from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` delivery_timelines.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned delivery_timelines
    **/
    _count?: true | Delivery_timelineCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Delivery_timelineAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Delivery_timelineSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Delivery_timelineMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Delivery_timelineMaxAggregateInputType
  }

  export type GetDelivery_timelineAggregateType<T extends Delivery_timelineAggregateArgs> = {
        [P in keyof T & keyof AggregateDelivery_timeline]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDelivery_timeline[P]>
      : GetScalarType<T[P], AggregateDelivery_timeline[P]>
  }




  export type delivery_timelineGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: delivery_timelineWhereInput
    orderBy?: delivery_timelineOrderByWithAggregationInput | delivery_timelineOrderByWithAggregationInput[]
    by: Delivery_timelineScalarFieldEnum[] | Delivery_timelineScalarFieldEnum
    having?: delivery_timelineScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Delivery_timelineCountAggregateInputType | true
    _avg?: Delivery_timelineAvgAggregateInputType
    _sum?: Delivery_timelineSumAggregateInputType
    _min?: Delivery_timelineMinAggregateInputType
    _max?: Delivery_timelineMaxAggregateInputType
  }

  export type Delivery_timelineGroupByOutputType = {
    id: bigint
    delivery_id: bigint | null
    status: $Enums.DeliveryStatus
    notes: string | null
    created_at: Date
    latitude: number
    longitude: number
    _count: Delivery_timelineCountAggregateOutputType | null
    _avg: Delivery_timelineAvgAggregateOutputType | null
    _sum: Delivery_timelineSumAggregateOutputType | null
    _min: Delivery_timelineMinAggregateOutputType | null
    _max: Delivery_timelineMaxAggregateOutputType | null
  }

  type GetDelivery_timelineGroupByPayload<T extends delivery_timelineGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Delivery_timelineGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Delivery_timelineGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Delivery_timelineGroupByOutputType[P]>
            : GetScalarType<T[P], Delivery_timelineGroupByOutputType[P]>
        }
      >
    >


  export type delivery_timelineSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    delivery_id?: boolean
    status?: boolean
    notes?: boolean
    created_at?: boolean
    latitude?: boolean
    longitude?: boolean
    deliveries?: boolean | delivery_timeline$deliveriesArgs<ExtArgs>
  }, ExtArgs["result"]["delivery_timeline"]>

  export type delivery_timelineSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    delivery_id?: boolean
    status?: boolean
    notes?: boolean
    created_at?: boolean
    latitude?: boolean
    longitude?: boolean
    deliveries?: boolean | delivery_timeline$deliveriesArgs<ExtArgs>
  }, ExtArgs["result"]["delivery_timeline"]>

  export type delivery_timelineSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    delivery_id?: boolean
    status?: boolean
    notes?: boolean
    created_at?: boolean
    latitude?: boolean
    longitude?: boolean
    deliveries?: boolean | delivery_timeline$deliveriesArgs<ExtArgs>
  }, ExtArgs["result"]["delivery_timeline"]>

  export type delivery_timelineSelectScalar = {
    id?: boolean
    delivery_id?: boolean
    status?: boolean
    notes?: boolean
    created_at?: boolean
    latitude?: boolean
    longitude?: boolean
  }

  export type delivery_timelineOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "delivery_id" | "status" | "notes" | "created_at" | "latitude" | "longitude", ExtArgs["result"]["delivery_timeline"]>
  export type delivery_timelineInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    deliveries?: boolean | delivery_timeline$deliveriesArgs<ExtArgs>
  }
  export type delivery_timelineIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    deliveries?: boolean | delivery_timeline$deliveriesArgs<ExtArgs>
  }
  export type delivery_timelineIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    deliveries?: boolean | delivery_timeline$deliveriesArgs<ExtArgs>
  }

  export type $delivery_timelinePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "delivery_timeline"
    objects: {
      deliveries: Prisma.$deliveriesPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      delivery_id: bigint | null
      status: $Enums.DeliveryStatus
      notes: string | null
      created_at: Date
      latitude: number
      longitude: number
    }, ExtArgs["result"]["delivery_timeline"]>
    composites: {}
  }

  type delivery_timelineGetPayload<S extends boolean | null | undefined | delivery_timelineDefaultArgs> = $Result.GetResult<Prisma.$delivery_timelinePayload, S>

  type delivery_timelineCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<delivery_timelineFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Delivery_timelineCountAggregateInputType | true
    }

  export interface delivery_timelineDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['delivery_timeline'], meta: { name: 'delivery_timeline' } }
    /**
     * Find zero or one Delivery_timeline that matches the filter.
     * @param {delivery_timelineFindUniqueArgs} args - Arguments to find a Delivery_timeline
     * @example
     * // Get one Delivery_timeline
     * const delivery_timeline = await prisma.delivery_timeline.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends delivery_timelineFindUniqueArgs>(args: SelectSubset<T, delivery_timelineFindUniqueArgs<ExtArgs>>): Prisma__delivery_timelineClient<$Result.GetResult<Prisma.$delivery_timelinePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Delivery_timeline that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {delivery_timelineFindUniqueOrThrowArgs} args - Arguments to find a Delivery_timeline
     * @example
     * // Get one Delivery_timeline
     * const delivery_timeline = await prisma.delivery_timeline.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends delivery_timelineFindUniqueOrThrowArgs>(args: SelectSubset<T, delivery_timelineFindUniqueOrThrowArgs<ExtArgs>>): Prisma__delivery_timelineClient<$Result.GetResult<Prisma.$delivery_timelinePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Delivery_timeline that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {delivery_timelineFindFirstArgs} args - Arguments to find a Delivery_timeline
     * @example
     * // Get one Delivery_timeline
     * const delivery_timeline = await prisma.delivery_timeline.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends delivery_timelineFindFirstArgs>(args?: SelectSubset<T, delivery_timelineFindFirstArgs<ExtArgs>>): Prisma__delivery_timelineClient<$Result.GetResult<Prisma.$delivery_timelinePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Delivery_timeline that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {delivery_timelineFindFirstOrThrowArgs} args - Arguments to find a Delivery_timeline
     * @example
     * // Get one Delivery_timeline
     * const delivery_timeline = await prisma.delivery_timeline.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends delivery_timelineFindFirstOrThrowArgs>(args?: SelectSubset<T, delivery_timelineFindFirstOrThrowArgs<ExtArgs>>): Prisma__delivery_timelineClient<$Result.GetResult<Prisma.$delivery_timelinePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Delivery_timelines that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {delivery_timelineFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Delivery_timelines
     * const delivery_timelines = await prisma.delivery_timeline.findMany()
     * 
     * // Get first 10 Delivery_timelines
     * const delivery_timelines = await prisma.delivery_timeline.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const delivery_timelineWithIdOnly = await prisma.delivery_timeline.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends delivery_timelineFindManyArgs>(args?: SelectSubset<T, delivery_timelineFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$delivery_timelinePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Delivery_timeline.
     * @param {delivery_timelineCreateArgs} args - Arguments to create a Delivery_timeline.
     * @example
     * // Create one Delivery_timeline
     * const Delivery_timeline = await prisma.delivery_timeline.create({
     *   data: {
     *     // ... data to create a Delivery_timeline
     *   }
     * })
     * 
     */
    create<T extends delivery_timelineCreateArgs>(args: SelectSubset<T, delivery_timelineCreateArgs<ExtArgs>>): Prisma__delivery_timelineClient<$Result.GetResult<Prisma.$delivery_timelinePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Delivery_timelines.
     * @param {delivery_timelineCreateManyArgs} args - Arguments to create many Delivery_timelines.
     * @example
     * // Create many Delivery_timelines
     * const delivery_timeline = await prisma.delivery_timeline.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends delivery_timelineCreateManyArgs>(args?: SelectSubset<T, delivery_timelineCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Delivery_timelines and returns the data saved in the database.
     * @param {delivery_timelineCreateManyAndReturnArgs} args - Arguments to create many Delivery_timelines.
     * @example
     * // Create many Delivery_timelines
     * const delivery_timeline = await prisma.delivery_timeline.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Delivery_timelines and only return the `id`
     * const delivery_timelineWithIdOnly = await prisma.delivery_timeline.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends delivery_timelineCreateManyAndReturnArgs>(args?: SelectSubset<T, delivery_timelineCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$delivery_timelinePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Delivery_timeline.
     * @param {delivery_timelineDeleteArgs} args - Arguments to delete one Delivery_timeline.
     * @example
     * // Delete one Delivery_timeline
     * const Delivery_timeline = await prisma.delivery_timeline.delete({
     *   where: {
     *     // ... filter to delete one Delivery_timeline
     *   }
     * })
     * 
     */
    delete<T extends delivery_timelineDeleteArgs>(args: SelectSubset<T, delivery_timelineDeleteArgs<ExtArgs>>): Prisma__delivery_timelineClient<$Result.GetResult<Prisma.$delivery_timelinePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Delivery_timeline.
     * @param {delivery_timelineUpdateArgs} args - Arguments to update one Delivery_timeline.
     * @example
     * // Update one Delivery_timeline
     * const delivery_timeline = await prisma.delivery_timeline.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends delivery_timelineUpdateArgs>(args: SelectSubset<T, delivery_timelineUpdateArgs<ExtArgs>>): Prisma__delivery_timelineClient<$Result.GetResult<Prisma.$delivery_timelinePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Delivery_timelines.
     * @param {delivery_timelineDeleteManyArgs} args - Arguments to filter Delivery_timelines to delete.
     * @example
     * // Delete a few Delivery_timelines
     * const { count } = await prisma.delivery_timeline.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends delivery_timelineDeleteManyArgs>(args?: SelectSubset<T, delivery_timelineDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Delivery_timelines.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {delivery_timelineUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Delivery_timelines
     * const delivery_timeline = await prisma.delivery_timeline.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends delivery_timelineUpdateManyArgs>(args: SelectSubset<T, delivery_timelineUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Delivery_timelines and returns the data updated in the database.
     * @param {delivery_timelineUpdateManyAndReturnArgs} args - Arguments to update many Delivery_timelines.
     * @example
     * // Update many Delivery_timelines
     * const delivery_timeline = await prisma.delivery_timeline.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Delivery_timelines and only return the `id`
     * const delivery_timelineWithIdOnly = await prisma.delivery_timeline.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends delivery_timelineUpdateManyAndReturnArgs>(args: SelectSubset<T, delivery_timelineUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$delivery_timelinePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Delivery_timeline.
     * @param {delivery_timelineUpsertArgs} args - Arguments to update or create a Delivery_timeline.
     * @example
     * // Update or create a Delivery_timeline
     * const delivery_timeline = await prisma.delivery_timeline.upsert({
     *   create: {
     *     // ... data to create a Delivery_timeline
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Delivery_timeline we want to update
     *   }
     * })
     */
    upsert<T extends delivery_timelineUpsertArgs>(args: SelectSubset<T, delivery_timelineUpsertArgs<ExtArgs>>): Prisma__delivery_timelineClient<$Result.GetResult<Prisma.$delivery_timelinePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Delivery_timelines.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {delivery_timelineCountArgs} args - Arguments to filter Delivery_timelines to count.
     * @example
     * // Count the number of Delivery_timelines
     * const count = await prisma.delivery_timeline.count({
     *   where: {
     *     // ... the filter for the Delivery_timelines we want to count
     *   }
     * })
    **/
    count<T extends delivery_timelineCountArgs>(
      args?: Subset<T, delivery_timelineCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Delivery_timelineCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Delivery_timeline.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Delivery_timelineAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Delivery_timelineAggregateArgs>(args: Subset<T, Delivery_timelineAggregateArgs>): Prisma.PrismaPromise<GetDelivery_timelineAggregateType<T>>

    /**
     * Group by Delivery_timeline.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {delivery_timelineGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends delivery_timelineGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: delivery_timelineGroupByArgs['orderBy'] }
        : { orderBy?: delivery_timelineGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, delivery_timelineGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDelivery_timelineGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the delivery_timeline model
   */
  readonly fields: delivery_timelineFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for delivery_timeline.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__delivery_timelineClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    deliveries<T extends delivery_timeline$deliveriesArgs<ExtArgs> = {}>(args?: Subset<T, delivery_timeline$deliveriesArgs<ExtArgs>>): Prisma__deliveriesClient<$Result.GetResult<Prisma.$deliveriesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the delivery_timeline model
   */
  interface delivery_timelineFieldRefs {
    readonly id: FieldRef<"delivery_timeline", 'BigInt'>
    readonly delivery_id: FieldRef<"delivery_timeline", 'BigInt'>
    readonly status: FieldRef<"delivery_timeline", 'DeliveryStatus'>
    readonly notes: FieldRef<"delivery_timeline", 'String'>
    readonly created_at: FieldRef<"delivery_timeline", 'DateTime'>
    readonly latitude: FieldRef<"delivery_timeline", 'Float'>
    readonly longitude: FieldRef<"delivery_timeline", 'Float'>
  }
    

  // Custom InputTypes
  /**
   * delivery_timeline findUnique
   */
  export type delivery_timelineFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the delivery_timeline
     */
    select?: delivery_timelineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the delivery_timeline
     */
    omit?: delivery_timelineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: delivery_timelineInclude<ExtArgs> | null
    /**
     * Filter, which delivery_timeline to fetch.
     */
    where: delivery_timelineWhereUniqueInput
  }

  /**
   * delivery_timeline findUniqueOrThrow
   */
  export type delivery_timelineFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the delivery_timeline
     */
    select?: delivery_timelineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the delivery_timeline
     */
    omit?: delivery_timelineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: delivery_timelineInclude<ExtArgs> | null
    /**
     * Filter, which delivery_timeline to fetch.
     */
    where: delivery_timelineWhereUniqueInput
  }

  /**
   * delivery_timeline findFirst
   */
  export type delivery_timelineFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the delivery_timeline
     */
    select?: delivery_timelineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the delivery_timeline
     */
    omit?: delivery_timelineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: delivery_timelineInclude<ExtArgs> | null
    /**
     * Filter, which delivery_timeline to fetch.
     */
    where?: delivery_timelineWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of delivery_timelines to fetch.
     */
    orderBy?: delivery_timelineOrderByWithRelationInput | delivery_timelineOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for delivery_timelines.
     */
    cursor?: delivery_timelineWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` delivery_timelines from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` delivery_timelines.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of delivery_timelines.
     */
    distinct?: Delivery_timelineScalarFieldEnum | Delivery_timelineScalarFieldEnum[]
  }

  /**
   * delivery_timeline findFirstOrThrow
   */
  export type delivery_timelineFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the delivery_timeline
     */
    select?: delivery_timelineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the delivery_timeline
     */
    omit?: delivery_timelineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: delivery_timelineInclude<ExtArgs> | null
    /**
     * Filter, which delivery_timeline to fetch.
     */
    where?: delivery_timelineWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of delivery_timelines to fetch.
     */
    orderBy?: delivery_timelineOrderByWithRelationInput | delivery_timelineOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for delivery_timelines.
     */
    cursor?: delivery_timelineWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` delivery_timelines from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` delivery_timelines.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of delivery_timelines.
     */
    distinct?: Delivery_timelineScalarFieldEnum | Delivery_timelineScalarFieldEnum[]
  }

  /**
   * delivery_timeline findMany
   */
  export type delivery_timelineFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the delivery_timeline
     */
    select?: delivery_timelineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the delivery_timeline
     */
    omit?: delivery_timelineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: delivery_timelineInclude<ExtArgs> | null
    /**
     * Filter, which delivery_timelines to fetch.
     */
    where?: delivery_timelineWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of delivery_timelines to fetch.
     */
    orderBy?: delivery_timelineOrderByWithRelationInput | delivery_timelineOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing delivery_timelines.
     */
    cursor?: delivery_timelineWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` delivery_timelines from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` delivery_timelines.
     */
    skip?: number
    distinct?: Delivery_timelineScalarFieldEnum | Delivery_timelineScalarFieldEnum[]
  }

  /**
   * delivery_timeline create
   */
  export type delivery_timelineCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the delivery_timeline
     */
    select?: delivery_timelineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the delivery_timeline
     */
    omit?: delivery_timelineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: delivery_timelineInclude<ExtArgs> | null
    /**
     * The data needed to create a delivery_timeline.
     */
    data: XOR<delivery_timelineCreateInput, delivery_timelineUncheckedCreateInput>
  }

  /**
   * delivery_timeline createMany
   */
  export type delivery_timelineCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many delivery_timelines.
     */
    data: delivery_timelineCreateManyInput | delivery_timelineCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * delivery_timeline createManyAndReturn
   */
  export type delivery_timelineCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the delivery_timeline
     */
    select?: delivery_timelineSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the delivery_timeline
     */
    omit?: delivery_timelineOmit<ExtArgs> | null
    /**
     * The data used to create many delivery_timelines.
     */
    data: delivery_timelineCreateManyInput | delivery_timelineCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: delivery_timelineIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * delivery_timeline update
   */
  export type delivery_timelineUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the delivery_timeline
     */
    select?: delivery_timelineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the delivery_timeline
     */
    omit?: delivery_timelineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: delivery_timelineInclude<ExtArgs> | null
    /**
     * The data needed to update a delivery_timeline.
     */
    data: XOR<delivery_timelineUpdateInput, delivery_timelineUncheckedUpdateInput>
    /**
     * Choose, which delivery_timeline to update.
     */
    where: delivery_timelineWhereUniqueInput
  }

  /**
   * delivery_timeline updateMany
   */
  export type delivery_timelineUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update delivery_timelines.
     */
    data: XOR<delivery_timelineUpdateManyMutationInput, delivery_timelineUncheckedUpdateManyInput>
    /**
     * Filter which delivery_timelines to update
     */
    where?: delivery_timelineWhereInput
    /**
     * Limit how many delivery_timelines to update.
     */
    limit?: number
  }

  /**
   * delivery_timeline updateManyAndReturn
   */
  export type delivery_timelineUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the delivery_timeline
     */
    select?: delivery_timelineSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the delivery_timeline
     */
    omit?: delivery_timelineOmit<ExtArgs> | null
    /**
     * The data used to update delivery_timelines.
     */
    data: XOR<delivery_timelineUpdateManyMutationInput, delivery_timelineUncheckedUpdateManyInput>
    /**
     * Filter which delivery_timelines to update
     */
    where?: delivery_timelineWhereInput
    /**
     * Limit how many delivery_timelines to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: delivery_timelineIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * delivery_timeline upsert
   */
  export type delivery_timelineUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the delivery_timeline
     */
    select?: delivery_timelineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the delivery_timeline
     */
    omit?: delivery_timelineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: delivery_timelineInclude<ExtArgs> | null
    /**
     * The filter to search for the delivery_timeline to update in case it exists.
     */
    where: delivery_timelineWhereUniqueInput
    /**
     * In case the delivery_timeline found by the `where` argument doesn't exist, create a new delivery_timeline with this data.
     */
    create: XOR<delivery_timelineCreateInput, delivery_timelineUncheckedCreateInput>
    /**
     * In case the delivery_timeline was found with the provided `where` argument, update it with this data.
     */
    update: XOR<delivery_timelineUpdateInput, delivery_timelineUncheckedUpdateInput>
  }

  /**
   * delivery_timeline delete
   */
  export type delivery_timelineDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the delivery_timeline
     */
    select?: delivery_timelineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the delivery_timeline
     */
    omit?: delivery_timelineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: delivery_timelineInclude<ExtArgs> | null
    /**
     * Filter which delivery_timeline to delete.
     */
    where: delivery_timelineWhereUniqueInput
  }

  /**
   * delivery_timeline deleteMany
   */
  export type delivery_timelineDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which delivery_timelines to delete
     */
    where?: delivery_timelineWhereInput
    /**
     * Limit how many delivery_timelines to delete.
     */
    limit?: number
  }

  /**
   * delivery_timeline.deliveries
   */
  export type delivery_timeline$deliveriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the deliveries
     */
    select?: deliveriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the deliveries
     */
    omit?: deliveriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: deliveriesInclude<ExtArgs> | null
    where?: deliveriesWhereInput
  }

  /**
   * delivery_timeline without action
   */
  export type delivery_timelineDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the delivery_timeline
     */
    select?: delivery_timelineSelect<ExtArgs> | null
    /**
     * Omit specific fields from the delivery_timeline
     */
    omit?: delivery_timelineOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: delivery_timelineInclude<ExtArgs> | null
  }


  /**
   * Model discounts
   */

  export type AggregateDiscounts = {
    _count: DiscountsCountAggregateOutputType | null
    _avg: DiscountsAvgAggregateOutputType | null
    _sum: DiscountsSumAggregateOutputType | null
    _min: DiscountsMinAggregateOutputType | null
    _max: DiscountsMaxAggregateOutputType | null
  }

  export type DiscountsAvgAggregateOutputType = {
    id: number | null
    status: number | null
  }

  export type DiscountsSumAggregateOutputType = {
    id: bigint | null
    status: number | null
  }

  export type DiscountsMinAggregateOutputType = {
    id: bigint | null
    user_id: string | null
    name: string | null
    applies_to_all: boolean | null
    start_date: Date | null
    end_date: Date | null
    status: number | null
    created_at: Date | null
  }

  export type DiscountsMaxAggregateOutputType = {
    id: bigint | null
    user_id: string | null
    name: string | null
    applies_to_all: boolean | null
    start_date: Date | null
    end_date: Date | null
    status: number | null
    created_at: Date | null
  }

  export type DiscountsCountAggregateOutputType = {
    id: number
    user_id: number
    name: number
    type_value: number
    applies_to_all: number
    start_date: number
    end_date: number
    status: number
    created_at: number
    _all: number
  }


  export type DiscountsAvgAggregateInputType = {
    id?: true
    status?: true
  }

  export type DiscountsSumAggregateInputType = {
    id?: true
    status?: true
  }

  export type DiscountsMinAggregateInputType = {
    id?: true
    user_id?: true
    name?: true
    applies_to_all?: true
    start_date?: true
    end_date?: true
    status?: true
    created_at?: true
  }

  export type DiscountsMaxAggregateInputType = {
    id?: true
    user_id?: true
    name?: true
    applies_to_all?: true
    start_date?: true
    end_date?: true
    status?: true
    created_at?: true
  }

  export type DiscountsCountAggregateInputType = {
    id?: true
    user_id?: true
    name?: true
    type_value?: true
    applies_to_all?: true
    start_date?: true
    end_date?: true
    status?: true
    created_at?: true
    _all?: true
  }

  export type DiscountsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which discounts to aggregate.
     */
    where?: discountsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of discounts to fetch.
     */
    orderBy?: discountsOrderByWithRelationInput | discountsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: discountsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` discounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` discounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned discounts
    **/
    _count?: true | DiscountsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DiscountsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DiscountsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DiscountsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DiscountsMaxAggregateInputType
  }

  export type GetDiscountsAggregateType<T extends DiscountsAggregateArgs> = {
        [P in keyof T & keyof AggregateDiscounts]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDiscounts[P]>
      : GetScalarType<T[P], AggregateDiscounts[P]>
  }




  export type discountsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: discountsWhereInput
    orderBy?: discountsOrderByWithAggregationInput | discountsOrderByWithAggregationInput[]
    by: DiscountsScalarFieldEnum[] | DiscountsScalarFieldEnum
    having?: discountsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DiscountsCountAggregateInputType | true
    _avg?: DiscountsAvgAggregateInputType
    _sum?: DiscountsSumAggregateInputType
    _min?: DiscountsMinAggregateInputType
    _max?: DiscountsMaxAggregateInputType
  }

  export type DiscountsGroupByOutputType = {
    id: bigint
    user_id: string
    name: string
    type_value: JsonValue
    applies_to_all: boolean
    start_date: Date
    end_date: Date
    status: number
    created_at: Date
    _count: DiscountsCountAggregateOutputType | null
    _avg: DiscountsAvgAggregateOutputType | null
    _sum: DiscountsSumAggregateOutputType | null
    _min: DiscountsMinAggregateOutputType | null
    _max: DiscountsMaxAggregateOutputType | null
  }

  type GetDiscountsGroupByPayload<T extends discountsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DiscountsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DiscountsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DiscountsGroupByOutputType[P]>
            : GetScalarType<T[P], DiscountsGroupByOutputType[P]>
        }
      >
    >


  export type discountsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    name?: boolean
    type_value?: boolean
    applies_to_all?: boolean
    start_date?: boolean
    end_date?: boolean
    status?: boolean
    created_at?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["discounts"]>

  export type discountsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    name?: boolean
    type_value?: boolean
    applies_to_all?: boolean
    start_date?: boolean
    end_date?: boolean
    status?: boolean
    created_at?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["discounts"]>

  export type discountsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    name?: boolean
    type_value?: boolean
    applies_to_all?: boolean
    start_date?: boolean
    end_date?: boolean
    status?: boolean
    created_at?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["discounts"]>

  export type discountsSelectScalar = {
    id?: boolean
    user_id?: boolean
    name?: boolean
    type_value?: boolean
    applies_to_all?: boolean
    start_date?: boolean
    end_date?: boolean
    status?: boolean
    created_at?: boolean
  }

  export type discountsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "name" | "type_value" | "applies_to_all" | "start_date" | "end_date" | "status" | "created_at", ExtArgs["result"]["discounts"]>
  export type discountsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type discountsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type discountsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $discountsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "discounts"
    objects: {
      users: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      user_id: string
      name: string
      type_value: Prisma.JsonValue
      applies_to_all: boolean
      start_date: Date
      end_date: Date
      status: number
      created_at: Date
    }, ExtArgs["result"]["discounts"]>
    composites: {}
  }

  type discountsGetPayload<S extends boolean | null | undefined | discountsDefaultArgs> = $Result.GetResult<Prisma.$discountsPayload, S>

  type discountsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<discountsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DiscountsCountAggregateInputType | true
    }

  export interface discountsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['discounts'], meta: { name: 'discounts' } }
    /**
     * Find zero or one Discounts that matches the filter.
     * @param {discountsFindUniqueArgs} args - Arguments to find a Discounts
     * @example
     * // Get one Discounts
     * const discounts = await prisma.discounts.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends discountsFindUniqueArgs>(args: SelectSubset<T, discountsFindUniqueArgs<ExtArgs>>): Prisma__discountsClient<$Result.GetResult<Prisma.$discountsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Discounts that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {discountsFindUniqueOrThrowArgs} args - Arguments to find a Discounts
     * @example
     * // Get one Discounts
     * const discounts = await prisma.discounts.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends discountsFindUniqueOrThrowArgs>(args: SelectSubset<T, discountsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__discountsClient<$Result.GetResult<Prisma.$discountsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Discounts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {discountsFindFirstArgs} args - Arguments to find a Discounts
     * @example
     * // Get one Discounts
     * const discounts = await prisma.discounts.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends discountsFindFirstArgs>(args?: SelectSubset<T, discountsFindFirstArgs<ExtArgs>>): Prisma__discountsClient<$Result.GetResult<Prisma.$discountsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Discounts that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {discountsFindFirstOrThrowArgs} args - Arguments to find a Discounts
     * @example
     * // Get one Discounts
     * const discounts = await prisma.discounts.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends discountsFindFirstOrThrowArgs>(args?: SelectSubset<T, discountsFindFirstOrThrowArgs<ExtArgs>>): Prisma__discountsClient<$Result.GetResult<Prisma.$discountsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Discounts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {discountsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Discounts
     * const discounts = await prisma.discounts.findMany()
     * 
     * // Get first 10 Discounts
     * const discounts = await prisma.discounts.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const discountsWithIdOnly = await prisma.discounts.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends discountsFindManyArgs>(args?: SelectSubset<T, discountsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discountsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Discounts.
     * @param {discountsCreateArgs} args - Arguments to create a Discounts.
     * @example
     * // Create one Discounts
     * const Discounts = await prisma.discounts.create({
     *   data: {
     *     // ... data to create a Discounts
     *   }
     * })
     * 
     */
    create<T extends discountsCreateArgs>(args: SelectSubset<T, discountsCreateArgs<ExtArgs>>): Prisma__discountsClient<$Result.GetResult<Prisma.$discountsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Discounts.
     * @param {discountsCreateManyArgs} args - Arguments to create many Discounts.
     * @example
     * // Create many Discounts
     * const discounts = await prisma.discounts.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends discountsCreateManyArgs>(args?: SelectSubset<T, discountsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Discounts and returns the data saved in the database.
     * @param {discountsCreateManyAndReturnArgs} args - Arguments to create many Discounts.
     * @example
     * // Create many Discounts
     * const discounts = await prisma.discounts.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Discounts and only return the `id`
     * const discountsWithIdOnly = await prisma.discounts.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends discountsCreateManyAndReturnArgs>(args?: SelectSubset<T, discountsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discountsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Discounts.
     * @param {discountsDeleteArgs} args - Arguments to delete one Discounts.
     * @example
     * // Delete one Discounts
     * const Discounts = await prisma.discounts.delete({
     *   where: {
     *     // ... filter to delete one Discounts
     *   }
     * })
     * 
     */
    delete<T extends discountsDeleteArgs>(args: SelectSubset<T, discountsDeleteArgs<ExtArgs>>): Prisma__discountsClient<$Result.GetResult<Prisma.$discountsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Discounts.
     * @param {discountsUpdateArgs} args - Arguments to update one Discounts.
     * @example
     * // Update one Discounts
     * const discounts = await prisma.discounts.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends discountsUpdateArgs>(args: SelectSubset<T, discountsUpdateArgs<ExtArgs>>): Prisma__discountsClient<$Result.GetResult<Prisma.$discountsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Discounts.
     * @param {discountsDeleteManyArgs} args - Arguments to filter Discounts to delete.
     * @example
     * // Delete a few Discounts
     * const { count } = await prisma.discounts.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends discountsDeleteManyArgs>(args?: SelectSubset<T, discountsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Discounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {discountsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Discounts
     * const discounts = await prisma.discounts.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends discountsUpdateManyArgs>(args: SelectSubset<T, discountsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Discounts and returns the data updated in the database.
     * @param {discountsUpdateManyAndReturnArgs} args - Arguments to update many Discounts.
     * @example
     * // Update many Discounts
     * const discounts = await prisma.discounts.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Discounts and only return the `id`
     * const discountsWithIdOnly = await prisma.discounts.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends discountsUpdateManyAndReturnArgs>(args: SelectSubset<T, discountsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discountsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Discounts.
     * @param {discountsUpsertArgs} args - Arguments to update or create a Discounts.
     * @example
     * // Update or create a Discounts
     * const discounts = await prisma.discounts.upsert({
     *   create: {
     *     // ... data to create a Discounts
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Discounts we want to update
     *   }
     * })
     */
    upsert<T extends discountsUpsertArgs>(args: SelectSubset<T, discountsUpsertArgs<ExtArgs>>): Prisma__discountsClient<$Result.GetResult<Prisma.$discountsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Discounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {discountsCountArgs} args - Arguments to filter Discounts to count.
     * @example
     * // Count the number of Discounts
     * const count = await prisma.discounts.count({
     *   where: {
     *     // ... the filter for the Discounts we want to count
     *   }
     * })
    **/
    count<T extends discountsCountArgs>(
      args?: Subset<T, discountsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DiscountsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Discounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DiscountsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DiscountsAggregateArgs>(args: Subset<T, DiscountsAggregateArgs>): Prisma.PrismaPromise<GetDiscountsAggregateType<T>>

    /**
     * Group by Discounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {discountsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends discountsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: discountsGroupByArgs['orderBy'] }
        : { orderBy?: discountsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, discountsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDiscountsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the discounts model
   */
  readonly fields: discountsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for discounts.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__discountsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the discounts model
   */
  interface discountsFieldRefs {
    readonly id: FieldRef<"discounts", 'BigInt'>
    readonly user_id: FieldRef<"discounts", 'String'>
    readonly name: FieldRef<"discounts", 'String'>
    readonly type_value: FieldRef<"discounts", 'Json'>
    readonly applies_to_all: FieldRef<"discounts", 'Boolean'>
    readonly start_date: FieldRef<"discounts", 'DateTime'>
    readonly end_date: FieldRef<"discounts", 'DateTime'>
    readonly status: FieldRef<"discounts", 'Int'>
    readonly created_at: FieldRef<"discounts", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * discounts findUnique
   */
  export type discountsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the discounts
     */
    select?: discountsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the discounts
     */
    omit?: discountsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: discountsInclude<ExtArgs> | null
    /**
     * Filter, which discounts to fetch.
     */
    where: discountsWhereUniqueInput
  }

  /**
   * discounts findUniqueOrThrow
   */
  export type discountsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the discounts
     */
    select?: discountsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the discounts
     */
    omit?: discountsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: discountsInclude<ExtArgs> | null
    /**
     * Filter, which discounts to fetch.
     */
    where: discountsWhereUniqueInput
  }

  /**
   * discounts findFirst
   */
  export type discountsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the discounts
     */
    select?: discountsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the discounts
     */
    omit?: discountsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: discountsInclude<ExtArgs> | null
    /**
     * Filter, which discounts to fetch.
     */
    where?: discountsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of discounts to fetch.
     */
    orderBy?: discountsOrderByWithRelationInput | discountsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for discounts.
     */
    cursor?: discountsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` discounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` discounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of discounts.
     */
    distinct?: DiscountsScalarFieldEnum | DiscountsScalarFieldEnum[]
  }

  /**
   * discounts findFirstOrThrow
   */
  export type discountsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the discounts
     */
    select?: discountsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the discounts
     */
    omit?: discountsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: discountsInclude<ExtArgs> | null
    /**
     * Filter, which discounts to fetch.
     */
    where?: discountsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of discounts to fetch.
     */
    orderBy?: discountsOrderByWithRelationInput | discountsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for discounts.
     */
    cursor?: discountsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` discounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` discounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of discounts.
     */
    distinct?: DiscountsScalarFieldEnum | DiscountsScalarFieldEnum[]
  }

  /**
   * discounts findMany
   */
  export type discountsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the discounts
     */
    select?: discountsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the discounts
     */
    omit?: discountsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: discountsInclude<ExtArgs> | null
    /**
     * Filter, which discounts to fetch.
     */
    where?: discountsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of discounts to fetch.
     */
    orderBy?: discountsOrderByWithRelationInput | discountsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing discounts.
     */
    cursor?: discountsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` discounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` discounts.
     */
    skip?: number
    distinct?: DiscountsScalarFieldEnum | DiscountsScalarFieldEnum[]
  }

  /**
   * discounts create
   */
  export type discountsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the discounts
     */
    select?: discountsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the discounts
     */
    omit?: discountsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: discountsInclude<ExtArgs> | null
    /**
     * The data needed to create a discounts.
     */
    data: XOR<discountsCreateInput, discountsUncheckedCreateInput>
  }

  /**
   * discounts createMany
   */
  export type discountsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many discounts.
     */
    data: discountsCreateManyInput | discountsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * discounts createManyAndReturn
   */
  export type discountsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the discounts
     */
    select?: discountsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the discounts
     */
    omit?: discountsOmit<ExtArgs> | null
    /**
     * The data used to create many discounts.
     */
    data: discountsCreateManyInput | discountsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: discountsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * discounts update
   */
  export type discountsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the discounts
     */
    select?: discountsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the discounts
     */
    omit?: discountsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: discountsInclude<ExtArgs> | null
    /**
     * The data needed to update a discounts.
     */
    data: XOR<discountsUpdateInput, discountsUncheckedUpdateInput>
    /**
     * Choose, which discounts to update.
     */
    where: discountsWhereUniqueInput
  }

  /**
   * discounts updateMany
   */
  export type discountsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update discounts.
     */
    data: XOR<discountsUpdateManyMutationInput, discountsUncheckedUpdateManyInput>
    /**
     * Filter which discounts to update
     */
    where?: discountsWhereInput
    /**
     * Limit how many discounts to update.
     */
    limit?: number
  }

  /**
   * discounts updateManyAndReturn
   */
  export type discountsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the discounts
     */
    select?: discountsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the discounts
     */
    omit?: discountsOmit<ExtArgs> | null
    /**
     * The data used to update discounts.
     */
    data: XOR<discountsUpdateManyMutationInput, discountsUncheckedUpdateManyInput>
    /**
     * Filter which discounts to update
     */
    where?: discountsWhereInput
    /**
     * Limit how many discounts to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: discountsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * discounts upsert
   */
  export type discountsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the discounts
     */
    select?: discountsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the discounts
     */
    omit?: discountsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: discountsInclude<ExtArgs> | null
    /**
     * The filter to search for the discounts to update in case it exists.
     */
    where: discountsWhereUniqueInput
    /**
     * In case the discounts found by the `where` argument doesn't exist, create a new discounts with this data.
     */
    create: XOR<discountsCreateInput, discountsUncheckedCreateInput>
    /**
     * In case the discounts was found with the provided `where` argument, update it with this data.
     */
    update: XOR<discountsUpdateInput, discountsUncheckedUpdateInput>
  }

  /**
   * discounts delete
   */
  export type discountsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the discounts
     */
    select?: discountsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the discounts
     */
    omit?: discountsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: discountsInclude<ExtArgs> | null
    /**
     * Filter which discounts to delete.
     */
    where: discountsWhereUniqueInput
  }

  /**
   * discounts deleteMany
   */
  export type discountsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which discounts to delete
     */
    where?: discountsWhereInput
    /**
     * Limit how many discounts to delete.
     */
    limit?: number
  }

  /**
   * discounts without action
   */
  export type discountsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the discounts
     */
    select?: discountsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the discounts
     */
    omit?: discountsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: discountsInclude<ExtArgs> | null
  }


  /**
   * Model files
   */

  export type AggregateFiles = {
    _count: FilesCountAggregateOutputType | null
    _avg: FilesAvgAggregateOutputType | null
    _sum: FilesSumAggregateOutputType | null
    _min: FilesMinAggregateOutputType | null
    _max: FilesMaxAggregateOutputType | null
  }

  export type FilesAvgAggregateOutputType = {
    id: number | null
    file_size: number | null
    uploaded_by: number | null
  }

  export type FilesSumAggregateOutputType = {
    id: bigint | null
    file_size: bigint | null
    uploaded_by: bigint | null
  }

  export type FilesMinAggregateOutputType = {
    id: bigint | null
    file_name: string | null
    file_hash: string | null
    mime_type: string | null
    file_size: bigint | null
    url: string | null
    created_at: Date | null
    uploaded_by: bigint | null
    to_delete: boolean | null
  }

  export type FilesMaxAggregateOutputType = {
    id: bigint | null
    file_name: string | null
    file_hash: string | null
    mime_type: string | null
    file_size: bigint | null
    url: string | null
    created_at: Date | null
    uploaded_by: bigint | null
    to_delete: boolean | null
  }

  export type FilesCountAggregateOutputType = {
    id: number
    file_name: number
    file_hash: number
    mime_type: number
    file_size: number
    url: number
    created_at: number
    uploaded_by: number
    to_delete: number
    _all: number
  }


  export type FilesAvgAggregateInputType = {
    id?: true
    file_size?: true
    uploaded_by?: true
  }

  export type FilesSumAggregateInputType = {
    id?: true
    file_size?: true
    uploaded_by?: true
  }

  export type FilesMinAggregateInputType = {
    id?: true
    file_name?: true
    file_hash?: true
    mime_type?: true
    file_size?: true
    url?: true
    created_at?: true
    uploaded_by?: true
    to_delete?: true
  }

  export type FilesMaxAggregateInputType = {
    id?: true
    file_name?: true
    file_hash?: true
    mime_type?: true
    file_size?: true
    url?: true
    created_at?: true
    uploaded_by?: true
    to_delete?: true
  }

  export type FilesCountAggregateInputType = {
    id?: true
    file_name?: true
    file_hash?: true
    mime_type?: true
    file_size?: true
    url?: true
    created_at?: true
    uploaded_by?: true
    to_delete?: true
    _all?: true
  }

  export type FilesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which files to aggregate.
     */
    where?: filesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of files to fetch.
     */
    orderBy?: filesOrderByWithRelationInput | filesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: filesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` files from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` files.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned files
    **/
    _count?: true | FilesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FilesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FilesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FilesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FilesMaxAggregateInputType
  }

  export type GetFilesAggregateType<T extends FilesAggregateArgs> = {
        [P in keyof T & keyof AggregateFiles]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFiles[P]>
      : GetScalarType<T[P], AggregateFiles[P]>
  }




  export type filesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: filesWhereInput
    orderBy?: filesOrderByWithAggregationInput | filesOrderByWithAggregationInput[]
    by: FilesScalarFieldEnum[] | FilesScalarFieldEnum
    having?: filesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FilesCountAggregateInputType | true
    _avg?: FilesAvgAggregateInputType
    _sum?: FilesSumAggregateInputType
    _min?: FilesMinAggregateInputType
    _max?: FilesMaxAggregateInputType
  }

  export type FilesGroupByOutputType = {
    id: bigint
    file_name: string
    file_hash: string
    mime_type: string
    file_size: bigint
    url: string
    created_at: Date
    uploaded_by: bigint
    to_delete: boolean
    _count: FilesCountAggregateOutputType | null
    _avg: FilesAvgAggregateOutputType | null
    _sum: FilesSumAggregateOutputType | null
    _min: FilesMinAggregateOutputType | null
    _max: FilesMaxAggregateOutputType | null
  }

  type GetFilesGroupByPayload<T extends filesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FilesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FilesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FilesGroupByOutputType[P]>
            : GetScalarType<T[P], FilesGroupByOutputType[P]>
        }
      >
    >


  export type filesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    file_name?: boolean
    file_hash?: boolean
    mime_type?: boolean
    file_size?: boolean
    url?: boolean
    created_at?: boolean
    uploaded_by?: boolean
    to_delete?: boolean
    message_files?: boolean | files$message_filesArgs<ExtArgs>
    products_files?: boolean | files$products_filesArgs<ExtArgs>
    _count?: boolean | FilesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["files"]>

  export type filesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    file_name?: boolean
    file_hash?: boolean
    mime_type?: boolean
    file_size?: boolean
    url?: boolean
    created_at?: boolean
    uploaded_by?: boolean
    to_delete?: boolean
  }, ExtArgs["result"]["files"]>

  export type filesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    file_name?: boolean
    file_hash?: boolean
    mime_type?: boolean
    file_size?: boolean
    url?: boolean
    created_at?: boolean
    uploaded_by?: boolean
    to_delete?: boolean
  }, ExtArgs["result"]["files"]>

  export type filesSelectScalar = {
    id?: boolean
    file_name?: boolean
    file_hash?: boolean
    mime_type?: boolean
    file_size?: boolean
    url?: boolean
    created_at?: boolean
    uploaded_by?: boolean
    to_delete?: boolean
  }

  export type filesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "file_name" | "file_hash" | "mime_type" | "file_size" | "url" | "created_at" | "uploaded_by" | "to_delete", ExtArgs["result"]["files"]>
  export type filesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    message_files?: boolean | files$message_filesArgs<ExtArgs>
    products_files?: boolean | files$products_filesArgs<ExtArgs>
    _count?: boolean | FilesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type filesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type filesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $filesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "files"
    objects: {
      message_files: Prisma.$message_filesPayload<ExtArgs>[]
      products_files: Prisma.$products_filesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      file_name: string
      file_hash: string
      mime_type: string
      file_size: bigint
      url: string
      created_at: Date
      uploaded_by: bigint
      to_delete: boolean
    }, ExtArgs["result"]["files"]>
    composites: {}
  }

  type filesGetPayload<S extends boolean | null | undefined | filesDefaultArgs> = $Result.GetResult<Prisma.$filesPayload, S>

  type filesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<filesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FilesCountAggregateInputType | true
    }

  export interface filesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['files'], meta: { name: 'files' } }
    /**
     * Find zero or one Files that matches the filter.
     * @param {filesFindUniqueArgs} args - Arguments to find a Files
     * @example
     * // Get one Files
     * const files = await prisma.files.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends filesFindUniqueArgs>(args: SelectSubset<T, filesFindUniqueArgs<ExtArgs>>): Prisma__filesClient<$Result.GetResult<Prisma.$filesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Files that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {filesFindUniqueOrThrowArgs} args - Arguments to find a Files
     * @example
     * // Get one Files
     * const files = await prisma.files.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends filesFindUniqueOrThrowArgs>(args: SelectSubset<T, filesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__filesClient<$Result.GetResult<Prisma.$filesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Files that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {filesFindFirstArgs} args - Arguments to find a Files
     * @example
     * // Get one Files
     * const files = await prisma.files.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends filesFindFirstArgs>(args?: SelectSubset<T, filesFindFirstArgs<ExtArgs>>): Prisma__filesClient<$Result.GetResult<Prisma.$filesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Files that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {filesFindFirstOrThrowArgs} args - Arguments to find a Files
     * @example
     * // Get one Files
     * const files = await prisma.files.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends filesFindFirstOrThrowArgs>(args?: SelectSubset<T, filesFindFirstOrThrowArgs<ExtArgs>>): Prisma__filesClient<$Result.GetResult<Prisma.$filesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Files that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {filesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Files
     * const files = await prisma.files.findMany()
     * 
     * // Get first 10 Files
     * const files = await prisma.files.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const filesWithIdOnly = await prisma.files.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends filesFindManyArgs>(args?: SelectSubset<T, filesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$filesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Files.
     * @param {filesCreateArgs} args - Arguments to create a Files.
     * @example
     * // Create one Files
     * const Files = await prisma.files.create({
     *   data: {
     *     // ... data to create a Files
     *   }
     * })
     * 
     */
    create<T extends filesCreateArgs>(args: SelectSubset<T, filesCreateArgs<ExtArgs>>): Prisma__filesClient<$Result.GetResult<Prisma.$filesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Files.
     * @param {filesCreateManyArgs} args - Arguments to create many Files.
     * @example
     * // Create many Files
     * const files = await prisma.files.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends filesCreateManyArgs>(args?: SelectSubset<T, filesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Files and returns the data saved in the database.
     * @param {filesCreateManyAndReturnArgs} args - Arguments to create many Files.
     * @example
     * // Create many Files
     * const files = await prisma.files.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Files and only return the `id`
     * const filesWithIdOnly = await prisma.files.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends filesCreateManyAndReturnArgs>(args?: SelectSubset<T, filesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$filesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Files.
     * @param {filesDeleteArgs} args - Arguments to delete one Files.
     * @example
     * // Delete one Files
     * const Files = await prisma.files.delete({
     *   where: {
     *     // ... filter to delete one Files
     *   }
     * })
     * 
     */
    delete<T extends filesDeleteArgs>(args: SelectSubset<T, filesDeleteArgs<ExtArgs>>): Prisma__filesClient<$Result.GetResult<Prisma.$filesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Files.
     * @param {filesUpdateArgs} args - Arguments to update one Files.
     * @example
     * // Update one Files
     * const files = await prisma.files.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends filesUpdateArgs>(args: SelectSubset<T, filesUpdateArgs<ExtArgs>>): Prisma__filesClient<$Result.GetResult<Prisma.$filesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Files.
     * @param {filesDeleteManyArgs} args - Arguments to filter Files to delete.
     * @example
     * // Delete a few Files
     * const { count } = await prisma.files.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends filesDeleteManyArgs>(args?: SelectSubset<T, filesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {filesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Files
     * const files = await prisma.files.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends filesUpdateManyArgs>(args: SelectSubset<T, filesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Files and returns the data updated in the database.
     * @param {filesUpdateManyAndReturnArgs} args - Arguments to update many Files.
     * @example
     * // Update many Files
     * const files = await prisma.files.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Files and only return the `id`
     * const filesWithIdOnly = await prisma.files.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends filesUpdateManyAndReturnArgs>(args: SelectSubset<T, filesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$filesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Files.
     * @param {filesUpsertArgs} args - Arguments to update or create a Files.
     * @example
     * // Update or create a Files
     * const files = await prisma.files.upsert({
     *   create: {
     *     // ... data to create a Files
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Files we want to update
     *   }
     * })
     */
    upsert<T extends filesUpsertArgs>(args: SelectSubset<T, filesUpsertArgs<ExtArgs>>): Prisma__filesClient<$Result.GetResult<Prisma.$filesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {filesCountArgs} args - Arguments to filter Files to count.
     * @example
     * // Count the number of Files
     * const count = await prisma.files.count({
     *   where: {
     *     // ... the filter for the Files we want to count
     *   }
     * })
    **/
    count<T extends filesCountArgs>(
      args?: Subset<T, filesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FilesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FilesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FilesAggregateArgs>(args: Subset<T, FilesAggregateArgs>): Prisma.PrismaPromise<GetFilesAggregateType<T>>

    /**
     * Group by Files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {filesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends filesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: filesGroupByArgs['orderBy'] }
        : { orderBy?: filesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, filesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFilesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the files model
   */
  readonly fields: filesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for files.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__filesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    message_files<T extends files$message_filesArgs<ExtArgs> = {}>(args?: Subset<T, files$message_filesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$message_filesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    products_files<T extends files$products_filesArgs<ExtArgs> = {}>(args?: Subset<T, files$products_filesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$products_filesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the files model
   */
  interface filesFieldRefs {
    readonly id: FieldRef<"files", 'BigInt'>
    readonly file_name: FieldRef<"files", 'String'>
    readonly file_hash: FieldRef<"files", 'String'>
    readonly mime_type: FieldRef<"files", 'String'>
    readonly file_size: FieldRef<"files", 'BigInt'>
    readonly url: FieldRef<"files", 'String'>
    readonly created_at: FieldRef<"files", 'DateTime'>
    readonly uploaded_by: FieldRef<"files", 'BigInt'>
    readonly to_delete: FieldRef<"files", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * files findUnique
   */
  export type filesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the files
     */
    select?: filesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the files
     */
    omit?: filesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: filesInclude<ExtArgs> | null
    /**
     * Filter, which files to fetch.
     */
    where: filesWhereUniqueInput
  }

  /**
   * files findUniqueOrThrow
   */
  export type filesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the files
     */
    select?: filesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the files
     */
    omit?: filesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: filesInclude<ExtArgs> | null
    /**
     * Filter, which files to fetch.
     */
    where: filesWhereUniqueInput
  }

  /**
   * files findFirst
   */
  export type filesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the files
     */
    select?: filesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the files
     */
    omit?: filesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: filesInclude<ExtArgs> | null
    /**
     * Filter, which files to fetch.
     */
    where?: filesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of files to fetch.
     */
    orderBy?: filesOrderByWithRelationInput | filesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for files.
     */
    cursor?: filesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` files from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` files.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of files.
     */
    distinct?: FilesScalarFieldEnum | FilesScalarFieldEnum[]
  }

  /**
   * files findFirstOrThrow
   */
  export type filesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the files
     */
    select?: filesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the files
     */
    omit?: filesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: filesInclude<ExtArgs> | null
    /**
     * Filter, which files to fetch.
     */
    where?: filesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of files to fetch.
     */
    orderBy?: filesOrderByWithRelationInput | filesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for files.
     */
    cursor?: filesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` files from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` files.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of files.
     */
    distinct?: FilesScalarFieldEnum | FilesScalarFieldEnum[]
  }

  /**
   * files findMany
   */
  export type filesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the files
     */
    select?: filesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the files
     */
    omit?: filesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: filesInclude<ExtArgs> | null
    /**
     * Filter, which files to fetch.
     */
    where?: filesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of files to fetch.
     */
    orderBy?: filesOrderByWithRelationInput | filesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing files.
     */
    cursor?: filesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` files from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` files.
     */
    skip?: number
    distinct?: FilesScalarFieldEnum | FilesScalarFieldEnum[]
  }

  /**
   * files create
   */
  export type filesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the files
     */
    select?: filesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the files
     */
    omit?: filesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: filesInclude<ExtArgs> | null
    /**
     * The data needed to create a files.
     */
    data: XOR<filesCreateInput, filesUncheckedCreateInput>
  }

  /**
   * files createMany
   */
  export type filesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many files.
     */
    data: filesCreateManyInput | filesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * files createManyAndReturn
   */
  export type filesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the files
     */
    select?: filesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the files
     */
    omit?: filesOmit<ExtArgs> | null
    /**
     * The data used to create many files.
     */
    data: filesCreateManyInput | filesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * files update
   */
  export type filesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the files
     */
    select?: filesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the files
     */
    omit?: filesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: filesInclude<ExtArgs> | null
    /**
     * The data needed to update a files.
     */
    data: XOR<filesUpdateInput, filesUncheckedUpdateInput>
    /**
     * Choose, which files to update.
     */
    where: filesWhereUniqueInput
  }

  /**
   * files updateMany
   */
  export type filesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update files.
     */
    data: XOR<filesUpdateManyMutationInput, filesUncheckedUpdateManyInput>
    /**
     * Filter which files to update
     */
    where?: filesWhereInput
    /**
     * Limit how many files to update.
     */
    limit?: number
  }

  /**
   * files updateManyAndReturn
   */
  export type filesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the files
     */
    select?: filesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the files
     */
    omit?: filesOmit<ExtArgs> | null
    /**
     * The data used to update files.
     */
    data: XOR<filesUpdateManyMutationInput, filesUncheckedUpdateManyInput>
    /**
     * Filter which files to update
     */
    where?: filesWhereInput
    /**
     * Limit how many files to update.
     */
    limit?: number
  }

  /**
   * files upsert
   */
  export type filesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the files
     */
    select?: filesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the files
     */
    omit?: filesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: filesInclude<ExtArgs> | null
    /**
     * The filter to search for the files to update in case it exists.
     */
    where: filesWhereUniqueInput
    /**
     * In case the files found by the `where` argument doesn't exist, create a new files with this data.
     */
    create: XOR<filesCreateInput, filesUncheckedCreateInput>
    /**
     * In case the files was found with the provided `where` argument, update it with this data.
     */
    update: XOR<filesUpdateInput, filesUncheckedUpdateInput>
  }

  /**
   * files delete
   */
  export type filesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the files
     */
    select?: filesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the files
     */
    omit?: filesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: filesInclude<ExtArgs> | null
    /**
     * Filter which files to delete.
     */
    where: filesWhereUniqueInput
  }

  /**
   * files deleteMany
   */
  export type filesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which files to delete
     */
    where?: filesWhereInput
    /**
     * Limit how many files to delete.
     */
    limit?: number
  }

  /**
   * files.message_files
   */
  export type files$message_filesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the message_files
     */
    select?: message_filesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the message_files
     */
    omit?: message_filesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: message_filesInclude<ExtArgs> | null
    where?: message_filesWhereInput
    orderBy?: message_filesOrderByWithRelationInput | message_filesOrderByWithRelationInput[]
    cursor?: message_filesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Message_filesScalarFieldEnum | Message_filesScalarFieldEnum[]
  }

  /**
   * files.products_files
   */
  export type files$products_filesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products_files
     */
    select?: products_filesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products_files
     */
    omit?: products_filesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: products_filesInclude<ExtArgs> | null
    where?: products_filesWhereInput
    orderBy?: products_filesOrderByWithRelationInput | products_filesOrderByWithRelationInput[]
    cursor?: products_filesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Products_filesScalarFieldEnum | Products_filesScalarFieldEnum[]
  }

  /**
   * files without action
   */
  export type filesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the files
     */
    select?: filesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the files
     */
    omit?: filesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: filesInclude<ExtArgs> | null
  }


  /**
   * Model message_files
   */

  export type AggregateMessage_files = {
    _count: Message_filesCountAggregateOutputType | null
    _avg: Message_filesAvgAggregateOutputType | null
    _sum: Message_filesSumAggregateOutputType | null
    _min: Message_filesMinAggregateOutputType | null
    _max: Message_filesMaxAggregateOutputType | null
  }

  export type Message_filesAvgAggregateOutputType = {
    id: number | null
    message_id: number | null
    file_id: number | null
    sort: number | null
  }

  export type Message_filesSumAggregateOutputType = {
    id: bigint | null
    message_id: bigint | null
    file_id: bigint | null
    sort: number | null
  }

  export type Message_filesMinAggregateOutputType = {
    id: bigint | null
    message_id: bigint | null
    file_id: bigint | null
    sort: number | null
  }

  export type Message_filesMaxAggregateOutputType = {
    id: bigint | null
    message_id: bigint | null
    file_id: bigint | null
    sort: number | null
  }

  export type Message_filesCountAggregateOutputType = {
    id: number
    message_id: number
    file_id: number
    sort: number
    _all: number
  }


  export type Message_filesAvgAggregateInputType = {
    id?: true
    message_id?: true
    file_id?: true
    sort?: true
  }

  export type Message_filesSumAggregateInputType = {
    id?: true
    message_id?: true
    file_id?: true
    sort?: true
  }

  export type Message_filesMinAggregateInputType = {
    id?: true
    message_id?: true
    file_id?: true
    sort?: true
  }

  export type Message_filesMaxAggregateInputType = {
    id?: true
    message_id?: true
    file_id?: true
    sort?: true
  }

  export type Message_filesCountAggregateInputType = {
    id?: true
    message_id?: true
    file_id?: true
    sort?: true
    _all?: true
  }

  export type Message_filesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which message_files to aggregate.
     */
    where?: message_filesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of message_files to fetch.
     */
    orderBy?: message_filesOrderByWithRelationInput | message_filesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: message_filesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` message_files from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` message_files.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned message_files
    **/
    _count?: true | Message_filesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Message_filesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Message_filesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Message_filesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Message_filesMaxAggregateInputType
  }

  export type GetMessage_filesAggregateType<T extends Message_filesAggregateArgs> = {
        [P in keyof T & keyof AggregateMessage_files]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMessage_files[P]>
      : GetScalarType<T[P], AggregateMessage_files[P]>
  }




  export type message_filesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: message_filesWhereInput
    orderBy?: message_filesOrderByWithAggregationInput | message_filesOrderByWithAggregationInput[]
    by: Message_filesScalarFieldEnum[] | Message_filesScalarFieldEnum
    having?: message_filesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Message_filesCountAggregateInputType | true
    _avg?: Message_filesAvgAggregateInputType
    _sum?: Message_filesSumAggregateInputType
    _min?: Message_filesMinAggregateInputType
    _max?: Message_filesMaxAggregateInputType
  }

  export type Message_filesGroupByOutputType = {
    id: bigint
    message_id: bigint
    file_id: bigint
    sort: number
    _count: Message_filesCountAggregateOutputType | null
    _avg: Message_filesAvgAggregateOutputType | null
    _sum: Message_filesSumAggregateOutputType | null
    _min: Message_filesMinAggregateOutputType | null
    _max: Message_filesMaxAggregateOutputType | null
  }

  type GetMessage_filesGroupByPayload<T extends message_filesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Message_filesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Message_filesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Message_filesGroupByOutputType[P]>
            : GetScalarType<T[P], Message_filesGroupByOutputType[P]>
        }
      >
    >


  export type message_filesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    message_id?: boolean
    file_id?: boolean
    sort?: boolean
    files?: boolean | filesDefaultArgs<ExtArgs>
    messages?: boolean | messagesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["message_files"]>

  export type message_filesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    message_id?: boolean
    file_id?: boolean
    sort?: boolean
    files?: boolean | filesDefaultArgs<ExtArgs>
    messages?: boolean | messagesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["message_files"]>

  export type message_filesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    message_id?: boolean
    file_id?: boolean
    sort?: boolean
    files?: boolean | filesDefaultArgs<ExtArgs>
    messages?: boolean | messagesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["message_files"]>

  export type message_filesSelectScalar = {
    id?: boolean
    message_id?: boolean
    file_id?: boolean
    sort?: boolean
  }

  export type message_filesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "message_id" | "file_id" | "sort", ExtArgs["result"]["message_files"]>
  export type message_filesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    files?: boolean | filesDefaultArgs<ExtArgs>
    messages?: boolean | messagesDefaultArgs<ExtArgs>
  }
  export type message_filesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    files?: boolean | filesDefaultArgs<ExtArgs>
    messages?: boolean | messagesDefaultArgs<ExtArgs>
  }
  export type message_filesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    files?: boolean | filesDefaultArgs<ExtArgs>
    messages?: boolean | messagesDefaultArgs<ExtArgs>
  }

  export type $message_filesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "message_files"
    objects: {
      files: Prisma.$filesPayload<ExtArgs>
      messages: Prisma.$messagesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      message_id: bigint
      file_id: bigint
      sort: number
    }, ExtArgs["result"]["message_files"]>
    composites: {}
  }

  type message_filesGetPayload<S extends boolean | null | undefined | message_filesDefaultArgs> = $Result.GetResult<Prisma.$message_filesPayload, S>

  type message_filesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<message_filesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Message_filesCountAggregateInputType | true
    }

  export interface message_filesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['message_files'], meta: { name: 'message_files' } }
    /**
     * Find zero or one Message_files that matches the filter.
     * @param {message_filesFindUniqueArgs} args - Arguments to find a Message_files
     * @example
     * // Get one Message_files
     * const message_files = await prisma.message_files.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends message_filesFindUniqueArgs>(args: SelectSubset<T, message_filesFindUniqueArgs<ExtArgs>>): Prisma__message_filesClient<$Result.GetResult<Prisma.$message_filesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Message_files that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {message_filesFindUniqueOrThrowArgs} args - Arguments to find a Message_files
     * @example
     * // Get one Message_files
     * const message_files = await prisma.message_files.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends message_filesFindUniqueOrThrowArgs>(args: SelectSubset<T, message_filesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__message_filesClient<$Result.GetResult<Prisma.$message_filesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Message_files that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {message_filesFindFirstArgs} args - Arguments to find a Message_files
     * @example
     * // Get one Message_files
     * const message_files = await prisma.message_files.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends message_filesFindFirstArgs>(args?: SelectSubset<T, message_filesFindFirstArgs<ExtArgs>>): Prisma__message_filesClient<$Result.GetResult<Prisma.$message_filesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Message_files that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {message_filesFindFirstOrThrowArgs} args - Arguments to find a Message_files
     * @example
     * // Get one Message_files
     * const message_files = await prisma.message_files.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends message_filesFindFirstOrThrowArgs>(args?: SelectSubset<T, message_filesFindFirstOrThrowArgs<ExtArgs>>): Prisma__message_filesClient<$Result.GetResult<Prisma.$message_filesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Message_files that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {message_filesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Message_files
     * const message_files = await prisma.message_files.findMany()
     * 
     * // Get first 10 Message_files
     * const message_files = await prisma.message_files.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const message_filesWithIdOnly = await prisma.message_files.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends message_filesFindManyArgs>(args?: SelectSubset<T, message_filesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$message_filesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Message_files.
     * @param {message_filesCreateArgs} args - Arguments to create a Message_files.
     * @example
     * // Create one Message_files
     * const Message_files = await prisma.message_files.create({
     *   data: {
     *     // ... data to create a Message_files
     *   }
     * })
     * 
     */
    create<T extends message_filesCreateArgs>(args: SelectSubset<T, message_filesCreateArgs<ExtArgs>>): Prisma__message_filesClient<$Result.GetResult<Prisma.$message_filesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Message_files.
     * @param {message_filesCreateManyArgs} args - Arguments to create many Message_files.
     * @example
     * // Create many Message_files
     * const message_files = await prisma.message_files.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends message_filesCreateManyArgs>(args?: SelectSubset<T, message_filesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Message_files and returns the data saved in the database.
     * @param {message_filesCreateManyAndReturnArgs} args - Arguments to create many Message_files.
     * @example
     * // Create many Message_files
     * const message_files = await prisma.message_files.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Message_files and only return the `id`
     * const message_filesWithIdOnly = await prisma.message_files.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends message_filesCreateManyAndReturnArgs>(args?: SelectSubset<T, message_filesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$message_filesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Message_files.
     * @param {message_filesDeleteArgs} args - Arguments to delete one Message_files.
     * @example
     * // Delete one Message_files
     * const Message_files = await prisma.message_files.delete({
     *   where: {
     *     // ... filter to delete one Message_files
     *   }
     * })
     * 
     */
    delete<T extends message_filesDeleteArgs>(args: SelectSubset<T, message_filesDeleteArgs<ExtArgs>>): Prisma__message_filesClient<$Result.GetResult<Prisma.$message_filesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Message_files.
     * @param {message_filesUpdateArgs} args - Arguments to update one Message_files.
     * @example
     * // Update one Message_files
     * const message_files = await prisma.message_files.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends message_filesUpdateArgs>(args: SelectSubset<T, message_filesUpdateArgs<ExtArgs>>): Prisma__message_filesClient<$Result.GetResult<Prisma.$message_filesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Message_files.
     * @param {message_filesDeleteManyArgs} args - Arguments to filter Message_files to delete.
     * @example
     * // Delete a few Message_files
     * const { count } = await prisma.message_files.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends message_filesDeleteManyArgs>(args?: SelectSubset<T, message_filesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Message_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {message_filesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Message_files
     * const message_files = await prisma.message_files.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends message_filesUpdateManyArgs>(args: SelectSubset<T, message_filesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Message_files and returns the data updated in the database.
     * @param {message_filesUpdateManyAndReturnArgs} args - Arguments to update many Message_files.
     * @example
     * // Update many Message_files
     * const message_files = await prisma.message_files.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Message_files and only return the `id`
     * const message_filesWithIdOnly = await prisma.message_files.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends message_filesUpdateManyAndReturnArgs>(args: SelectSubset<T, message_filesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$message_filesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Message_files.
     * @param {message_filesUpsertArgs} args - Arguments to update or create a Message_files.
     * @example
     * // Update or create a Message_files
     * const message_files = await prisma.message_files.upsert({
     *   create: {
     *     // ... data to create a Message_files
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Message_files we want to update
     *   }
     * })
     */
    upsert<T extends message_filesUpsertArgs>(args: SelectSubset<T, message_filesUpsertArgs<ExtArgs>>): Prisma__message_filesClient<$Result.GetResult<Prisma.$message_filesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Message_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {message_filesCountArgs} args - Arguments to filter Message_files to count.
     * @example
     * // Count the number of Message_files
     * const count = await prisma.message_files.count({
     *   where: {
     *     // ... the filter for the Message_files we want to count
     *   }
     * })
    **/
    count<T extends message_filesCountArgs>(
      args?: Subset<T, message_filesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Message_filesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Message_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Message_filesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Message_filesAggregateArgs>(args: Subset<T, Message_filesAggregateArgs>): Prisma.PrismaPromise<GetMessage_filesAggregateType<T>>

    /**
     * Group by Message_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {message_filesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends message_filesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: message_filesGroupByArgs['orderBy'] }
        : { orderBy?: message_filesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, message_filesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMessage_filesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the message_files model
   */
  readonly fields: message_filesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for message_files.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__message_filesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    files<T extends filesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, filesDefaultArgs<ExtArgs>>): Prisma__filesClient<$Result.GetResult<Prisma.$filesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    messages<T extends messagesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, messagesDefaultArgs<ExtArgs>>): Prisma__messagesClient<$Result.GetResult<Prisma.$messagesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the message_files model
   */
  interface message_filesFieldRefs {
    readonly id: FieldRef<"message_files", 'BigInt'>
    readonly message_id: FieldRef<"message_files", 'BigInt'>
    readonly file_id: FieldRef<"message_files", 'BigInt'>
    readonly sort: FieldRef<"message_files", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * message_files findUnique
   */
  export type message_filesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the message_files
     */
    select?: message_filesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the message_files
     */
    omit?: message_filesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: message_filesInclude<ExtArgs> | null
    /**
     * Filter, which message_files to fetch.
     */
    where: message_filesWhereUniqueInput
  }

  /**
   * message_files findUniqueOrThrow
   */
  export type message_filesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the message_files
     */
    select?: message_filesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the message_files
     */
    omit?: message_filesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: message_filesInclude<ExtArgs> | null
    /**
     * Filter, which message_files to fetch.
     */
    where: message_filesWhereUniqueInput
  }

  /**
   * message_files findFirst
   */
  export type message_filesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the message_files
     */
    select?: message_filesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the message_files
     */
    omit?: message_filesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: message_filesInclude<ExtArgs> | null
    /**
     * Filter, which message_files to fetch.
     */
    where?: message_filesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of message_files to fetch.
     */
    orderBy?: message_filesOrderByWithRelationInput | message_filesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for message_files.
     */
    cursor?: message_filesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` message_files from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` message_files.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of message_files.
     */
    distinct?: Message_filesScalarFieldEnum | Message_filesScalarFieldEnum[]
  }

  /**
   * message_files findFirstOrThrow
   */
  export type message_filesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the message_files
     */
    select?: message_filesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the message_files
     */
    omit?: message_filesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: message_filesInclude<ExtArgs> | null
    /**
     * Filter, which message_files to fetch.
     */
    where?: message_filesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of message_files to fetch.
     */
    orderBy?: message_filesOrderByWithRelationInput | message_filesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for message_files.
     */
    cursor?: message_filesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` message_files from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` message_files.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of message_files.
     */
    distinct?: Message_filesScalarFieldEnum | Message_filesScalarFieldEnum[]
  }

  /**
   * message_files findMany
   */
  export type message_filesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the message_files
     */
    select?: message_filesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the message_files
     */
    omit?: message_filesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: message_filesInclude<ExtArgs> | null
    /**
     * Filter, which message_files to fetch.
     */
    where?: message_filesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of message_files to fetch.
     */
    orderBy?: message_filesOrderByWithRelationInput | message_filesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing message_files.
     */
    cursor?: message_filesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` message_files from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` message_files.
     */
    skip?: number
    distinct?: Message_filesScalarFieldEnum | Message_filesScalarFieldEnum[]
  }

  /**
   * message_files create
   */
  export type message_filesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the message_files
     */
    select?: message_filesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the message_files
     */
    omit?: message_filesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: message_filesInclude<ExtArgs> | null
    /**
     * The data needed to create a message_files.
     */
    data: XOR<message_filesCreateInput, message_filesUncheckedCreateInput>
  }

  /**
   * message_files createMany
   */
  export type message_filesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many message_files.
     */
    data: message_filesCreateManyInput | message_filesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * message_files createManyAndReturn
   */
  export type message_filesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the message_files
     */
    select?: message_filesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the message_files
     */
    omit?: message_filesOmit<ExtArgs> | null
    /**
     * The data used to create many message_files.
     */
    data: message_filesCreateManyInput | message_filesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: message_filesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * message_files update
   */
  export type message_filesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the message_files
     */
    select?: message_filesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the message_files
     */
    omit?: message_filesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: message_filesInclude<ExtArgs> | null
    /**
     * The data needed to update a message_files.
     */
    data: XOR<message_filesUpdateInput, message_filesUncheckedUpdateInput>
    /**
     * Choose, which message_files to update.
     */
    where: message_filesWhereUniqueInput
  }

  /**
   * message_files updateMany
   */
  export type message_filesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update message_files.
     */
    data: XOR<message_filesUpdateManyMutationInput, message_filesUncheckedUpdateManyInput>
    /**
     * Filter which message_files to update
     */
    where?: message_filesWhereInput
    /**
     * Limit how many message_files to update.
     */
    limit?: number
  }

  /**
   * message_files updateManyAndReturn
   */
  export type message_filesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the message_files
     */
    select?: message_filesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the message_files
     */
    omit?: message_filesOmit<ExtArgs> | null
    /**
     * The data used to update message_files.
     */
    data: XOR<message_filesUpdateManyMutationInput, message_filesUncheckedUpdateManyInput>
    /**
     * Filter which message_files to update
     */
    where?: message_filesWhereInput
    /**
     * Limit how many message_files to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: message_filesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * message_files upsert
   */
  export type message_filesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the message_files
     */
    select?: message_filesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the message_files
     */
    omit?: message_filesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: message_filesInclude<ExtArgs> | null
    /**
     * The filter to search for the message_files to update in case it exists.
     */
    where: message_filesWhereUniqueInput
    /**
     * In case the message_files found by the `where` argument doesn't exist, create a new message_files with this data.
     */
    create: XOR<message_filesCreateInput, message_filesUncheckedCreateInput>
    /**
     * In case the message_files was found with the provided `where` argument, update it with this data.
     */
    update: XOR<message_filesUpdateInput, message_filesUncheckedUpdateInput>
  }

  /**
   * message_files delete
   */
  export type message_filesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the message_files
     */
    select?: message_filesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the message_files
     */
    omit?: message_filesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: message_filesInclude<ExtArgs> | null
    /**
     * Filter which message_files to delete.
     */
    where: message_filesWhereUniqueInput
  }

  /**
   * message_files deleteMany
   */
  export type message_filesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which message_files to delete
     */
    where?: message_filesWhereInput
    /**
     * Limit how many message_files to delete.
     */
    limit?: number
  }

  /**
   * message_files without action
   */
  export type message_filesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the message_files
     */
    select?: message_filesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the message_files
     */
    omit?: message_filesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: message_filesInclude<ExtArgs> | null
  }


  /**
   * Model messages
   */

  export type AggregateMessages = {
    _count: MessagesCountAggregateOutputType | null
    _avg: MessagesAvgAggregateOutputType | null
    _sum: MessagesSumAggregateOutputType | null
    _min: MessagesMinAggregateOutputType | null
    _max: MessagesMaxAggregateOutputType | null
  }

  export type MessagesAvgAggregateOutputType = {
    id: number | null
    chat_panel_id: number | null
    reply_to: number | null
  }

  export type MessagesSumAggregateOutputType = {
    id: bigint | null
    chat_panel_id: bigint | null
    reply_to: bigint | null
  }

  export type MessagesMinAggregateOutputType = {
    id: bigint | null
    chat_panel_id: bigint | null
    sender_id: string | null
    reply_to: bigint | null
    content: string | null
    created_at: Date | null
    is_read: boolean | null
  }

  export type MessagesMaxAggregateOutputType = {
    id: bigint | null
    chat_panel_id: bigint | null
    sender_id: string | null
    reply_to: bigint | null
    content: string | null
    created_at: Date | null
    is_read: boolean | null
  }

  export type MessagesCountAggregateOutputType = {
    id: number
    chat_panel_id: number
    sender_id: number
    reply_to: number
    content: number
    created_at: number
    is_read: number
    _all: number
  }


  export type MessagesAvgAggregateInputType = {
    id?: true
    chat_panel_id?: true
    reply_to?: true
  }

  export type MessagesSumAggregateInputType = {
    id?: true
    chat_panel_id?: true
    reply_to?: true
  }

  export type MessagesMinAggregateInputType = {
    id?: true
    chat_panel_id?: true
    sender_id?: true
    reply_to?: true
    content?: true
    created_at?: true
    is_read?: true
  }

  export type MessagesMaxAggregateInputType = {
    id?: true
    chat_panel_id?: true
    sender_id?: true
    reply_to?: true
    content?: true
    created_at?: true
    is_read?: true
  }

  export type MessagesCountAggregateInputType = {
    id?: true
    chat_panel_id?: true
    sender_id?: true
    reply_to?: true
    content?: true
    created_at?: true
    is_read?: true
    _all?: true
  }

  export type MessagesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which messages to aggregate.
     */
    where?: messagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of messages to fetch.
     */
    orderBy?: messagesOrderByWithRelationInput | messagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: messagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned messages
    **/
    _count?: true | MessagesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MessagesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MessagesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MessagesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MessagesMaxAggregateInputType
  }

  export type GetMessagesAggregateType<T extends MessagesAggregateArgs> = {
        [P in keyof T & keyof AggregateMessages]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMessages[P]>
      : GetScalarType<T[P], AggregateMessages[P]>
  }




  export type messagesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: messagesWhereInput
    orderBy?: messagesOrderByWithAggregationInput | messagesOrderByWithAggregationInput[]
    by: MessagesScalarFieldEnum[] | MessagesScalarFieldEnum
    having?: messagesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MessagesCountAggregateInputType | true
    _avg?: MessagesAvgAggregateInputType
    _sum?: MessagesSumAggregateInputType
    _min?: MessagesMinAggregateInputType
    _max?: MessagesMaxAggregateInputType
  }

  export type MessagesGroupByOutputType = {
    id: bigint
    chat_panel_id: bigint
    sender_id: string | null
    reply_to: bigint | null
    content: string | null
    created_at: Date
    is_read: boolean
    _count: MessagesCountAggregateOutputType | null
    _avg: MessagesAvgAggregateOutputType | null
    _sum: MessagesSumAggregateOutputType | null
    _min: MessagesMinAggregateOutputType | null
    _max: MessagesMaxAggregateOutputType | null
  }

  type GetMessagesGroupByPayload<T extends messagesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MessagesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MessagesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MessagesGroupByOutputType[P]>
            : GetScalarType<T[P], MessagesGroupByOutputType[P]>
        }
      >
    >


  export type messagesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    chat_panel_id?: boolean
    sender_id?: boolean
    reply_to?: boolean
    content?: boolean
    created_at?: boolean
    is_read?: boolean
    message_files?: boolean | messages$message_filesArgs<ExtArgs>
    chat_panels?: boolean | chat_panelsDefaultArgs<ExtArgs>
    messages?: boolean | messages$messagesArgs<ExtArgs>
    other_messages?: boolean | messages$other_messagesArgs<ExtArgs>
    users?: boolean | messages$usersArgs<ExtArgs>
    _count?: boolean | MessagesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["messages"]>

  export type messagesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    chat_panel_id?: boolean
    sender_id?: boolean
    reply_to?: boolean
    content?: boolean
    created_at?: boolean
    is_read?: boolean
    chat_panels?: boolean | chat_panelsDefaultArgs<ExtArgs>
    messages?: boolean | messages$messagesArgs<ExtArgs>
    users?: boolean | messages$usersArgs<ExtArgs>
  }, ExtArgs["result"]["messages"]>

  export type messagesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    chat_panel_id?: boolean
    sender_id?: boolean
    reply_to?: boolean
    content?: boolean
    created_at?: boolean
    is_read?: boolean
    chat_panels?: boolean | chat_panelsDefaultArgs<ExtArgs>
    messages?: boolean | messages$messagesArgs<ExtArgs>
    users?: boolean | messages$usersArgs<ExtArgs>
  }, ExtArgs["result"]["messages"]>

  export type messagesSelectScalar = {
    id?: boolean
    chat_panel_id?: boolean
    sender_id?: boolean
    reply_to?: boolean
    content?: boolean
    created_at?: boolean
    is_read?: boolean
  }

  export type messagesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "chat_panel_id" | "sender_id" | "reply_to" | "content" | "created_at" | "is_read", ExtArgs["result"]["messages"]>
  export type messagesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    message_files?: boolean | messages$message_filesArgs<ExtArgs>
    chat_panels?: boolean | chat_panelsDefaultArgs<ExtArgs>
    messages?: boolean | messages$messagesArgs<ExtArgs>
    other_messages?: boolean | messages$other_messagesArgs<ExtArgs>
    users?: boolean | messages$usersArgs<ExtArgs>
    _count?: boolean | MessagesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type messagesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    chat_panels?: boolean | chat_panelsDefaultArgs<ExtArgs>
    messages?: boolean | messages$messagesArgs<ExtArgs>
    users?: boolean | messages$usersArgs<ExtArgs>
  }
  export type messagesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    chat_panels?: boolean | chat_panelsDefaultArgs<ExtArgs>
    messages?: boolean | messages$messagesArgs<ExtArgs>
    users?: boolean | messages$usersArgs<ExtArgs>
  }

  export type $messagesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "messages"
    objects: {
      message_files: Prisma.$message_filesPayload<ExtArgs>[]
      chat_panels: Prisma.$chat_panelsPayload<ExtArgs>
      messages: Prisma.$messagesPayload<ExtArgs> | null
      other_messages: Prisma.$messagesPayload<ExtArgs>[]
      users: Prisma.$usersPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      chat_panel_id: bigint
      sender_id: string | null
      reply_to: bigint | null
      content: string | null
      created_at: Date
      is_read: boolean
    }, ExtArgs["result"]["messages"]>
    composites: {}
  }

  type messagesGetPayload<S extends boolean | null | undefined | messagesDefaultArgs> = $Result.GetResult<Prisma.$messagesPayload, S>

  type messagesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<messagesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MessagesCountAggregateInputType | true
    }

  export interface messagesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['messages'], meta: { name: 'messages' } }
    /**
     * Find zero or one Messages that matches the filter.
     * @param {messagesFindUniqueArgs} args - Arguments to find a Messages
     * @example
     * // Get one Messages
     * const messages = await prisma.messages.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends messagesFindUniqueArgs>(args: SelectSubset<T, messagesFindUniqueArgs<ExtArgs>>): Prisma__messagesClient<$Result.GetResult<Prisma.$messagesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Messages that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {messagesFindUniqueOrThrowArgs} args - Arguments to find a Messages
     * @example
     * // Get one Messages
     * const messages = await prisma.messages.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends messagesFindUniqueOrThrowArgs>(args: SelectSubset<T, messagesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__messagesClient<$Result.GetResult<Prisma.$messagesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Messages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {messagesFindFirstArgs} args - Arguments to find a Messages
     * @example
     * // Get one Messages
     * const messages = await prisma.messages.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends messagesFindFirstArgs>(args?: SelectSubset<T, messagesFindFirstArgs<ExtArgs>>): Prisma__messagesClient<$Result.GetResult<Prisma.$messagesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Messages that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {messagesFindFirstOrThrowArgs} args - Arguments to find a Messages
     * @example
     * // Get one Messages
     * const messages = await prisma.messages.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends messagesFindFirstOrThrowArgs>(args?: SelectSubset<T, messagesFindFirstOrThrowArgs<ExtArgs>>): Prisma__messagesClient<$Result.GetResult<Prisma.$messagesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Messages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {messagesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Messages
     * const messages = await prisma.messages.findMany()
     * 
     * // Get first 10 Messages
     * const messages = await prisma.messages.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const messagesWithIdOnly = await prisma.messages.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends messagesFindManyArgs>(args?: SelectSubset<T, messagesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$messagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Messages.
     * @param {messagesCreateArgs} args - Arguments to create a Messages.
     * @example
     * // Create one Messages
     * const Messages = await prisma.messages.create({
     *   data: {
     *     // ... data to create a Messages
     *   }
     * })
     * 
     */
    create<T extends messagesCreateArgs>(args: SelectSubset<T, messagesCreateArgs<ExtArgs>>): Prisma__messagesClient<$Result.GetResult<Prisma.$messagesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Messages.
     * @param {messagesCreateManyArgs} args - Arguments to create many Messages.
     * @example
     * // Create many Messages
     * const messages = await prisma.messages.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends messagesCreateManyArgs>(args?: SelectSubset<T, messagesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Messages and returns the data saved in the database.
     * @param {messagesCreateManyAndReturnArgs} args - Arguments to create many Messages.
     * @example
     * // Create many Messages
     * const messages = await prisma.messages.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Messages and only return the `id`
     * const messagesWithIdOnly = await prisma.messages.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends messagesCreateManyAndReturnArgs>(args?: SelectSubset<T, messagesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$messagesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Messages.
     * @param {messagesDeleteArgs} args - Arguments to delete one Messages.
     * @example
     * // Delete one Messages
     * const Messages = await prisma.messages.delete({
     *   where: {
     *     // ... filter to delete one Messages
     *   }
     * })
     * 
     */
    delete<T extends messagesDeleteArgs>(args: SelectSubset<T, messagesDeleteArgs<ExtArgs>>): Prisma__messagesClient<$Result.GetResult<Prisma.$messagesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Messages.
     * @param {messagesUpdateArgs} args - Arguments to update one Messages.
     * @example
     * // Update one Messages
     * const messages = await prisma.messages.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends messagesUpdateArgs>(args: SelectSubset<T, messagesUpdateArgs<ExtArgs>>): Prisma__messagesClient<$Result.GetResult<Prisma.$messagesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Messages.
     * @param {messagesDeleteManyArgs} args - Arguments to filter Messages to delete.
     * @example
     * // Delete a few Messages
     * const { count } = await prisma.messages.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends messagesDeleteManyArgs>(args?: SelectSubset<T, messagesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {messagesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Messages
     * const messages = await prisma.messages.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends messagesUpdateManyArgs>(args: SelectSubset<T, messagesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Messages and returns the data updated in the database.
     * @param {messagesUpdateManyAndReturnArgs} args - Arguments to update many Messages.
     * @example
     * // Update many Messages
     * const messages = await prisma.messages.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Messages and only return the `id`
     * const messagesWithIdOnly = await prisma.messages.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends messagesUpdateManyAndReturnArgs>(args: SelectSubset<T, messagesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$messagesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Messages.
     * @param {messagesUpsertArgs} args - Arguments to update or create a Messages.
     * @example
     * // Update or create a Messages
     * const messages = await prisma.messages.upsert({
     *   create: {
     *     // ... data to create a Messages
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Messages we want to update
     *   }
     * })
     */
    upsert<T extends messagesUpsertArgs>(args: SelectSubset<T, messagesUpsertArgs<ExtArgs>>): Prisma__messagesClient<$Result.GetResult<Prisma.$messagesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {messagesCountArgs} args - Arguments to filter Messages to count.
     * @example
     * // Count the number of Messages
     * const count = await prisma.messages.count({
     *   where: {
     *     // ... the filter for the Messages we want to count
     *   }
     * })
    **/
    count<T extends messagesCountArgs>(
      args?: Subset<T, messagesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MessagesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MessagesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MessagesAggregateArgs>(args: Subset<T, MessagesAggregateArgs>): Prisma.PrismaPromise<GetMessagesAggregateType<T>>

    /**
     * Group by Messages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {messagesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends messagesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: messagesGroupByArgs['orderBy'] }
        : { orderBy?: messagesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, messagesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMessagesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the messages model
   */
  readonly fields: messagesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for messages.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__messagesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    message_files<T extends messages$message_filesArgs<ExtArgs> = {}>(args?: Subset<T, messages$message_filesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$message_filesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    chat_panels<T extends chat_panelsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, chat_panelsDefaultArgs<ExtArgs>>): Prisma__chat_panelsClient<$Result.GetResult<Prisma.$chat_panelsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    messages<T extends messages$messagesArgs<ExtArgs> = {}>(args?: Subset<T, messages$messagesArgs<ExtArgs>>): Prisma__messagesClient<$Result.GetResult<Prisma.$messagesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    other_messages<T extends messages$other_messagesArgs<ExtArgs> = {}>(args?: Subset<T, messages$other_messagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$messagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    users<T extends messages$usersArgs<ExtArgs> = {}>(args?: Subset<T, messages$usersArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the messages model
   */
  interface messagesFieldRefs {
    readonly id: FieldRef<"messages", 'BigInt'>
    readonly chat_panel_id: FieldRef<"messages", 'BigInt'>
    readonly sender_id: FieldRef<"messages", 'String'>
    readonly reply_to: FieldRef<"messages", 'BigInt'>
    readonly content: FieldRef<"messages", 'String'>
    readonly created_at: FieldRef<"messages", 'DateTime'>
    readonly is_read: FieldRef<"messages", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * messages findUnique
   */
  export type messagesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the messages
     */
    select?: messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the messages
     */
    omit?: messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messagesInclude<ExtArgs> | null
    /**
     * Filter, which messages to fetch.
     */
    where: messagesWhereUniqueInput
  }

  /**
   * messages findUniqueOrThrow
   */
  export type messagesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the messages
     */
    select?: messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the messages
     */
    omit?: messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messagesInclude<ExtArgs> | null
    /**
     * Filter, which messages to fetch.
     */
    where: messagesWhereUniqueInput
  }

  /**
   * messages findFirst
   */
  export type messagesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the messages
     */
    select?: messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the messages
     */
    omit?: messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messagesInclude<ExtArgs> | null
    /**
     * Filter, which messages to fetch.
     */
    where?: messagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of messages to fetch.
     */
    orderBy?: messagesOrderByWithRelationInput | messagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for messages.
     */
    cursor?: messagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of messages.
     */
    distinct?: MessagesScalarFieldEnum | MessagesScalarFieldEnum[]
  }

  /**
   * messages findFirstOrThrow
   */
  export type messagesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the messages
     */
    select?: messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the messages
     */
    omit?: messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messagesInclude<ExtArgs> | null
    /**
     * Filter, which messages to fetch.
     */
    where?: messagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of messages to fetch.
     */
    orderBy?: messagesOrderByWithRelationInput | messagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for messages.
     */
    cursor?: messagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` messages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of messages.
     */
    distinct?: MessagesScalarFieldEnum | MessagesScalarFieldEnum[]
  }

  /**
   * messages findMany
   */
  export type messagesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the messages
     */
    select?: messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the messages
     */
    omit?: messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messagesInclude<ExtArgs> | null
    /**
     * Filter, which messages to fetch.
     */
    where?: messagesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of messages to fetch.
     */
    orderBy?: messagesOrderByWithRelationInput | messagesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing messages.
     */
    cursor?: messagesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` messages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` messages.
     */
    skip?: number
    distinct?: MessagesScalarFieldEnum | MessagesScalarFieldEnum[]
  }

  /**
   * messages create
   */
  export type messagesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the messages
     */
    select?: messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the messages
     */
    omit?: messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messagesInclude<ExtArgs> | null
    /**
     * The data needed to create a messages.
     */
    data: XOR<messagesCreateInput, messagesUncheckedCreateInput>
  }

  /**
   * messages createMany
   */
  export type messagesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many messages.
     */
    data: messagesCreateManyInput | messagesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * messages createManyAndReturn
   */
  export type messagesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the messages
     */
    select?: messagesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the messages
     */
    omit?: messagesOmit<ExtArgs> | null
    /**
     * The data used to create many messages.
     */
    data: messagesCreateManyInput | messagesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messagesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * messages update
   */
  export type messagesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the messages
     */
    select?: messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the messages
     */
    omit?: messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messagesInclude<ExtArgs> | null
    /**
     * The data needed to update a messages.
     */
    data: XOR<messagesUpdateInput, messagesUncheckedUpdateInput>
    /**
     * Choose, which messages to update.
     */
    where: messagesWhereUniqueInput
  }

  /**
   * messages updateMany
   */
  export type messagesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update messages.
     */
    data: XOR<messagesUpdateManyMutationInput, messagesUncheckedUpdateManyInput>
    /**
     * Filter which messages to update
     */
    where?: messagesWhereInput
    /**
     * Limit how many messages to update.
     */
    limit?: number
  }

  /**
   * messages updateManyAndReturn
   */
  export type messagesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the messages
     */
    select?: messagesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the messages
     */
    omit?: messagesOmit<ExtArgs> | null
    /**
     * The data used to update messages.
     */
    data: XOR<messagesUpdateManyMutationInput, messagesUncheckedUpdateManyInput>
    /**
     * Filter which messages to update
     */
    where?: messagesWhereInput
    /**
     * Limit how many messages to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messagesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * messages upsert
   */
  export type messagesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the messages
     */
    select?: messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the messages
     */
    omit?: messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messagesInclude<ExtArgs> | null
    /**
     * The filter to search for the messages to update in case it exists.
     */
    where: messagesWhereUniqueInput
    /**
     * In case the messages found by the `where` argument doesn't exist, create a new messages with this data.
     */
    create: XOR<messagesCreateInput, messagesUncheckedCreateInput>
    /**
     * In case the messages was found with the provided `where` argument, update it with this data.
     */
    update: XOR<messagesUpdateInput, messagesUncheckedUpdateInput>
  }

  /**
   * messages delete
   */
  export type messagesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the messages
     */
    select?: messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the messages
     */
    omit?: messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messagesInclude<ExtArgs> | null
    /**
     * Filter which messages to delete.
     */
    where: messagesWhereUniqueInput
  }

  /**
   * messages deleteMany
   */
  export type messagesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which messages to delete
     */
    where?: messagesWhereInput
    /**
     * Limit how many messages to delete.
     */
    limit?: number
  }

  /**
   * messages.message_files
   */
  export type messages$message_filesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the message_files
     */
    select?: message_filesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the message_files
     */
    omit?: message_filesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: message_filesInclude<ExtArgs> | null
    where?: message_filesWhereInput
    orderBy?: message_filesOrderByWithRelationInput | message_filesOrderByWithRelationInput[]
    cursor?: message_filesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Message_filesScalarFieldEnum | Message_filesScalarFieldEnum[]
  }

  /**
   * messages.messages
   */
  export type messages$messagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the messages
     */
    select?: messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the messages
     */
    omit?: messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messagesInclude<ExtArgs> | null
    where?: messagesWhereInput
  }

  /**
   * messages.other_messages
   */
  export type messages$other_messagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the messages
     */
    select?: messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the messages
     */
    omit?: messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messagesInclude<ExtArgs> | null
    where?: messagesWhereInput
    orderBy?: messagesOrderByWithRelationInput | messagesOrderByWithRelationInput[]
    cursor?: messagesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MessagesScalarFieldEnum | MessagesScalarFieldEnum[]
  }

  /**
   * messages.users
   */
  export type messages$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
  }

  /**
   * messages without action
   */
  export type messagesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the messages
     */
    select?: messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the messages
     */
    omit?: messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messagesInclude<ExtArgs> | null
  }


  /**
   * Model notifications
   */

  export type AggregateNotifications = {
    _count: NotificationsCountAggregateOutputType | null
    _avg: NotificationsAvgAggregateOutputType | null
    _sum: NotificationsSumAggregateOutputType | null
    _min: NotificationsMinAggregateOutputType | null
    _max: NotificationsMaxAggregateOutputType | null
  }

  export type NotificationsAvgAggregateOutputType = {
    id: number | null
    type: number | null
  }

  export type NotificationsSumAggregateOutputType = {
    id: bigint | null
    type: number | null
  }

  export type NotificationsMinAggregateOutputType = {
    id: bigint | null
    user_id: string | null
    title: string | null
    message: string | null
    type: number | null
    is_read: boolean | null
    click_action: string | null
    created_at: Date | null
  }

  export type NotificationsMaxAggregateOutputType = {
    id: bigint | null
    user_id: string | null
    title: string | null
    message: string | null
    type: number | null
    is_read: boolean | null
    click_action: string | null
    created_at: Date | null
  }

  export type NotificationsCountAggregateOutputType = {
    id: number
    user_id: number
    title: number
    message: number
    type: number
    is_read: number
    click_action: number
    created_at: number
    _all: number
  }


  export type NotificationsAvgAggregateInputType = {
    id?: true
    type?: true
  }

  export type NotificationsSumAggregateInputType = {
    id?: true
    type?: true
  }

  export type NotificationsMinAggregateInputType = {
    id?: true
    user_id?: true
    title?: true
    message?: true
    type?: true
    is_read?: true
    click_action?: true
    created_at?: true
  }

  export type NotificationsMaxAggregateInputType = {
    id?: true
    user_id?: true
    title?: true
    message?: true
    type?: true
    is_read?: true
    click_action?: true
    created_at?: true
  }

  export type NotificationsCountAggregateInputType = {
    id?: true
    user_id?: true
    title?: true
    message?: true
    type?: true
    is_read?: true
    click_action?: true
    created_at?: true
    _all?: true
  }

  export type NotificationsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which notifications to aggregate.
     */
    where?: notificationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notifications to fetch.
     */
    orderBy?: notificationsOrderByWithRelationInput | notificationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: notificationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned notifications
    **/
    _count?: true | NotificationsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: NotificationsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: NotificationsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NotificationsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NotificationsMaxAggregateInputType
  }

  export type GetNotificationsAggregateType<T extends NotificationsAggregateArgs> = {
        [P in keyof T & keyof AggregateNotifications]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNotifications[P]>
      : GetScalarType<T[P], AggregateNotifications[P]>
  }




  export type notificationsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: notificationsWhereInput
    orderBy?: notificationsOrderByWithAggregationInput | notificationsOrderByWithAggregationInput[]
    by: NotificationsScalarFieldEnum[] | NotificationsScalarFieldEnum
    having?: notificationsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NotificationsCountAggregateInputType | true
    _avg?: NotificationsAvgAggregateInputType
    _sum?: NotificationsSumAggregateInputType
    _min?: NotificationsMinAggregateInputType
    _max?: NotificationsMaxAggregateInputType
  }

  export type NotificationsGroupByOutputType = {
    id: bigint
    user_id: string
    title: string
    message: string
    type: number
    is_read: boolean
    click_action: string
    created_at: Date
    _count: NotificationsCountAggregateOutputType | null
    _avg: NotificationsAvgAggregateOutputType | null
    _sum: NotificationsSumAggregateOutputType | null
    _min: NotificationsMinAggregateOutputType | null
    _max: NotificationsMaxAggregateOutputType | null
  }

  type GetNotificationsGroupByPayload<T extends notificationsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<NotificationsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NotificationsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NotificationsGroupByOutputType[P]>
            : GetScalarType<T[P], NotificationsGroupByOutputType[P]>
        }
      >
    >


  export type notificationsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    title?: boolean
    message?: boolean
    type?: boolean
    is_read?: boolean
    click_action?: boolean
    created_at?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["notifications"]>

  export type notificationsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    title?: boolean
    message?: boolean
    type?: boolean
    is_read?: boolean
    click_action?: boolean
    created_at?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["notifications"]>

  export type notificationsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    title?: boolean
    message?: boolean
    type?: boolean
    is_read?: boolean
    click_action?: boolean
    created_at?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["notifications"]>

  export type notificationsSelectScalar = {
    id?: boolean
    user_id?: boolean
    title?: boolean
    message?: boolean
    type?: boolean
    is_read?: boolean
    click_action?: boolean
    created_at?: boolean
  }

  export type notificationsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "title" | "message" | "type" | "is_read" | "click_action" | "created_at", ExtArgs["result"]["notifications"]>
  export type notificationsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type notificationsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type notificationsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $notificationsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "notifications"
    objects: {
      users: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      user_id: string
      title: string
      message: string
      type: number
      is_read: boolean
      click_action: string
      created_at: Date
    }, ExtArgs["result"]["notifications"]>
    composites: {}
  }

  type notificationsGetPayload<S extends boolean | null | undefined | notificationsDefaultArgs> = $Result.GetResult<Prisma.$notificationsPayload, S>

  type notificationsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<notificationsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: NotificationsCountAggregateInputType | true
    }

  export interface notificationsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['notifications'], meta: { name: 'notifications' } }
    /**
     * Find zero or one Notifications that matches the filter.
     * @param {notificationsFindUniqueArgs} args - Arguments to find a Notifications
     * @example
     * // Get one Notifications
     * const notifications = await prisma.notifications.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends notificationsFindUniqueArgs>(args: SelectSubset<T, notificationsFindUniqueArgs<ExtArgs>>): Prisma__notificationsClient<$Result.GetResult<Prisma.$notificationsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Notifications that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {notificationsFindUniqueOrThrowArgs} args - Arguments to find a Notifications
     * @example
     * // Get one Notifications
     * const notifications = await prisma.notifications.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends notificationsFindUniqueOrThrowArgs>(args: SelectSubset<T, notificationsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__notificationsClient<$Result.GetResult<Prisma.$notificationsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Notifications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationsFindFirstArgs} args - Arguments to find a Notifications
     * @example
     * // Get one Notifications
     * const notifications = await prisma.notifications.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends notificationsFindFirstArgs>(args?: SelectSubset<T, notificationsFindFirstArgs<ExtArgs>>): Prisma__notificationsClient<$Result.GetResult<Prisma.$notificationsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Notifications that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationsFindFirstOrThrowArgs} args - Arguments to find a Notifications
     * @example
     * // Get one Notifications
     * const notifications = await prisma.notifications.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends notificationsFindFirstOrThrowArgs>(args?: SelectSubset<T, notificationsFindFirstOrThrowArgs<ExtArgs>>): Prisma__notificationsClient<$Result.GetResult<Prisma.$notificationsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Notifications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Notifications
     * const notifications = await prisma.notifications.findMany()
     * 
     * // Get first 10 Notifications
     * const notifications = await prisma.notifications.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const notificationsWithIdOnly = await prisma.notifications.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends notificationsFindManyArgs>(args?: SelectSubset<T, notificationsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notificationsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Notifications.
     * @param {notificationsCreateArgs} args - Arguments to create a Notifications.
     * @example
     * // Create one Notifications
     * const Notifications = await prisma.notifications.create({
     *   data: {
     *     // ... data to create a Notifications
     *   }
     * })
     * 
     */
    create<T extends notificationsCreateArgs>(args: SelectSubset<T, notificationsCreateArgs<ExtArgs>>): Prisma__notificationsClient<$Result.GetResult<Prisma.$notificationsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Notifications.
     * @param {notificationsCreateManyArgs} args - Arguments to create many Notifications.
     * @example
     * // Create many Notifications
     * const notifications = await prisma.notifications.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends notificationsCreateManyArgs>(args?: SelectSubset<T, notificationsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Notifications and returns the data saved in the database.
     * @param {notificationsCreateManyAndReturnArgs} args - Arguments to create many Notifications.
     * @example
     * // Create many Notifications
     * const notifications = await prisma.notifications.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Notifications and only return the `id`
     * const notificationsWithIdOnly = await prisma.notifications.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends notificationsCreateManyAndReturnArgs>(args?: SelectSubset<T, notificationsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notificationsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Notifications.
     * @param {notificationsDeleteArgs} args - Arguments to delete one Notifications.
     * @example
     * // Delete one Notifications
     * const Notifications = await prisma.notifications.delete({
     *   where: {
     *     // ... filter to delete one Notifications
     *   }
     * })
     * 
     */
    delete<T extends notificationsDeleteArgs>(args: SelectSubset<T, notificationsDeleteArgs<ExtArgs>>): Prisma__notificationsClient<$Result.GetResult<Prisma.$notificationsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Notifications.
     * @param {notificationsUpdateArgs} args - Arguments to update one Notifications.
     * @example
     * // Update one Notifications
     * const notifications = await prisma.notifications.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends notificationsUpdateArgs>(args: SelectSubset<T, notificationsUpdateArgs<ExtArgs>>): Prisma__notificationsClient<$Result.GetResult<Prisma.$notificationsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Notifications.
     * @param {notificationsDeleteManyArgs} args - Arguments to filter Notifications to delete.
     * @example
     * // Delete a few Notifications
     * const { count } = await prisma.notifications.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends notificationsDeleteManyArgs>(args?: SelectSubset<T, notificationsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Notifications
     * const notifications = await prisma.notifications.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends notificationsUpdateManyArgs>(args: SelectSubset<T, notificationsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Notifications and returns the data updated in the database.
     * @param {notificationsUpdateManyAndReturnArgs} args - Arguments to update many Notifications.
     * @example
     * // Update many Notifications
     * const notifications = await prisma.notifications.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Notifications and only return the `id`
     * const notificationsWithIdOnly = await prisma.notifications.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends notificationsUpdateManyAndReturnArgs>(args: SelectSubset<T, notificationsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notificationsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Notifications.
     * @param {notificationsUpsertArgs} args - Arguments to update or create a Notifications.
     * @example
     * // Update or create a Notifications
     * const notifications = await prisma.notifications.upsert({
     *   create: {
     *     // ... data to create a Notifications
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Notifications we want to update
     *   }
     * })
     */
    upsert<T extends notificationsUpsertArgs>(args: SelectSubset<T, notificationsUpsertArgs<ExtArgs>>): Prisma__notificationsClient<$Result.GetResult<Prisma.$notificationsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationsCountArgs} args - Arguments to filter Notifications to count.
     * @example
     * // Count the number of Notifications
     * const count = await prisma.notifications.count({
     *   where: {
     *     // ... the filter for the Notifications we want to count
     *   }
     * })
    **/
    count<T extends notificationsCountArgs>(
      args?: Subset<T, notificationsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NotificationsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NotificationsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NotificationsAggregateArgs>(args: Subset<T, NotificationsAggregateArgs>): Prisma.PrismaPromise<GetNotificationsAggregateType<T>>

    /**
     * Group by Notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {notificationsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends notificationsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: notificationsGroupByArgs['orderBy'] }
        : { orderBy?: notificationsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, notificationsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNotificationsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the notifications model
   */
  readonly fields: notificationsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for notifications.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__notificationsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the notifications model
   */
  interface notificationsFieldRefs {
    readonly id: FieldRef<"notifications", 'BigInt'>
    readonly user_id: FieldRef<"notifications", 'String'>
    readonly title: FieldRef<"notifications", 'String'>
    readonly message: FieldRef<"notifications", 'String'>
    readonly type: FieldRef<"notifications", 'Int'>
    readonly is_read: FieldRef<"notifications", 'Boolean'>
    readonly click_action: FieldRef<"notifications", 'String'>
    readonly created_at: FieldRef<"notifications", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * notifications findUnique
   */
  export type notificationsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notifications
     */
    select?: notificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notifications
     */
    omit?: notificationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationsInclude<ExtArgs> | null
    /**
     * Filter, which notifications to fetch.
     */
    where: notificationsWhereUniqueInput
  }

  /**
   * notifications findUniqueOrThrow
   */
  export type notificationsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notifications
     */
    select?: notificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notifications
     */
    omit?: notificationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationsInclude<ExtArgs> | null
    /**
     * Filter, which notifications to fetch.
     */
    where: notificationsWhereUniqueInput
  }

  /**
   * notifications findFirst
   */
  export type notificationsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notifications
     */
    select?: notificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notifications
     */
    omit?: notificationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationsInclude<ExtArgs> | null
    /**
     * Filter, which notifications to fetch.
     */
    where?: notificationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notifications to fetch.
     */
    orderBy?: notificationsOrderByWithRelationInput | notificationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for notifications.
     */
    cursor?: notificationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of notifications.
     */
    distinct?: NotificationsScalarFieldEnum | NotificationsScalarFieldEnum[]
  }

  /**
   * notifications findFirstOrThrow
   */
  export type notificationsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notifications
     */
    select?: notificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notifications
     */
    omit?: notificationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationsInclude<ExtArgs> | null
    /**
     * Filter, which notifications to fetch.
     */
    where?: notificationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notifications to fetch.
     */
    orderBy?: notificationsOrderByWithRelationInput | notificationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for notifications.
     */
    cursor?: notificationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of notifications.
     */
    distinct?: NotificationsScalarFieldEnum | NotificationsScalarFieldEnum[]
  }

  /**
   * notifications findMany
   */
  export type notificationsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notifications
     */
    select?: notificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notifications
     */
    omit?: notificationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationsInclude<ExtArgs> | null
    /**
     * Filter, which notifications to fetch.
     */
    where?: notificationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of notifications to fetch.
     */
    orderBy?: notificationsOrderByWithRelationInput | notificationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing notifications.
     */
    cursor?: notificationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` notifications.
     */
    skip?: number
    distinct?: NotificationsScalarFieldEnum | NotificationsScalarFieldEnum[]
  }

  /**
   * notifications create
   */
  export type notificationsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notifications
     */
    select?: notificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notifications
     */
    omit?: notificationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationsInclude<ExtArgs> | null
    /**
     * The data needed to create a notifications.
     */
    data: XOR<notificationsCreateInput, notificationsUncheckedCreateInput>
  }

  /**
   * notifications createMany
   */
  export type notificationsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many notifications.
     */
    data: notificationsCreateManyInput | notificationsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * notifications createManyAndReturn
   */
  export type notificationsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notifications
     */
    select?: notificationsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the notifications
     */
    omit?: notificationsOmit<ExtArgs> | null
    /**
     * The data used to create many notifications.
     */
    data: notificationsCreateManyInput | notificationsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * notifications update
   */
  export type notificationsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notifications
     */
    select?: notificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notifications
     */
    omit?: notificationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationsInclude<ExtArgs> | null
    /**
     * The data needed to update a notifications.
     */
    data: XOR<notificationsUpdateInput, notificationsUncheckedUpdateInput>
    /**
     * Choose, which notifications to update.
     */
    where: notificationsWhereUniqueInput
  }

  /**
   * notifications updateMany
   */
  export type notificationsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update notifications.
     */
    data: XOR<notificationsUpdateManyMutationInput, notificationsUncheckedUpdateManyInput>
    /**
     * Filter which notifications to update
     */
    where?: notificationsWhereInput
    /**
     * Limit how many notifications to update.
     */
    limit?: number
  }

  /**
   * notifications updateManyAndReturn
   */
  export type notificationsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notifications
     */
    select?: notificationsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the notifications
     */
    omit?: notificationsOmit<ExtArgs> | null
    /**
     * The data used to update notifications.
     */
    data: XOR<notificationsUpdateManyMutationInput, notificationsUncheckedUpdateManyInput>
    /**
     * Filter which notifications to update
     */
    where?: notificationsWhereInput
    /**
     * Limit how many notifications to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * notifications upsert
   */
  export type notificationsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notifications
     */
    select?: notificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notifications
     */
    omit?: notificationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationsInclude<ExtArgs> | null
    /**
     * The filter to search for the notifications to update in case it exists.
     */
    where: notificationsWhereUniqueInput
    /**
     * In case the notifications found by the `where` argument doesn't exist, create a new notifications with this data.
     */
    create: XOR<notificationsCreateInput, notificationsUncheckedCreateInput>
    /**
     * In case the notifications was found with the provided `where` argument, update it with this data.
     */
    update: XOR<notificationsUpdateInput, notificationsUncheckedUpdateInput>
  }

  /**
   * notifications delete
   */
  export type notificationsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notifications
     */
    select?: notificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notifications
     */
    omit?: notificationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationsInclude<ExtArgs> | null
    /**
     * Filter which notifications to delete.
     */
    where: notificationsWhereUniqueInput
  }

  /**
   * notifications deleteMany
   */
  export type notificationsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which notifications to delete
     */
    where?: notificationsWhereInput
    /**
     * Limit how many notifications to delete.
     */
    limit?: number
  }

  /**
   * notifications without action
   */
  export type notificationsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notifications
     */
    select?: notificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notifications
     */
    omit?: notificationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationsInclude<ExtArgs> | null
  }


  /**
   * Model order_details
   */

  export type AggregateOrder_details = {
    _count: Order_detailsCountAggregateOutputType | null
    _avg: Order_detailsAvgAggregateOutputType | null
    _sum: Order_detailsSumAggregateOutputType | null
    _min: Order_detailsMinAggregateOutputType | null
    _max: Order_detailsMaxAggregateOutputType | null
  }

  export type Order_detailsAvgAggregateOutputType = {
    id: number | null
    order_id: number | null
    variant_product_id: number | null
    quantity: number | null
    unit_price: Decimal | null
    unit_price_iva: Decimal | null
    subtotal: Decimal | null
    iva: Decimal | null
    discount_applied: Decimal | null
  }

  export type Order_detailsSumAggregateOutputType = {
    id: bigint | null
    order_id: bigint | null
    variant_product_id: bigint | null
    quantity: number | null
    unit_price: Decimal | null
    unit_price_iva: Decimal | null
    subtotal: Decimal | null
    iva: Decimal | null
    discount_applied: Decimal | null
  }

  export type Order_detailsMinAggregateOutputType = {
    id: bigint | null
    order_id: bigint | null
    product_code: string | null
    variant_product_id: bigint | null
    quantity: number | null
    unit_price: Decimal | null
    unit_price_iva: Decimal | null
    subtotal: Decimal | null
    iva: Decimal | null
    discount_applied: Decimal | null
    created_at: Date | null
  }

  export type Order_detailsMaxAggregateOutputType = {
    id: bigint | null
    order_id: bigint | null
    product_code: string | null
    variant_product_id: bigint | null
    quantity: number | null
    unit_price: Decimal | null
    unit_price_iva: Decimal | null
    subtotal: Decimal | null
    iva: Decimal | null
    discount_applied: Decimal | null
    created_at: Date | null
  }

  export type Order_detailsCountAggregateOutputType = {
    id: number
    order_id: number
    product_code: number
    variant_product_id: number
    quantity: number
    unit_price: number
    unit_price_iva: number
    subtotal: number
    iva: number
    discount_applied: number
    attributes: number
    created_at: number
    _all: number
  }


  export type Order_detailsAvgAggregateInputType = {
    id?: true
    order_id?: true
    variant_product_id?: true
    quantity?: true
    unit_price?: true
    unit_price_iva?: true
    subtotal?: true
    iva?: true
    discount_applied?: true
  }

  export type Order_detailsSumAggregateInputType = {
    id?: true
    order_id?: true
    variant_product_id?: true
    quantity?: true
    unit_price?: true
    unit_price_iva?: true
    subtotal?: true
    iva?: true
    discount_applied?: true
  }

  export type Order_detailsMinAggregateInputType = {
    id?: true
    order_id?: true
    product_code?: true
    variant_product_id?: true
    quantity?: true
    unit_price?: true
    unit_price_iva?: true
    subtotal?: true
    iva?: true
    discount_applied?: true
    created_at?: true
  }

  export type Order_detailsMaxAggregateInputType = {
    id?: true
    order_id?: true
    product_code?: true
    variant_product_id?: true
    quantity?: true
    unit_price?: true
    unit_price_iva?: true
    subtotal?: true
    iva?: true
    discount_applied?: true
    created_at?: true
  }

  export type Order_detailsCountAggregateInputType = {
    id?: true
    order_id?: true
    product_code?: true
    variant_product_id?: true
    quantity?: true
    unit_price?: true
    unit_price_iva?: true
    subtotal?: true
    iva?: true
    discount_applied?: true
    attributes?: true
    created_at?: true
    _all?: true
  }

  export type Order_detailsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which order_details to aggregate.
     */
    where?: order_detailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of order_details to fetch.
     */
    orderBy?: order_detailsOrderByWithRelationInput | order_detailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: order_detailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` order_details from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` order_details.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned order_details
    **/
    _count?: true | Order_detailsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Order_detailsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Order_detailsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Order_detailsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Order_detailsMaxAggregateInputType
  }

  export type GetOrder_detailsAggregateType<T extends Order_detailsAggregateArgs> = {
        [P in keyof T & keyof AggregateOrder_details]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrder_details[P]>
      : GetScalarType<T[P], AggregateOrder_details[P]>
  }




  export type order_detailsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: order_detailsWhereInput
    orderBy?: order_detailsOrderByWithAggregationInput | order_detailsOrderByWithAggregationInput[]
    by: Order_detailsScalarFieldEnum[] | Order_detailsScalarFieldEnum
    having?: order_detailsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Order_detailsCountAggregateInputType | true
    _avg?: Order_detailsAvgAggregateInputType
    _sum?: Order_detailsSumAggregateInputType
    _min?: Order_detailsMinAggregateInputType
    _max?: Order_detailsMaxAggregateInputType
  }

  export type Order_detailsGroupByOutputType = {
    id: bigint
    order_id: bigint
    product_code: string
    variant_product_id: bigint
    quantity: number
    unit_price: Decimal
    unit_price_iva: Decimal
    subtotal: Decimal
    iva: Decimal
    discount_applied: Decimal
    attributes: JsonValue
    created_at: Date
    _count: Order_detailsCountAggregateOutputType | null
    _avg: Order_detailsAvgAggregateOutputType | null
    _sum: Order_detailsSumAggregateOutputType | null
    _min: Order_detailsMinAggregateOutputType | null
    _max: Order_detailsMaxAggregateOutputType | null
  }

  type GetOrder_detailsGroupByPayload<T extends order_detailsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Order_detailsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Order_detailsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Order_detailsGroupByOutputType[P]>
            : GetScalarType<T[P], Order_detailsGroupByOutputType[P]>
        }
      >
    >


  export type order_detailsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    order_id?: boolean
    product_code?: boolean
    variant_product_id?: boolean
    quantity?: boolean
    unit_price?: boolean
    unit_price_iva?: boolean
    subtotal?: boolean
    iva?: boolean
    discount_applied?: boolean
    attributes?: boolean
    created_at?: boolean
    orders?: boolean | ordersDefaultArgs<ExtArgs>
    variant_products?: boolean | variant_productsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["order_details"]>

  export type order_detailsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    order_id?: boolean
    product_code?: boolean
    variant_product_id?: boolean
    quantity?: boolean
    unit_price?: boolean
    unit_price_iva?: boolean
    subtotal?: boolean
    iva?: boolean
    discount_applied?: boolean
    attributes?: boolean
    created_at?: boolean
    orders?: boolean | ordersDefaultArgs<ExtArgs>
    variant_products?: boolean | variant_productsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["order_details"]>

  export type order_detailsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    order_id?: boolean
    product_code?: boolean
    variant_product_id?: boolean
    quantity?: boolean
    unit_price?: boolean
    unit_price_iva?: boolean
    subtotal?: boolean
    iva?: boolean
    discount_applied?: boolean
    attributes?: boolean
    created_at?: boolean
    orders?: boolean | ordersDefaultArgs<ExtArgs>
    variant_products?: boolean | variant_productsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["order_details"]>

  export type order_detailsSelectScalar = {
    id?: boolean
    order_id?: boolean
    product_code?: boolean
    variant_product_id?: boolean
    quantity?: boolean
    unit_price?: boolean
    unit_price_iva?: boolean
    subtotal?: boolean
    iva?: boolean
    discount_applied?: boolean
    attributes?: boolean
    created_at?: boolean
  }

  export type order_detailsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "order_id" | "product_code" | "variant_product_id" | "quantity" | "unit_price" | "unit_price_iva" | "subtotal" | "iva" | "discount_applied" | "attributes" | "created_at", ExtArgs["result"]["order_details"]>
  export type order_detailsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orders?: boolean | ordersDefaultArgs<ExtArgs>
    variant_products?: boolean | variant_productsDefaultArgs<ExtArgs>
  }
  export type order_detailsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orders?: boolean | ordersDefaultArgs<ExtArgs>
    variant_products?: boolean | variant_productsDefaultArgs<ExtArgs>
  }
  export type order_detailsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orders?: boolean | ordersDefaultArgs<ExtArgs>
    variant_products?: boolean | variant_productsDefaultArgs<ExtArgs>
  }

  export type $order_detailsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "order_details"
    objects: {
      orders: Prisma.$ordersPayload<ExtArgs>
      variant_products: Prisma.$variant_productsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      order_id: bigint
      product_code: string
      variant_product_id: bigint
      quantity: number
      unit_price: Prisma.Decimal
      unit_price_iva: Prisma.Decimal
      subtotal: Prisma.Decimal
      iva: Prisma.Decimal
      discount_applied: Prisma.Decimal
      attributes: Prisma.JsonValue
      created_at: Date
    }, ExtArgs["result"]["order_details"]>
    composites: {}
  }

  type order_detailsGetPayload<S extends boolean | null | undefined | order_detailsDefaultArgs> = $Result.GetResult<Prisma.$order_detailsPayload, S>

  type order_detailsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<order_detailsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Order_detailsCountAggregateInputType | true
    }

  export interface order_detailsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['order_details'], meta: { name: 'order_details' } }
    /**
     * Find zero or one Order_details that matches the filter.
     * @param {order_detailsFindUniqueArgs} args - Arguments to find a Order_details
     * @example
     * // Get one Order_details
     * const order_details = await prisma.order_details.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends order_detailsFindUniqueArgs>(args: SelectSubset<T, order_detailsFindUniqueArgs<ExtArgs>>): Prisma__order_detailsClient<$Result.GetResult<Prisma.$order_detailsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Order_details that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {order_detailsFindUniqueOrThrowArgs} args - Arguments to find a Order_details
     * @example
     * // Get one Order_details
     * const order_details = await prisma.order_details.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends order_detailsFindUniqueOrThrowArgs>(args: SelectSubset<T, order_detailsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__order_detailsClient<$Result.GetResult<Prisma.$order_detailsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Order_details that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {order_detailsFindFirstArgs} args - Arguments to find a Order_details
     * @example
     * // Get one Order_details
     * const order_details = await prisma.order_details.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends order_detailsFindFirstArgs>(args?: SelectSubset<T, order_detailsFindFirstArgs<ExtArgs>>): Prisma__order_detailsClient<$Result.GetResult<Prisma.$order_detailsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Order_details that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {order_detailsFindFirstOrThrowArgs} args - Arguments to find a Order_details
     * @example
     * // Get one Order_details
     * const order_details = await prisma.order_details.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends order_detailsFindFirstOrThrowArgs>(args?: SelectSubset<T, order_detailsFindFirstOrThrowArgs<ExtArgs>>): Prisma__order_detailsClient<$Result.GetResult<Prisma.$order_detailsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Order_details that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {order_detailsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Order_details
     * const order_details = await prisma.order_details.findMany()
     * 
     * // Get first 10 Order_details
     * const order_details = await prisma.order_details.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const order_detailsWithIdOnly = await prisma.order_details.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends order_detailsFindManyArgs>(args?: SelectSubset<T, order_detailsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$order_detailsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Order_details.
     * @param {order_detailsCreateArgs} args - Arguments to create a Order_details.
     * @example
     * // Create one Order_details
     * const Order_details = await prisma.order_details.create({
     *   data: {
     *     // ... data to create a Order_details
     *   }
     * })
     * 
     */
    create<T extends order_detailsCreateArgs>(args: SelectSubset<T, order_detailsCreateArgs<ExtArgs>>): Prisma__order_detailsClient<$Result.GetResult<Prisma.$order_detailsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Order_details.
     * @param {order_detailsCreateManyArgs} args - Arguments to create many Order_details.
     * @example
     * // Create many Order_details
     * const order_details = await prisma.order_details.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends order_detailsCreateManyArgs>(args?: SelectSubset<T, order_detailsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Order_details and returns the data saved in the database.
     * @param {order_detailsCreateManyAndReturnArgs} args - Arguments to create many Order_details.
     * @example
     * // Create many Order_details
     * const order_details = await prisma.order_details.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Order_details and only return the `id`
     * const order_detailsWithIdOnly = await prisma.order_details.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends order_detailsCreateManyAndReturnArgs>(args?: SelectSubset<T, order_detailsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$order_detailsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Order_details.
     * @param {order_detailsDeleteArgs} args - Arguments to delete one Order_details.
     * @example
     * // Delete one Order_details
     * const Order_details = await prisma.order_details.delete({
     *   where: {
     *     // ... filter to delete one Order_details
     *   }
     * })
     * 
     */
    delete<T extends order_detailsDeleteArgs>(args: SelectSubset<T, order_detailsDeleteArgs<ExtArgs>>): Prisma__order_detailsClient<$Result.GetResult<Prisma.$order_detailsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Order_details.
     * @param {order_detailsUpdateArgs} args - Arguments to update one Order_details.
     * @example
     * // Update one Order_details
     * const order_details = await prisma.order_details.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends order_detailsUpdateArgs>(args: SelectSubset<T, order_detailsUpdateArgs<ExtArgs>>): Prisma__order_detailsClient<$Result.GetResult<Prisma.$order_detailsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Order_details.
     * @param {order_detailsDeleteManyArgs} args - Arguments to filter Order_details to delete.
     * @example
     * // Delete a few Order_details
     * const { count } = await prisma.order_details.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends order_detailsDeleteManyArgs>(args?: SelectSubset<T, order_detailsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Order_details.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {order_detailsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Order_details
     * const order_details = await prisma.order_details.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends order_detailsUpdateManyArgs>(args: SelectSubset<T, order_detailsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Order_details and returns the data updated in the database.
     * @param {order_detailsUpdateManyAndReturnArgs} args - Arguments to update many Order_details.
     * @example
     * // Update many Order_details
     * const order_details = await prisma.order_details.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Order_details and only return the `id`
     * const order_detailsWithIdOnly = await prisma.order_details.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends order_detailsUpdateManyAndReturnArgs>(args: SelectSubset<T, order_detailsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$order_detailsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Order_details.
     * @param {order_detailsUpsertArgs} args - Arguments to update or create a Order_details.
     * @example
     * // Update or create a Order_details
     * const order_details = await prisma.order_details.upsert({
     *   create: {
     *     // ... data to create a Order_details
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Order_details we want to update
     *   }
     * })
     */
    upsert<T extends order_detailsUpsertArgs>(args: SelectSubset<T, order_detailsUpsertArgs<ExtArgs>>): Prisma__order_detailsClient<$Result.GetResult<Prisma.$order_detailsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Order_details.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {order_detailsCountArgs} args - Arguments to filter Order_details to count.
     * @example
     * // Count the number of Order_details
     * const count = await prisma.order_details.count({
     *   where: {
     *     // ... the filter for the Order_details we want to count
     *   }
     * })
    **/
    count<T extends order_detailsCountArgs>(
      args?: Subset<T, order_detailsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Order_detailsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Order_details.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Order_detailsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Order_detailsAggregateArgs>(args: Subset<T, Order_detailsAggregateArgs>): Prisma.PrismaPromise<GetOrder_detailsAggregateType<T>>

    /**
     * Group by Order_details.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {order_detailsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends order_detailsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: order_detailsGroupByArgs['orderBy'] }
        : { orderBy?: order_detailsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, order_detailsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrder_detailsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the order_details model
   */
  readonly fields: order_detailsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for order_details.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__order_detailsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    orders<T extends ordersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ordersDefaultArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    variant_products<T extends variant_productsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, variant_productsDefaultArgs<ExtArgs>>): Prisma__variant_productsClient<$Result.GetResult<Prisma.$variant_productsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the order_details model
   */
  interface order_detailsFieldRefs {
    readonly id: FieldRef<"order_details", 'BigInt'>
    readonly order_id: FieldRef<"order_details", 'BigInt'>
    readonly product_code: FieldRef<"order_details", 'String'>
    readonly variant_product_id: FieldRef<"order_details", 'BigInt'>
    readonly quantity: FieldRef<"order_details", 'Int'>
    readonly unit_price: FieldRef<"order_details", 'Decimal'>
    readonly unit_price_iva: FieldRef<"order_details", 'Decimal'>
    readonly subtotal: FieldRef<"order_details", 'Decimal'>
    readonly iva: FieldRef<"order_details", 'Decimal'>
    readonly discount_applied: FieldRef<"order_details", 'Decimal'>
    readonly attributes: FieldRef<"order_details", 'Json'>
    readonly created_at: FieldRef<"order_details", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * order_details findUnique
   */
  export type order_detailsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_details
     */
    select?: order_detailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_details
     */
    omit?: order_detailsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_detailsInclude<ExtArgs> | null
    /**
     * Filter, which order_details to fetch.
     */
    where: order_detailsWhereUniqueInput
  }

  /**
   * order_details findUniqueOrThrow
   */
  export type order_detailsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_details
     */
    select?: order_detailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_details
     */
    omit?: order_detailsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_detailsInclude<ExtArgs> | null
    /**
     * Filter, which order_details to fetch.
     */
    where: order_detailsWhereUniqueInput
  }

  /**
   * order_details findFirst
   */
  export type order_detailsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_details
     */
    select?: order_detailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_details
     */
    omit?: order_detailsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_detailsInclude<ExtArgs> | null
    /**
     * Filter, which order_details to fetch.
     */
    where?: order_detailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of order_details to fetch.
     */
    orderBy?: order_detailsOrderByWithRelationInput | order_detailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for order_details.
     */
    cursor?: order_detailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` order_details from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` order_details.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of order_details.
     */
    distinct?: Order_detailsScalarFieldEnum | Order_detailsScalarFieldEnum[]
  }

  /**
   * order_details findFirstOrThrow
   */
  export type order_detailsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_details
     */
    select?: order_detailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_details
     */
    omit?: order_detailsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_detailsInclude<ExtArgs> | null
    /**
     * Filter, which order_details to fetch.
     */
    where?: order_detailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of order_details to fetch.
     */
    orderBy?: order_detailsOrderByWithRelationInput | order_detailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for order_details.
     */
    cursor?: order_detailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` order_details from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` order_details.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of order_details.
     */
    distinct?: Order_detailsScalarFieldEnum | Order_detailsScalarFieldEnum[]
  }

  /**
   * order_details findMany
   */
  export type order_detailsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_details
     */
    select?: order_detailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_details
     */
    omit?: order_detailsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_detailsInclude<ExtArgs> | null
    /**
     * Filter, which order_details to fetch.
     */
    where?: order_detailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of order_details to fetch.
     */
    orderBy?: order_detailsOrderByWithRelationInput | order_detailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing order_details.
     */
    cursor?: order_detailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` order_details from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` order_details.
     */
    skip?: number
    distinct?: Order_detailsScalarFieldEnum | Order_detailsScalarFieldEnum[]
  }

  /**
   * order_details create
   */
  export type order_detailsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_details
     */
    select?: order_detailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_details
     */
    omit?: order_detailsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_detailsInclude<ExtArgs> | null
    /**
     * The data needed to create a order_details.
     */
    data: XOR<order_detailsCreateInput, order_detailsUncheckedCreateInput>
  }

  /**
   * order_details createMany
   */
  export type order_detailsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many order_details.
     */
    data: order_detailsCreateManyInput | order_detailsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * order_details createManyAndReturn
   */
  export type order_detailsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_details
     */
    select?: order_detailsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the order_details
     */
    omit?: order_detailsOmit<ExtArgs> | null
    /**
     * The data used to create many order_details.
     */
    data: order_detailsCreateManyInput | order_detailsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_detailsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * order_details update
   */
  export type order_detailsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_details
     */
    select?: order_detailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_details
     */
    omit?: order_detailsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_detailsInclude<ExtArgs> | null
    /**
     * The data needed to update a order_details.
     */
    data: XOR<order_detailsUpdateInput, order_detailsUncheckedUpdateInput>
    /**
     * Choose, which order_details to update.
     */
    where: order_detailsWhereUniqueInput
  }

  /**
   * order_details updateMany
   */
  export type order_detailsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update order_details.
     */
    data: XOR<order_detailsUpdateManyMutationInput, order_detailsUncheckedUpdateManyInput>
    /**
     * Filter which order_details to update
     */
    where?: order_detailsWhereInput
    /**
     * Limit how many order_details to update.
     */
    limit?: number
  }

  /**
   * order_details updateManyAndReturn
   */
  export type order_detailsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_details
     */
    select?: order_detailsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the order_details
     */
    omit?: order_detailsOmit<ExtArgs> | null
    /**
     * The data used to update order_details.
     */
    data: XOR<order_detailsUpdateManyMutationInput, order_detailsUncheckedUpdateManyInput>
    /**
     * Filter which order_details to update
     */
    where?: order_detailsWhereInput
    /**
     * Limit how many order_details to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_detailsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * order_details upsert
   */
  export type order_detailsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_details
     */
    select?: order_detailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_details
     */
    omit?: order_detailsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_detailsInclude<ExtArgs> | null
    /**
     * The filter to search for the order_details to update in case it exists.
     */
    where: order_detailsWhereUniqueInput
    /**
     * In case the order_details found by the `where` argument doesn't exist, create a new order_details with this data.
     */
    create: XOR<order_detailsCreateInput, order_detailsUncheckedCreateInput>
    /**
     * In case the order_details was found with the provided `where` argument, update it with this data.
     */
    update: XOR<order_detailsUpdateInput, order_detailsUncheckedUpdateInput>
  }

  /**
   * order_details delete
   */
  export type order_detailsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_details
     */
    select?: order_detailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_details
     */
    omit?: order_detailsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_detailsInclude<ExtArgs> | null
    /**
     * Filter which order_details to delete.
     */
    where: order_detailsWhereUniqueInput
  }

  /**
   * order_details deleteMany
   */
  export type order_detailsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which order_details to delete
     */
    where?: order_detailsWhereInput
    /**
     * Limit how many order_details to delete.
     */
    limit?: number
  }

  /**
   * order_details without action
   */
  export type order_detailsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_details
     */
    select?: order_detailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_details
     */
    omit?: order_detailsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_detailsInclude<ExtArgs> | null
  }


  /**
   * Model orders
   */

  export type AggregateOrders = {
    _count: OrdersCountAggregateOutputType | null
    _avg: OrdersAvgAggregateOutputType | null
    _sum: OrdersSumAggregateOutputType | null
    _min: OrdersMinAggregateOutputType | null
    _max: OrdersMaxAggregateOutputType | null
  }

  export type OrdersAvgAggregateOutputType = {
    id: number | null
    status: number | null
    payment_method: number | null
    shipping_address: number | null
    discount_total: Decimal | null
    subtotal: Decimal | null
    total: Decimal | null
    iva_total: Decimal | null
  }

  export type OrdersSumAggregateOutputType = {
    id: bigint | null
    status: number | null
    payment_method: number | null
    shipping_address: bigint | null
    discount_total: Decimal | null
    subtotal: Decimal | null
    total: Decimal | null
    iva_total: Decimal | null
  }

  export type OrdersMinAggregateOutputType = {
    id: bigint | null
    retailer_id: string | null
    wholesaler_id: string | null
    status: number | null
    payment_method: number | null
    shipping_address: bigint | null
    notes: string | null
    discount_total: Decimal | null
    subtotal: Decimal | null
    total: Decimal | null
    iva_total: Decimal | null
    estimated_date: Date | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type OrdersMaxAggregateOutputType = {
    id: bigint | null
    retailer_id: string | null
    wholesaler_id: string | null
    status: number | null
    payment_method: number | null
    shipping_address: bigint | null
    notes: string | null
    discount_total: Decimal | null
    subtotal: Decimal | null
    total: Decimal | null
    iva_total: Decimal | null
    estimated_date: Date | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type OrdersCountAggregateOutputType = {
    id: number
    retailer_id: number
    wholesaler_id: number
    status: number
    payment_method: number
    shipping_address: number
    notes: number
    discount_total: number
    subtotal: number
    total: number
    iva_total: number
    discount_log: number
    estimated_date: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type OrdersAvgAggregateInputType = {
    id?: true
    status?: true
    payment_method?: true
    shipping_address?: true
    discount_total?: true
    subtotal?: true
    total?: true
    iva_total?: true
  }

  export type OrdersSumAggregateInputType = {
    id?: true
    status?: true
    payment_method?: true
    shipping_address?: true
    discount_total?: true
    subtotal?: true
    total?: true
    iva_total?: true
  }

  export type OrdersMinAggregateInputType = {
    id?: true
    retailer_id?: true
    wholesaler_id?: true
    status?: true
    payment_method?: true
    shipping_address?: true
    notes?: true
    discount_total?: true
    subtotal?: true
    total?: true
    iva_total?: true
    estimated_date?: true
    created_at?: true
    updated_at?: true
  }

  export type OrdersMaxAggregateInputType = {
    id?: true
    retailer_id?: true
    wholesaler_id?: true
    status?: true
    payment_method?: true
    shipping_address?: true
    notes?: true
    discount_total?: true
    subtotal?: true
    total?: true
    iva_total?: true
    estimated_date?: true
    created_at?: true
    updated_at?: true
  }

  export type OrdersCountAggregateInputType = {
    id?: true
    retailer_id?: true
    wholesaler_id?: true
    status?: true
    payment_method?: true
    shipping_address?: true
    notes?: true
    discount_total?: true
    subtotal?: true
    total?: true
    iva_total?: true
    discount_log?: true
    estimated_date?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type OrdersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which orders to aggregate.
     */
    where?: ordersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of orders to fetch.
     */
    orderBy?: ordersOrderByWithRelationInput | ordersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ordersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned orders
    **/
    _count?: true | OrdersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OrdersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OrdersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrdersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrdersMaxAggregateInputType
  }

  export type GetOrdersAggregateType<T extends OrdersAggregateArgs> = {
        [P in keyof T & keyof AggregateOrders]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrders[P]>
      : GetScalarType<T[P], AggregateOrders[P]>
  }




  export type ordersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ordersWhereInput
    orderBy?: ordersOrderByWithAggregationInput | ordersOrderByWithAggregationInput[]
    by: OrdersScalarFieldEnum[] | OrdersScalarFieldEnum
    having?: ordersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrdersCountAggregateInputType | true
    _avg?: OrdersAvgAggregateInputType
    _sum?: OrdersSumAggregateInputType
    _min?: OrdersMinAggregateInputType
    _max?: OrdersMaxAggregateInputType
  }

  export type OrdersGroupByOutputType = {
    id: bigint
    retailer_id: string | null
    wholesaler_id: string | null
    status: number
    payment_method: number
    shipping_address: bigint | null
    notes: string | null
    discount_total: Decimal
    subtotal: Decimal
    total: Decimal
    iva_total: Decimal
    discount_log: JsonValue
    estimated_date: Date | null
    created_at: Date
    updated_at: Date | null
    _count: OrdersCountAggregateOutputType | null
    _avg: OrdersAvgAggregateOutputType | null
    _sum: OrdersSumAggregateOutputType | null
    _min: OrdersMinAggregateOutputType | null
    _max: OrdersMaxAggregateOutputType | null
  }

  type GetOrdersGroupByPayload<T extends ordersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrdersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrdersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrdersGroupByOutputType[P]>
            : GetScalarType<T[P], OrdersGroupByOutputType[P]>
        }
      >
    >


  export type ordersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    retailer_id?: boolean
    wholesaler_id?: boolean
    status?: boolean
    payment_method?: boolean
    shipping_address?: boolean
    notes?: boolean
    discount_total?: boolean
    subtotal?: boolean
    total?: boolean
    iva_total?: boolean
    discount_log?: boolean
    estimated_date?: boolean
    created_at?: boolean
    updated_at?: boolean
    order_details?: boolean | orders$order_detailsArgs<ExtArgs>
    users_orders_retailer_idTousers?: boolean | orders$users_orders_retailer_idTousersArgs<ExtArgs>
    direcction?: boolean | orders$direcctionArgs<ExtArgs>
    users_orders_wholesaler_idTousers?: boolean | orders$users_orders_wholesaler_idTousersArgs<ExtArgs>
    _count?: boolean | OrdersCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orders"]>

  export type ordersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    retailer_id?: boolean
    wholesaler_id?: boolean
    status?: boolean
    payment_method?: boolean
    shipping_address?: boolean
    notes?: boolean
    discount_total?: boolean
    subtotal?: boolean
    total?: boolean
    iva_total?: boolean
    discount_log?: boolean
    estimated_date?: boolean
    created_at?: boolean
    updated_at?: boolean
    users_orders_retailer_idTousers?: boolean | orders$users_orders_retailer_idTousersArgs<ExtArgs>
    direcction?: boolean | orders$direcctionArgs<ExtArgs>
    users_orders_wholesaler_idTousers?: boolean | orders$users_orders_wholesaler_idTousersArgs<ExtArgs>
  }, ExtArgs["result"]["orders"]>

  export type ordersSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    retailer_id?: boolean
    wholesaler_id?: boolean
    status?: boolean
    payment_method?: boolean
    shipping_address?: boolean
    notes?: boolean
    discount_total?: boolean
    subtotal?: boolean
    total?: boolean
    iva_total?: boolean
    discount_log?: boolean
    estimated_date?: boolean
    created_at?: boolean
    updated_at?: boolean
    users_orders_retailer_idTousers?: boolean | orders$users_orders_retailer_idTousersArgs<ExtArgs>
    direcction?: boolean | orders$direcctionArgs<ExtArgs>
    users_orders_wholesaler_idTousers?: boolean | orders$users_orders_wholesaler_idTousersArgs<ExtArgs>
  }, ExtArgs["result"]["orders"]>

  export type ordersSelectScalar = {
    id?: boolean
    retailer_id?: boolean
    wholesaler_id?: boolean
    status?: boolean
    payment_method?: boolean
    shipping_address?: boolean
    notes?: boolean
    discount_total?: boolean
    subtotal?: boolean
    total?: boolean
    iva_total?: boolean
    discount_log?: boolean
    estimated_date?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type ordersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "retailer_id" | "wholesaler_id" | "status" | "payment_method" | "shipping_address" | "notes" | "discount_total" | "subtotal" | "total" | "iva_total" | "discount_log" | "estimated_date" | "created_at" | "updated_at", ExtArgs["result"]["orders"]>
  export type ordersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order_details?: boolean | orders$order_detailsArgs<ExtArgs>
    users_orders_retailer_idTousers?: boolean | orders$users_orders_retailer_idTousersArgs<ExtArgs>
    direcction?: boolean | orders$direcctionArgs<ExtArgs>
    users_orders_wholesaler_idTousers?: boolean | orders$users_orders_wholesaler_idTousersArgs<ExtArgs>
    _count?: boolean | OrdersCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ordersIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users_orders_retailer_idTousers?: boolean | orders$users_orders_retailer_idTousersArgs<ExtArgs>
    direcction?: boolean | orders$direcctionArgs<ExtArgs>
    users_orders_wholesaler_idTousers?: boolean | orders$users_orders_wholesaler_idTousersArgs<ExtArgs>
  }
  export type ordersIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users_orders_retailer_idTousers?: boolean | orders$users_orders_retailer_idTousersArgs<ExtArgs>
    direcction?: boolean | orders$direcctionArgs<ExtArgs>
    users_orders_wholesaler_idTousers?: boolean | orders$users_orders_wholesaler_idTousersArgs<ExtArgs>
  }

  export type $ordersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "orders"
    objects: {
      order_details: Prisma.$order_detailsPayload<ExtArgs>[]
      users_orders_retailer_idTousers: Prisma.$usersPayload<ExtArgs> | null
      direcction: Prisma.$directionPayload<ExtArgs> | null
      users_orders_wholesaler_idTousers: Prisma.$usersPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      retailer_id: string | null
      wholesaler_id: string | null
      status: number
      payment_method: number
      shipping_address: bigint | null
      notes: string | null
      discount_total: Prisma.Decimal
      subtotal: Prisma.Decimal
      total: Prisma.Decimal
      iva_total: Prisma.Decimal
      discount_log: Prisma.JsonValue
      estimated_date: Date | null
      created_at: Date
      updated_at: Date | null
    }, ExtArgs["result"]["orders"]>
    composites: {}
  }

  type ordersGetPayload<S extends boolean | null | undefined | ordersDefaultArgs> = $Result.GetResult<Prisma.$ordersPayload, S>

  type ordersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ordersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OrdersCountAggregateInputType | true
    }

  export interface ordersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['orders'], meta: { name: 'orders' } }
    /**
     * Find zero or one Orders that matches the filter.
     * @param {ordersFindUniqueArgs} args - Arguments to find a Orders
     * @example
     * // Get one Orders
     * const orders = await prisma.orders.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ordersFindUniqueArgs>(args: SelectSubset<T, ordersFindUniqueArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Orders that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ordersFindUniqueOrThrowArgs} args - Arguments to find a Orders
     * @example
     * // Get one Orders
     * const orders = await prisma.orders.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ordersFindUniqueOrThrowArgs>(args: SelectSubset<T, ordersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Orders that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ordersFindFirstArgs} args - Arguments to find a Orders
     * @example
     * // Get one Orders
     * const orders = await prisma.orders.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ordersFindFirstArgs>(args?: SelectSubset<T, ordersFindFirstArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Orders that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ordersFindFirstOrThrowArgs} args - Arguments to find a Orders
     * @example
     * // Get one Orders
     * const orders = await prisma.orders.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ordersFindFirstOrThrowArgs>(args?: SelectSubset<T, ordersFindFirstOrThrowArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Orders that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ordersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Orders
     * const orders = await prisma.orders.findMany()
     * 
     * // Get first 10 Orders
     * const orders = await prisma.orders.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const ordersWithIdOnly = await prisma.orders.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ordersFindManyArgs>(args?: SelectSubset<T, ordersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Orders.
     * @param {ordersCreateArgs} args - Arguments to create a Orders.
     * @example
     * // Create one Orders
     * const Orders = await prisma.orders.create({
     *   data: {
     *     // ... data to create a Orders
     *   }
     * })
     * 
     */
    create<T extends ordersCreateArgs>(args: SelectSubset<T, ordersCreateArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Orders.
     * @param {ordersCreateManyArgs} args - Arguments to create many Orders.
     * @example
     * // Create many Orders
     * const orders = await prisma.orders.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ordersCreateManyArgs>(args?: SelectSubset<T, ordersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Orders and returns the data saved in the database.
     * @param {ordersCreateManyAndReturnArgs} args - Arguments to create many Orders.
     * @example
     * // Create many Orders
     * const orders = await prisma.orders.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Orders and only return the `id`
     * const ordersWithIdOnly = await prisma.orders.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ordersCreateManyAndReturnArgs>(args?: SelectSubset<T, ordersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Orders.
     * @param {ordersDeleteArgs} args - Arguments to delete one Orders.
     * @example
     * // Delete one Orders
     * const Orders = await prisma.orders.delete({
     *   where: {
     *     // ... filter to delete one Orders
     *   }
     * })
     * 
     */
    delete<T extends ordersDeleteArgs>(args: SelectSubset<T, ordersDeleteArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Orders.
     * @param {ordersUpdateArgs} args - Arguments to update one Orders.
     * @example
     * // Update one Orders
     * const orders = await prisma.orders.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ordersUpdateArgs>(args: SelectSubset<T, ordersUpdateArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Orders.
     * @param {ordersDeleteManyArgs} args - Arguments to filter Orders to delete.
     * @example
     * // Delete a few Orders
     * const { count } = await prisma.orders.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ordersDeleteManyArgs>(args?: SelectSubset<T, ordersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ordersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Orders
     * const orders = await prisma.orders.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ordersUpdateManyArgs>(args: SelectSubset<T, ordersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Orders and returns the data updated in the database.
     * @param {ordersUpdateManyAndReturnArgs} args - Arguments to update many Orders.
     * @example
     * // Update many Orders
     * const orders = await prisma.orders.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Orders and only return the `id`
     * const ordersWithIdOnly = await prisma.orders.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ordersUpdateManyAndReturnArgs>(args: SelectSubset<T, ordersUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Orders.
     * @param {ordersUpsertArgs} args - Arguments to update or create a Orders.
     * @example
     * // Update or create a Orders
     * const orders = await prisma.orders.upsert({
     *   create: {
     *     // ... data to create a Orders
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Orders we want to update
     *   }
     * })
     */
    upsert<T extends ordersUpsertArgs>(args: SelectSubset<T, ordersUpsertArgs<ExtArgs>>): Prisma__ordersClient<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ordersCountArgs} args - Arguments to filter Orders to count.
     * @example
     * // Count the number of Orders
     * const count = await prisma.orders.count({
     *   where: {
     *     // ... the filter for the Orders we want to count
     *   }
     * })
    **/
    count<T extends ordersCountArgs>(
      args?: Subset<T, ordersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrdersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrdersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrdersAggregateArgs>(args: Subset<T, OrdersAggregateArgs>): Prisma.PrismaPromise<GetOrdersAggregateType<T>>

    /**
     * Group by Orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ordersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ordersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ordersGroupByArgs['orderBy'] }
        : { orderBy?: ordersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ordersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrdersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the orders model
   */
  readonly fields: ordersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for orders.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ordersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    order_details<T extends orders$order_detailsArgs<ExtArgs> = {}>(args?: Subset<T, orders$order_detailsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$order_detailsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    users_orders_retailer_idTousers<T extends orders$users_orders_retailer_idTousersArgs<ExtArgs> = {}>(args?: Subset<T, orders$users_orders_retailer_idTousersArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    direcction<T extends orders$direcctionArgs<ExtArgs> = {}>(args?: Subset<T, orders$direcctionArgs<ExtArgs>>): Prisma__directionClient<$Result.GetResult<Prisma.$directionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    users_orders_wholesaler_idTousers<T extends orders$users_orders_wholesaler_idTousersArgs<ExtArgs> = {}>(args?: Subset<T, orders$users_orders_wholesaler_idTousersArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the orders model
   */
  interface ordersFieldRefs {
    readonly id: FieldRef<"orders", 'BigInt'>
    readonly retailer_id: FieldRef<"orders", 'String'>
    readonly wholesaler_id: FieldRef<"orders", 'String'>
    readonly status: FieldRef<"orders", 'Int'>
    readonly payment_method: FieldRef<"orders", 'Int'>
    readonly shipping_address: FieldRef<"orders", 'BigInt'>
    readonly notes: FieldRef<"orders", 'String'>
    readonly discount_total: FieldRef<"orders", 'Decimal'>
    readonly subtotal: FieldRef<"orders", 'Decimal'>
    readonly total: FieldRef<"orders", 'Decimal'>
    readonly iva_total: FieldRef<"orders", 'Decimal'>
    readonly discount_log: FieldRef<"orders", 'Json'>
    readonly estimated_date: FieldRef<"orders", 'DateTime'>
    readonly created_at: FieldRef<"orders", 'DateTime'>
    readonly updated_at: FieldRef<"orders", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * orders findUnique
   */
  export type ordersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    /**
     * Filter, which orders to fetch.
     */
    where: ordersWhereUniqueInput
  }

  /**
   * orders findUniqueOrThrow
   */
  export type ordersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    /**
     * Filter, which orders to fetch.
     */
    where: ordersWhereUniqueInput
  }

  /**
   * orders findFirst
   */
  export type ordersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    /**
     * Filter, which orders to fetch.
     */
    where?: ordersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of orders to fetch.
     */
    orderBy?: ordersOrderByWithRelationInput | ordersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for orders.
     */
    cursor?: ordersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of orders.
     */
    distinct?: OrdersScalarFieldEnum | OrdersScalarFieldEnum[]
  }

  /**
   * orders findFirstOrThrow
   */
  export type ordersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    /**
     * Filter, which orders to fetch.
     */
    where?: ordersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of orders to fetch.
     */
    orderBy?: ordersOrderByWithRelationInput | ordersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for orders.
     */
    cursor?: ordersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of orders.
     */
    distinct?: OrdersScalarFieldEnum | OrdersScalarFieldEnum[]
  }

  /**
   * orders findMany
   */
  export type ordersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    /**
     * Filter, which orders to fetch.
     */
    where?: ordersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of orders to fetch.
     */
    orderBy?: ordersOrderByWithRelationInput | ordersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing orders.
     */
    cursor?: ordersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` orders.
     */
    skip?: number
    distinct?: OrdersScalarFieldEnum | OrdersScalarFieldEnum[]
  }

  /**
   * orders create
   */
  export type ordersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    /**
     * The data needed to create a orders.
     */
    data: XOR<ordersCreateInput, ordersUncheckedCreateInput>
  }

  /**
   * orders createMany
   */
  export type ordersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many orders.
     */
    data: ordersCreateManyInput | ordersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * orders createManyAndReturn
   */
  export type ordersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * The data used to create many orders.
     */
    data: ordersCreateManyInput | ordersCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * orders update
   */
  export type ordersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    /**
     * The data needed to update a orders.
     */
    data: XOR<ordersUpdateInput, ordersUncheckedUpdateInput>
    /**
     * Choose, which orders to update.
     */
    where: ordersWhereUniqueInput
  }

  /**
   * orders updateMany
   */
  export type ordersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update orders.
     */
    data: XOR<ordersUpdateManyMutationInput, ordersUncheckedUpdateManyInput>
    /**
     * Filter which orders to update
     */
    where?: ordersWhereInput
    /**
     * Limit how many orders to update.
     */
    limit?: number
  }

  /**
   * orders updateManyAndReturn
   */
  export type ordersUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * The data used to update orders.
     */
    data: XOR<ordersUpdateManyMutationInput, ordersUncheckedUpdateManyInput>
    /**
     * Filter which orders to update
     */
    where?: ordersWhereInput
    /**
     * Limit how many orders to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * orders upsert
   */
  export type ordersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    /**
     * The filter to search for the orders to update in case it exists.
     */
    where: ordersWhereUniqueInput
    /**
     * In case the orders found by the `where` argument doesn't exist, create a new orders with this data.
     */
    create: XOR<ordersCreateInput, ordersUncheckedCreateInput>
    /**
     * In case the orders was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ordersUpdateInput, ordersUncheckedUpdateInput>
  }

  /**
   * orders delete
   */
  export type ordersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    /**
     * Filter which orders to delete.
     */
    where: ordersWhereUniqueInput
  }

  /**
   * orders deleteMany
   */
  export type ordersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which orders to delete
     */
    where?: ordersWhereInput
    /**
     * Limit how many orders to delete.
     */
    limit?: number
  }

  /**
   * orders.order_details
   */
  export type orders$order_detailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_details
     */
    select?: order_detailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_details
     */
    omit?: order_detailsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_detailsInclude<ExtArgs> | null
    where?: order_detailsWhereInput
    orderBy?: order_detailsOrderByWithRelationInput | order_detailsOrderByWithRelationInput[]
    cursor?: order_detailsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Order_detailsScalarFieldEnum | Order_detailsScalarFieldEnum[]
  }

  /**
   * orders.users_orders_retailer_idTousers
   */
  export type orders$users_orders_retailer_idTousersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
  }

  /**
   * orders.direcction
   */
  export type orders$direcctionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the direction
     */
    select?: directionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the direction
     */
    omit?: directionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: directionInclude<ExtArgs> | null
    where?: directionWhereInput
  }

  /**
   * orders.users_orders_wholesaler_idTousers
   */
  export type orders$users_orders_wholesaler_idTousersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    where?: usersWhereInput
  }

  /**
   * orders without action
   */
  export type ordersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
  }


  /**
   * Model products
   */

  export type AggregateProducts = {
    _count: ProductsCountAggregateOutputType | null
    _avg: ProductsAvgAggregateOutputType | null
    _sum: ProductsSumAggregateOutputType | null
    _min: ProductsMinAggregateOutputType | null
    _max: ProductsMaxAggregateOutputType | null
  }

  export type ProductsAvgAggregateOutputType = {
    id: number | null
    iva: Decimal | null
    category_id: number | null
    status: number | null
  }

  export type ProductsSumAggregateOutputType = {
    id: bigint | null
    iva: Decimal | null
    category_id: bigint | null
    status: number | null
  }

  export type ProductsMinAggregateOutputType = {
    id: bigint | null
    user_id: string | null
    name: string | null
    title: string | null
    description: string | null
    iva: Decimal | null
    category_id: bigint | null
    status: number | null
    created_at: Date | null
    product_code: string | null
  }

  export type ProductsMaxAggregateOutputType = {
    id: bigint | null
    user_id: string | null
    name: string | null
    title: string | null
    description: string | null
    iva: Decimal | null
    category_id: bigint | null
    status: number | null
    created_at: Date | null
    product_code: string | null
  }

  export type ProductsCountAggregateOutputType = {
    id: number
    user_id: number
    name: number
    title: number
    description: number
    iva: number
    category_id: number
    status: number
    created_at: number
    product_code: number
    _all: number
  }


  export type ProductsAvgAggregateInputType = {
    id?: true
    iva?: true
    category_id?: true
    status?: true
  }

  export type ProductsSumAggregateInputType = {
    id?: true
    iva?: true
    category_id?: true
    status?: true
  }

  export type ProductsMinAggregateInputType = {
    id?: true
    user_id?: true
    name?: true
    title?: true
    description?: true
    iva?: true
    category_id?: true
    status?: true
    created_at?: true
    product_code?: true
  }

  export type ProductsMaxAggregateInputType = {
    id?: true
    user_id?: true
    name?: true
    title?: true
    description?: true
    iva?: true
    category_id?: true
    status?: true
    created_at?: true
    product_code?: true
  }

  export type ProductsCountAggregateInputType = {
    id?: true
    user_id?: true
    name?: true
    title?: true
    description?: true
    iva?: true
    category_id?: true
    status?: true
    created_at?: true
    product_code?: true
    _all?: true
  }

  export type ProductsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which products to aggregate.
     */
    where?: productsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of products to fetch.
     */
    orderBy?: productsOrderByWithRelationInput | productsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: productsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned products
    **/
    _count?: true | ProductsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductsMaxAggregateInputType
  }

  export type GetProductsAggregateType<T extends ProductsAggregateArgs> = {
        [P in keyof T & keyof AggregateProducts]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProducts[P]>
      : GetScalarType<T[P], AggregateProducts[P]>
  }




  export type productsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: productsWhereInput
    orderBy?: productsOrderByWithAggregationInput | productsOrderByWithAggregationInput[]
    by: ProductsScalarFieldEnum[] | ProductsScalarFieldEnum
    having?: productsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductsCountAggregateInputType | true
    _avg?: ProductsAvgAggregateInputType
    _sum?: ProductsSumAggregateInputType
    _min?: ProductsMinAggregateInputType
    _max?: ProductsMaxAggregateInputType
  }

  export type ProductsGroupByOutputType = {
    id: bigint
    user_id: string
    name: string
    title: string | null
    description: string | null
    iva: Decimal
    category_id: bigint
    status: number
    created_at: Date
    product_code: string
    _count: ProductsCountAggregateOutputType | null
    _avg: ProductsAvgAggregateOutputType | null
    _sum: ProductsSumAggregateOutputType | null
    _min: ProductsMinAggregateOutputType | null
    _max: ProductsMaxAggregateOutputType | null
  }

  type GetProductsGroupByPayload<T extends productsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductsGroupByOutputType[P]>
            : GetScalarType<T[P], ProductsGroupByOutputType[P]>
        }
      >
    >


  export type productsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    name?: boolean
    title?: boolean
    description?: boolean
    iva?: boolean
    category_id?: boolean
    status?: boolean
    created_at?: boolean
    product_code?: boolean
    categories?: boolean | categoriesDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
    products_files?: boolean | products$products_filesArgs<ExtArgs>
    variant_products?: boolean | products$variant_productsArgs<ExtArgs>
    _count?: boolean | ProductsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["products"]>

  export type productsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    name?: boolean
    title?: boolean
    description?: boolean
    iva?: boolean
    category_id?: boolean
    status?: boolean
    created_at?: boolean
    product_code?: boolean
    categories?: boolean | categoriesDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["products"]>

  export type productsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    name?: boolean
    title?: boolean
    description?: boolean
    iva?: boolean
    category_id?: boolean
    status?: boolean
    created_at?: boolean
    product_code?: boolean
    categories?: boolean | categoriesDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["products"]>

  export type productsSelectScalar = {
    id?: boolean
    user_id?: boolean
    name?: boolean
    title?: boolean
    description?: boolean
    iva?: boolean
    category_id?: boolean
    status?: boolean
    created_at?: boolean
    product_code?: boolean
  }

  export type productsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "name" | "title" | "description" | "iva" | "category_id" | "status" | "created_at" | "product_code", ExtArgs["result"]["products"]>
  export type productsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    categories?: boolean | categoriesDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
    products_files?: boolean | products$products_filesArgs<ExtArgs>
    variant_products?: boolean | products$variant_productsArgs<ExtArgs>
    _count?: boolean | ProductsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type productsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    categories?: boolean | categoriesDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type productsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    categories?: boolean | categoriesDefaultArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $productsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "products"
    objects: {
      categories: Prisma.$categoriesPayload<ExtArgs>
      users: Prisma.$usersPayload<ExtArgs>
      products_files: Prisma.$products_filesPayload<ExtArgs>[]
      variant_products: Prisma.$variant_productsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      user_id: string
      name: string
      title: string | null
      description: string | null
      iva: Prisma.Decimal
      category_id: bigint
      status: number
      created_at: Date
      product_code: string
    }, ExtArgs["result"]["products"]>
    composites: {}
  }

  type productsGetPayload<S extends boolean | null | undefined | productsDefaultArgs> = $Result.GetResult<Prisma.$productsPayload, S>

  type productsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<productsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductsCountAggregateInputType | true
    }

  export interface productsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['products'], meta: { name: 'products' } }
    /**
     * Find zero or one Products that matches the filter.
     * @param {productsFindUniqueArgs} args - Arguments to find a Products
     * @example
     * // Get one Products
     * const products = await prisma.products.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends productsFindUniqueArgs>(args: SelectSubset<T, productsFindUniqueArgs<ExtArgs>>): Prisma__productsClient<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Products that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {productsFindUniqueOrThrowArgs} args - Arguments to find a Products
     * @example
     * // Get one Products
     * const products = await prisma.products.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends productsFindUniqueOrThrowArgs>(args: SelectSubset<T, productsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__productsClient<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Products that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productsFindFirstArgs} args - Arguments to find a Products
     * @example
     * // Get one Products
     * const products = await prisma.products.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends productsFindFirstArgs>(args?: SelectSubset<T, productsFindFirstArgs<ExtArgs>>): Prisma__productsClient<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Products that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productsFindFirstOrThrowArgs} args - Arguments to find a Products
     * @example
     * // Get one Products
     * const products = await prisma.products.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends productsFindFirstOrThrowArgs>(args?: SelectSubset<T, productsFindFirstOrThrowArgs<ExtArgs>>): Prisma__productsClient<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Products that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Products
     * const products = await prisma.products.findMany()
     * 
     * // Get first 10 Products
     * const products = await prisma.products.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productsWithIdOnly = await prisma.products.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends productsFindManyArgs>(args?: SelectSubset<T, productsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Products.
     * @param {productsCreateArgs} args - Arguments to create a Products.
     * @example
     * // Create one Products
     * const Products = await prisma.products.create({
     *   data: {
     *     // ... data to create a Products
     *   }
     * })
     * 
     */
    create<T extends productsCreateArgs>(args: SelectSubset<T, productsCreateArgs<ExtArgs>>): Prisma__productsClient<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Products.
     * @param {productsCreateManyArgs} args - Arguments to create many Products.
     * @example
     * // Create many Products
     * const products = await prisma.products.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends productsCreateManyArgs>(args?: SelectSubset<T, productsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Products and returns the data saved in the database.
     * @param {productsCreateManyAndReturnArgs} args - Arguments to create many Products.
     * @example
     * // Create many Products
     * const products = await prisma.products.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Products and only return the `id`
     * const productsWithIdOnly = await prisma.products.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends productsCreateManyAndReturnArgs>(args?: SelectSubset<T, productsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Products.
     * @param {productsDeleteArgs} args - Arguments to delete one Products.
     * @example
     * // Delete one Products
     * const Products = await prisma.products.delete({
     *   where: {
     *     // ... filter to delete one Products
     *   }
     * })
     * 
     */
    delete<T extends productsDeleteArgs>(args: SelectSubset<T, productsDeleteArgs<ExtArgs>>): Prisma__productsClient<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Products.
     * @param {productsUpdateArgs} args - Arguments to update one Products.
     * @example
     * // Update one Products
     * const products = await prisma.products.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends productsUpdateArgs>(args: SelectSubset<T, productsUpdateArgs<ExtArgs>>): Prisma__productsClient<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Products.
     * @param {productsDeleteManyArgs} args - Arguments to filter Products to delete.
     * @example
     * // Delete a few Products
     * const { count } = await prisma.products.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends productsDeleteManyArgs>(args?: SelectSubset<T, productsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Products
     * const products = await prisma.products.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends productsUpdateManyArgs>(args: SelectSubset<T, productsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Products and returns the data updated in the database.
     * @param {productsUpdateManyAndReturnArgs} args - Arguments to update many Products.
     * @example
     * // Update many Products
     * const products = await prisma.products.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Products and only return the `id`
     * const productsWithIdOnly = await prisma.products.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends productsUpdateManyAndReturnArgs>(args: SelectSubset<T, productsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Products.
     * @param {productsUpsertArgs} args - Arguments to update or create a Products.
     * @example
     * // Update or create a Products
     * const products = await prisma.products.upsert({
     *   create: {
     *     // ... data to create a Products
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Products we want to update
     *   }
     * })
     */
    upsert<T extends productsUpsertArgs>(args: SelectSubset<T, productsUpsertArgs<ExtArgs>>): Prisma__productsClient<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productsCountArgs} args - Arguments to filter Products to count.
     * @example
     * // Count the number of Products
     * const count = await prisma.products.count({
     *   where: {
     *     // ... the filter for the Products we want to count
     *   }
     * })
    **/
    count<T extends productsCountArgs>(
      args?: Subset<T, productsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductsAggregateArgs>(args: Subset<T, ProductsAggregateArgs>): Prisma.PrismaPromise<GetProductsAggregateType<T>>

    /**
     * Group by Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {productsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends productsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: productsGroupByArgs['orderBy'] }
        : { orderBy?: productsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, productsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the products model
   */
  readonly fields: productsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for products.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__productsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    categories<T extends categoriesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, categoriesDefaultArgs<ExtArgs>>): Prisma__categoriesClient<$Result.GetResult<Prisma.$categoriesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    products_files<T extends products$products_filesArgs<ExtArgs> = {}>(args?: Subset<T, products$products_filesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$products_filesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    variant_products<T extends products$variant_productsArgs<ExtArgs> = {}>(args?: Subset<T, products$variant_productsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$variant_productsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the products model
   */
  interface productsFieldRefs {
    readonly id: FieldRef<"products", 'BigInt'>
    readonly user_id: FieldRef<"products", 'String'>
    readonly name: FieldRef<"products", 'String'>
    readonly title: FieldRef<"products", 'String'>
    readonly description: FieldRef<"products", 'String'>
    readonly iva: FieldRef<"products", 'Decimal'>
    readonly category_id: FieldRef<"products", 'BigInt'>
    readonly status: FieldRef<"products", 'Int'>
    readonly created_at: FieldRef<"products", 'DateTime'>
    readonly product_code: FieldRef<"products", 'String'>
  }
    

  // Custom InputTypes
  /**
   * products findUnique
   */
  export type productsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
    /**
     * Filter, which products to fetch.
     */
    where: productsWhereUniqueInput
  }

  /**
   * products findUniqueOrThrow
   */
  export type productsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
    /**
     * Filter, which products to fetch.
     */
    where: productsWhereUniqueInput
  }

  /**
   * products findFirst
   */
  export type productsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
    /**
     * Filter, which products to fetch.
     */
    where?: productsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of products to fetch.
     */
    orderBy?: productsOrderByWithRelationInput | productsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for products.
     */
    cursor?: productsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of products.
     */
    distinct?: ProductsScalarFieldEnum | ProductsScalarFieldEnum[]
  }

  /**
   * products findFirstOrThrow
   */
  export type productsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
    /**
     * Filter, which products to fetch.
     */
    where?: productsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of products to fetch.
     */
    orderBy?: productsOrderByWithRelationInput | productsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for products.
     */
    cursor?: productsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of products.
     */
    distinct?: ProductsScalarFieldEnum | ProductsScalarFieldEnum[]
  }

  /**
   * products findMany
   */
  export type productsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
    /**
     * Filter, which products to fetch.
     */
    where?: productsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of products to fetch.
     */
    orderBy?: productsOrderByWithRelationInput | productsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing products.
     */
    cursor?: productsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` products.
     */
    skip?: number
    distinct?: ProductsScalarFieldEnum | ProductsScalarFieldEnum[]
  }

  /**
   * products create
   */
  export type productsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
    /**
     * The data needed to create a products.
     */
    data: XOR<productsCreateInput, productsUncheckedCreateInput>
  }

  /**
   * products createMany
   */
  export type productsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many products.
     */
    data: productsCreateManyInput | productsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * products createManyAndReturn
   */
  export type productsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * The data used to create many products.
     */
    data: productsCreateManyInput | productsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * products update
   */
  export type productsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
    /**
     * The data needed to update a products.
     */
    data: XOR<productsUpdateInput, productsUncheckedUpdateInput>
    /**
     * Choose, which products to update.
     */
    where: productsWhereUniqueInput
  }

  /**
   * products updateMany
   */
  export type productsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update products.
     */
    data: XOR<productsUpdateManyMutationInput, productsUncheckedUpdateManyInput>
    /**
     * Filter which products to update
     */
    where?: productsWhereInput
    /**
     * Limit how many products to update.
     */
    limit?: number
  }

  /**
   * products updateManyAndReturn
   */
  export type productsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * The data used to update products.
     */
    data: XOR<productsUpdateManyMutationInput, productsUncheckedUpdateManyInput>
    /**
     * Filter which products to update
     */
    where?: productsWhereInput
    /**
     * Limit how many products to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * products upsert
   */
  export type productsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
    /**
     * The filter to search for the products to update in case it exists.
     */
    where: productsWhereUniqueInput
    /**
     * In case the products found by the `where` argument doesn't exist, create a new products with this data.
     */
    create: XOR<productsCreateInput, productsUncheckedCreateInput>
    /**
     * In case the products was found with the provided `where` argument, update it with this data.
     */
    update: XOR<productsUpdateInput, productsUncheckedUpdateInput>
  }

  /**
   * products delete
   */
  export type productsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
    /**
     * Filter which products to delete.
     */
    where: productsWhereUniqueInput
  }

  /**
   * products deleteMany
   */
  export type productsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which products to delete
     */
    where?: productsWhereInput
    /**
     * Limit how many products to delete.
     */
    limit?: number
  }

  /**
   * products.products_files
   */
  export type products$products_filesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products_files
     */
    select?: products_filesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products_files
     */
    omit?: products_filesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: products_filesInclude<ExtArgs> | null
    where?: products_filesWhereInput
    orderBy?: products_filesOrderByWithRelationInput | products_filesOrderByWithRelationInput[]
    cursor?: products_filesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Products_filesScalarFieldEnum | Products_filesScalarFieldEnum[]
  }

  /**
   * products.variant_products
   */
  export type products$variant_productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the variant_products
     */
    select?: variant_productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the variant_products
     */
    omit?: variant_productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: variant_productsInclude<ExtArgs> | null
    where?: variant_productsWhereInput
    orderBy?: variant_productsOrderByWithRelationInput | variant_productsOrderByWithRelationInput[]
    cursor?: variant_productsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Variant_productsScalarFieldEnum | Variant_productsScalarFieldEnum[]
  }

  /**
   * products without action
   */
  export type productsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
  }


  /**
   * Model products_files
   */

  export type AggregateProducts_files = {
    _count: Products_filesCountAggregateOutputType | null
    _avg: Products_filesAvgAggregateOutputType | null
    _sum: Products_filesSumAggregateOutputType | null
    _min: Products_filesMinAggregateOutputType | null
    _max: Products_filesMaxAggregateOutputType | null
  }

  export type Products_filesAvgAggregateOutputType = {
    id: number | null
    product_id: number | null
    file_id: number | null
    sort: number | null
  }

  export type Products_filesSumAggregateOutputType = {
    id: bigint | null
    product_id: bigint | null
    file_id: bigint | null
    sort: number | null
  }

  export type Products_filesMinAggregateOutputType = {
    id: bigint | null
    product_id: bigint | null
    file_id: bigint | null
    sort: number | null
  }

  export type Products_filesMaxAggregateOutputType = {
    id: bigint | null
    product_id: bigint | null
    file_id: bigint | null
    sort: number | null
  }

  export type Products_filesCountAggregateOutputType = {
    id: number
    product_id: number
    file_id: number
    sort: number
    _all: number
  }


  export type Products_filesAvgAggregateInputType = {
    id?: true
    product_id?: true
    file_id?: true
    sort?: true
  }

  export type Products_filesSumAggregateInputType = {
    id?: true
    product_id?: true
    file_id?: true
    sort?: true
  }

  export type Products_filesMinAggregateInputType = {
    id?: true
    product_id?: true
    file_id?: true
    sort?: true
  }

  export type Products_filesMaxAggregateInputType = {
    id?: true
    product_id?: true
    file_id?: true
    sort?: true
  }

  export type Products_filesCountAggregateInputType = {
    id?: true
    product_id?: true
    file_id?: true
    sort?: true
    _all?: true
  }

  export type Products_filesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which products_files to aggregate.
     */
    where?: products_filesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of products_files to fetch.
     */
    orderBy?: products_filesOrderByWithRelationInput | products_filesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: products_filesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` products_files from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` products_files.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned products_files
    **/
    _count?: true | Products_filesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Products_filesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Products_filesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Products_filesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Products_filesMaxAggregateInputType
  }

  export type GetProducts_filesAggregateType<T extends Products_filesAggregateArgs> = {
        [P in keyof T & keyof AggregateProducts_files]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProducts_files[P]>
      : GetScalarType<T[P], AggregateProducts_files[P]>
  }




  export type products_filesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: products_filesWhereInput
    orderBy?: products_filesOrderByWithAggregationInput | products_filesOrderByWithAggregationInput[]
    by: Products_filesScalarFieldEnum[] | Products_filesScalarFieldEnum
    having?: products_filesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Products_filesCountAggregateInputType | true
    _avg?: Products_filesAvgAggregateInputType
    _sum?: Products_filesSumAggregateInputType
    _min?: Products_filesMinAggregateInputType
    _max?: Products_filesMaxAggregateInputType
  }

  export type Products_filesGroupByOutputType = {
    id: bigint
    product_id: bigint
    file_id: bigint
    sort: number
    _count: Products_filesCountAggregateOutputType | null
    _avg: Products_filesAvgAggregateOutputType | null
    _sum: Products_filesSumAggregateOutputType | null
    _min: Products_filesMinAggregateOutputType | null
    _max: Products_filesMaxAggregateOutputType | null
  }

  type GetProducts_filesGroupByPayload<T extends products_filesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Products_filesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Products_filesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Products_filesGroupByOutputType[P]>
            : GetScalarType<T[P], Products_filesGroupByOutputType[P]>
        }
      >
    >


  export type products_filesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    product_id?: boolean
    file_id?: boolean
    sort?: boolean
    files?: boolean | filesDefaultArgs<ExtArgs>
    products?: boolean | productsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["products_files"]>

  export type products_filesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    product_id?: boolean
    file_id?: boolean
    sort?: boolean
    files?: boolean | filesDefaultArgs<ExtArgs>
    products?: boolean | productsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["products_files"]>

  export type products_filesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    product_id?: boolean
    file_id?: boolean
    sort?: boolean
    files?: boolean | filesDefaultArgs<ExtArgs>
    products?: boolean | productsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["products_files"]>

  export type products_filesSelectScalar = {
    id?: boolean
    product_id?: boolean
    file_id?: boolean
    sort?: boolean
  }

  export type products_filesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "product_id" | "file_id" | "sort", ExtArgs["result"]["products_files"]>
  export type products_filesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    files?: boolean | filesDefaultArgs<ExtArgs>
    products?: boolean | productsDefaultArgs<ExtArgs>
  }
  export type products_filesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    files?: boolean | filesDefaultArgs<ExtArgs>
    products?: boolean | productsDefaultArgs<ExtArgs>
  }
  export type products_filesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    files?: boolean | filesDefaultArgs<ExtArgs>
    products?: boolean | productsDefaultArgs<ExtArgs>
  }

  export type $products_filesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "products_files"
    objects: {
      files: Prisma.$filesPayload<ExtArgs>
      products: Prisma.$productsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      product_id: bigint
      file_id: bigint
      sort: number
    }, ExtArgs["result"]["products_files"]>
    composites: {}
  }

  type products_filesGetPayload<S extends boolean | null | undefined | products_filesDefaultArgs> = $Result.GetResult<Prisma.$products_filesPayload, S>

  type products_filesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<products_filesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Products_filesCountAggregateInputType | true
    }

  export interface products_filesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['products_files'], meta: { name: 'products_files' } }
    /**
     * Find zero or one Products_files that matches the filter.
     * @param {products_filesFindUniqueArgs} args - Arguments to find a Products_files
     * @example
     * // Get one Products_files
     * const products_files = await prisma.products_files.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends products_filesFindUniqueArgs>(args: SelectSubset<T, products_filesFindUniqueArgs<ExtArgs>>): Prisma__products_filesClient<$Result.GetResult<Prisma.$products_filesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Products_files that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {products_filesFindUniqueOrThrowArgs} args - Arguments to find a Products_files
     * @example
     * // Get one Products_files
     * const products_files = await prisma.products_files.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends products_filesFindUniqueOrThrowArgs>(args: SelectSubset<T, products_filesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__products_filesClient<$Result.GetResult<Prisma.$products_filesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Products_files that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {products_filesFindFirstArgs} args - Arguments to find a Products_files
     * @example
     * // Get one Products_files
     * const products_files = await prisma.products_files.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends products_filesFindFirstArgs>(args?: SelectSubset<T, products_filesFindFirstArgs<ExtArgs>>): Prisma__products_filesClient<$Result.GetResult<Prisma.$products_filesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Products_files that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {products_filesFindFirstOrThrowArgs} args - Arguments to find a Products_files
     * @example
     * // Get one Products_files
     * const products_files = await prisma.products_files.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends products_filesFindFirstOrThrowArgs>(args?: SelectSubset<T, products_filesFindFirstOrThrowArgs<ExtArgs>>): Prisma__products_filesClient<$Result.GetResult<Prisma.$products_filesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Products_files that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {products_filesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Products_files
     * const products_files = await prisma.products_files.findMany()
     * 
     * // Get first 10 Products_files
     * const products_files = await prisma.products_files.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const products_filesWithIdOnly = await prisma.products_files.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends products_filesFindManyArgs>(args?: SelectSubset<T, products_filesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$products_filesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Products_files.
     * @param {products_filesCreateArgs} args - Arguments to create a Products_files.
     * @example
     * // Create one Products_files
     * const Products_files = await prisma.products_files.create({
     *   data: {
     *     // ... data to create a Products_files
     *   }
     * })
     * 
     */
    create<T extends products_filesCreateArgs>(args: SelectSubset<T, products_filesCreateArgs<ExtArgs>>): Prisma__products_filesClient<$Result.GetResult<Prisma.$products_filesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Products_files.
     * @param {products_filesCreateManyArgs} args - Arguments to create many Products_files.
     * @example
     * // Create many Products_files
     * const products_files = await prisma.products_files.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends products_filesCreateManyArgs>(args?: SelectSubset<T, products_filesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Products_files and returns the data saved in the database.
     * @param {products_filesCreateManyAndReturnArgs} args - Arguments to create many Products_files.
     * @example
     * // Create many Products_files
     * const products_files = await prisma.products_files.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Products_files and only return the `id`
     * const products_filesWithIdOnly = await prisma.products_files.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends products_filesCreateManyAndReturnArgs>(args?: SelectSubset<T, products_filesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$products_filesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Products_files.
     * @param {products_filesDeleteArgs} args - Arguments to delete one Products_files.
     * @example
     * // Delete one Products_files
     * const Products_files = await prisma.products_files.delete({
     *   where: {
     *     // ... filter to delete one Products_files
     *   }
     * })
     * 
     */
    delete<T extends products_filesDeleteArgs>(args: SelectSubset<T, products_filesDeleteArgs<ExtArgs>>): Prisma__products_filesClient<$Result.GetResult<Prisma.$products_filesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Products_files.
     * @param {products_filesUpdateArgs} args - Arguments to update one Products_files.
     * @example
     * // Update one Products_files
     * const products_files = await prisma.products_files.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends products_filesUpdateArgs>(args: SelectSubset<T, products_filesUpdateArgs<ExtArgs>>): Prisma__products_filesClient<$Result.GetResult<Prisma.$products_filesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Products_files.
     * @param {products_filesDeleteManyArgs} args - Arguments to filter Products_files to delete.
     * @example
     * // Delete a few Products_files
     * const { count } = await prisma.products_files.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends products_filesDeleteManyArgs>(args?: SelectSubset<T, products_filesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Products_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {products_filesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Products_files
     * const products_files = await prisma.products_files.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends products_filesUpdateManyArgs>(args: SelectSubset<T, products_filesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Products_files and returns the data updated in the database.
     * @param {products_filesUpdateManyAndReturnArgs} args - Arguments to update many Products_files.
     * @example
     * // Update many Products_files
     * const products_files = await prisma.products_files.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Products_files and only return the `id`
     * const products_filesWithIdOnly = await prisma.products_files.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends products_filesUpdateManyAndReturnArgs>(args: SelectSubset<T, products_filesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$products_filesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Products_files.
     * @param {products_filesUpsertArgs} args - Arguments to update or create a Products_files.
     * @example
     * // Update or create a Products_files
     * const products_files = await prisma.products_files.upsert({
     *   create: {
     *     // ... data to create a Products_files
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Products_files we want to update
     *   }
     * })
     */
    upsert<T extends products_filesUpsertArgs>(args: SelectSubset<T, products_filesUpsertArgs<ExtArgs>>): Prisma__products_filesClient<$Result.GetResult<Prisma.$products_filesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Products_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {products_filesCountArgs} args - Arguments to filter Products_files to count.
     * @example
     * // Count the number of Products_files
     * const count = await prisma.products_files.count({
     *   where: {
     *     // ... the filter for the Products_files we want to count
     *   }
     * })
    **/
    count<T extends products_filesCountArgs>(
      args?: Subset<T, products_filesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Products_filesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Products_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Products_filesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Products_filesAggregateArgs>(args: Subset<T, Products_filesAggregateArgs>): Prisma.PrismaPromise<GetProducts_filesAggregateType<T>>

    /**
     * Group by Products_files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {products_filesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends products_filesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: products_filesGroupByArgs['orderBy'] }
        : { orderBy?: products_filesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, products_filesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProducts_filesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the products_files model
   */
  readonly fields: products_filesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for products_files.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__products_filesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    files<T extends filesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, filesDefaultArgs<ExtArgs>>): Prisma__filesClient<$Result.GetResult<Prisma.$filesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    products<T extends productsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, productsDefaultArgs<ExtArgs>>): Prisma__productsClient<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the products_files model
   */
  interface products_filesFieldRefs {
    readonly id: FieldRef<"products_files", 'BigInt'>
    readonly product_id: FieldRef<"products_files", 'BigInt'>
    readonly file_id: FieldRef<"products_files", 'BigInt'>
    readonly sort: FieldRef<"products_files", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * products_files findUnique
   */
  export type products_filesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products_files
     */
    select?: products_filesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products_files
     */
    omit?: products_filesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: products_filesInclude<ExtArgs> | null
    /**
     * Filter, which products_files to fetch.
     */
    where: products_filesWhereUniqueInput
  }

  /**
   * products_files findUniqueOrThrow
   */
  export type products_filesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products_files
     */
    select?: products_filesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products_files
     */
    omit?: products_filesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: products_filesInclude<ExtArgs> | null
    /**
     * Filter, which products_files to fetch.
     */
    where: products_filesWhereUniqueInput
  }

  /**
   * products_files findFirst
   */
  export type products_filesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products_files
     */
    select?: products_filesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products_files
     */
    omit?: products_filesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: products_filesInclude<ExtArgs> | null
    /**
     * Filter, which products_files to fetch.
     */
    where?: products_filesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of products_files to fetch.
     */
    orderBy?: products_filesOrderByWithRelationInput | products_filesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for products_files.
     */
    cursor?: products_filesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` products_files from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` products_files.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of products_files.
     */
    distinct?: Products_filesScalarFieldEnum | Products_filesScalarFieldEnum[]
  }

  /**
   * products_files findFirstOrThrow
   */
  export type products_filesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products_files
     */
    select?: products_filesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products_files
     */
    omit?: products_filesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: products_filesInclude<ExtArgs> | null
    /**
     * Filter, which products_files to fetch.
     */
    where?: products_filesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of products_files to fetch.
     */
    orderBy?: products_filesOrderByWithRelationInput | products_filesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for products_files.
     */
    cursor?: products_filesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` products_files from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` products_files.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of products_files.
     */
    distinct?: Products_filesScalarFieldEnum | Products_filesScalarFieldEnum[]
  }

  /**
   * products_files findMany
   */
  export type products_filesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products_files
     */
    select?: products_filesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products_files
     */
    omit?: products_filesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: products_filesInclude<ExtArgs> | null
    /**
     * Filter, which products_files to fetch.
     */
    where?: products_filesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of products_files to fetch.
     */
    orderBy?: products_filesOrderByWithRelationInput | products_filesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing products_files.
     */
    cursor?: products_filesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` products_files from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` products_files.
     */
    skip?: number
    distinct?: Products_filesScalarFieldEnum | Products_filesScalarFieldEnum[]
  }

  /**
   * products_files create
   */
  export type products_filesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products_files
     */
    select?: products_filesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products_files
     */
    omit?: products_filesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: products_filesInclude<ExtArgs> | null
    /**
     * The data needed to create a products_files.
     */
    data: XOR<products_filesCreateInput, products_filesUncheckedCreateInput>
  }

  /**
   * products_files createMany
   */
  export type products_filesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many products_files.
     */
    data: products_filesCreateManyInput | products_filesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * products_files createManyAndReturn
   */
  export type products_filesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products_files
     */
    select?: products_filesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the products_files
     */
    omit?: products_filesOmit<ExtArgs> | null
    /**
     * The data used to create many products_files.
     */
    data: products_filesCreateManyInput | products_filesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: products_filesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * products_files update
   */
  export type products_filesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products_files
     */
    select?: products_filesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products_files
     */
    omit?: products_filesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: products_filesInclude<ExtArgs> | null
    /**
     * The data needed to update a products_files.
     */
    data: XOR<products_filesUpdateInput, products_filesUncheckedUpdateInput>
    /**
     * Choose, which products_files to update.
     */
    where: products_filesWhereUniqueInput
  }

  /**
   * products_files updateMany
   */
  export type products_filesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update products_files.
     */
    data: XOR<products_filesUpdateManyMutationInput, products_filesUncheckedUpdateManyInput>
    /**
     * Filter which products_files to update
     */
    where?: products_filesWhereInput
    /**
     * Limit how many products_files to update.
     */
    limit?: number
  }

  /**
   * products_files updateManyAndReturn
   */
  export type products_filesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products_files
     */
    select?: products_filesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the products_files
     */
    omit?: products_filesOmit<ExtArgs> | null
    /**
     * The data used to update products_files.
     */
    data: XOR<products_filesUpdateManyMutationInput, products_filesUncheckedUpdateManyInput>
    /**
     * Filter which products_files to update
     */
    where?: products_filesWhereInput
    /**
     * Limit how many products_files to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: products_filesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * products_files upsert
   */
  export type products_filesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products_files
     */
    select?: products_filesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products_files
     */
    omit?: products_filesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: products_filesInclude<ExtArgs> | null
    /**
     * The filter to search for the products_files to update in case it exists.
     */
    where: products_filesWhereUniqueInput
    /**
     * In case the products_files found by the `where` argument doesn't exist, create a new products_files with this data.
     */
    create: XOR<products_filesCreateInput, products_filesUncheckedCreateInput>
    /**
     * In case the products_files was found with the provided `where` argument, update it with this data.
     */
    update: XOR<products_filesUpdateInput, products_filesUncheckedUpdateInput>
  }

  /**
   * products_files delete
   */
  export type products_filesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products_files
     */
    select?: products_filesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products_files
     */
    omit?: products_filesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: products_filesInclude<ExtArgs> | null
    /**
     * Filter which products_files to delete.
     */
    where: products_filesWhereUniqueInput
  }

  /**
   * products_files deleteMany
   */
  export type products_filesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which products_files to delete
     */
    where?: products_filesWhereInput
    /**
     * Limit how many products_files to delete.
     */
    limit?: number
  }

  /**
   * products_files without action
   */
  export type products_filesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products_files
     */
    select?: products_filesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products_files
     */
    omit?: products_filesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: products_filesInclude<ExtArgs> | null
  }


  /**
   * Model user_sessions
   */

  export type AggregateUser_sessions = {
    _count: User_sessionsCountAggregateOutputType | null
    _min: User_sessionsMinAggregateOutputType | null
    _max: User_sessionsMaxAggregateOutputType | null
  }

  export type User_sessionsMinAggregateOutputType = {
    session_id: string | null
    user_id: string | null
    device_name: string | null
    device_finger: string | null
    user_agent: string | null
    revoked: boolean | null
    last_ip: string | null
    access_token: string | null
    refresh_token: string | null
    created_at: Date | null
    last_active: Date | null
  }

  export type User_sessionsMaxAggregateOutputType = {
    session_id: string | null
    user_id: string | null
    device_name: string | null
    device_finger: string | null
    user_agent: string | null
    revoked: boolean | null
    last_ip: string | null
    access_token: string | null
    refresh_token: string | null
    created_at: Date | null
    last_active: Date | null
  }

  export type User_sessionsCountAggregateOutputType = {
    session_id: number
    user_id: number
    device_name: number
    device_finger: number
    user_agent: number
    revoked: number
    last_ip: number
    access_token: number
    refresh_token: number
    created_at: number
    last_active: number
    _all: number
  }


  export type User_sessionsMinAggregateInputType = {
    session_id?: true
    user_id?: true
    device_name?: true
    device_finger?: true
    user_agent?: true
    revoked?: true
    last_ip?: true
    access_token?: true
    refresh_token?: true
    created_at?: true
    last_active?: true
  }

  export type User_sessionsMaxAggregateInputType = {
    session_id?: true
    user_id?: true
    device_name?: true
    device_finger?: true
    user_agent?: true
    revoked?: true
    last_ip?: true
    access_token?: true
    refresh_token?: true
    created_at?: true
    last_active?: true
  }

  export type User_sessionsCountAggregateInputType = {
    session_id?: true
    user_id?: true
    device_name?: true
    device_finger?: true
    user_agent?: true
    revoked?: true
    last_ip?: true
    access_token?: true
    refresh_token?: true
    created_at?: true
    last_active?: true
    _all?: true
  }

  export type User_sessionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_sessions to aggregate.
     */
    where?: user_sessionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_sessions to fetch.
     */
    orderBy?: user_sessionsOrderByWithRelationInput | user_sessionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: user_sessionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned user_sessions
    **/
    _count?: true | User_sessionsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_sessionsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_sessionsMaxAggregateInputType
  }

  export type GetUser_sessionsAggregateType<T extends User_sessionsAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_sessions]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_sessions[P]>
      : GetScalarType<T[P], AggregateUser_sessions[P]>
  }




  export type user_sessionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_sessionsWhereInput
    orderBy?: user_sessionsOrderByWithAggregationInput | user_sessionsOrderByWithAggregationInput[]
    by: User_sessionsScalarFieldEnum[] | User_sessionsScalarFieldEnum
    having?: user_sessionsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_sessionsCountAggregateInputType | true
    _min?: User_sessionsMinAggregateInputType
    _max?: User_sessionsMaxAggregateInputType
  }

  export type User_sessionsGroupByOutputType = {
    session_id: string
    user_id: string
    device_name: string
    device_finger: string
    user_agent: string
    revoked: boolean
    last_ip: string
    access_token: string | null
    refresh_token: string | null
    created_at: Date
    last_active: Date
    _count: User_sessionsCountAggregateOutputType | null
    _min: User_sessionsMinAggregateOutputType | null
    _max: User_sessionsMaxAggregateOutputType | null
  }

  type GetUser_sessionsGroupByPayload<T extends user_sessionsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<User_sessionsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_sessionsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_sessionsGroupByOutputType[P]>
            : GetScalarType<T[P], User_sessionsGroupByOutputType[P]>
        }
      >
    >


  export type user_sessionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    session_id?: boolean
    user_id?: boolean
    device_name?: boolean
    device_finger?: boolean
    user_agent?: boolean
    revoked?: boolean
    last_ip?: boolean
    access_token?: boolean
    refresh_token?: boolean
    created_at?: boolean
    last_active?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_sessions"]>

  export type user_sessionsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    session_id?: boolean
    user_id?: boolean
    device_name?: boolean
    device_finger?: boolean
    user_agent?: boolean
    revoked?: boolean
    last_ip?: boolean
    access_token?: boolean
    refresh_token?: boolean
    created_at?: boolean
    last_active?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_sessions"]>

  export type user_sessionsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    session_id?: boolean
    user_id?: boolean
    device_name?: boolean
    device_finger?: boolean
    user_agent?: boolean
    revoked?: boolean
    last_ip?: boolean
    access_token?: boolean
    refresh_token?: boolean
    created_at?: boolean
    last_active?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_sessions"]>

  export type user_sessionsSelectScalar = {
    session_id?: boolean
    user_id?: boolean
    device_name?: boolean
    device_finger?: boolean
    user_agent?: boolean
    revoked?: boolean
    last_ip?: boolean
    access_token?: boolean
    refresh_token?: boolean
    created_at?: boolean
    last_active?: boolean
  }

  export type user_sessionsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"session_id" | "user_id" | "device_name" | "device_finger" | "user_agent" | "revoked" | "last_ip" | "access_token" | "refresh_token" | "created_at" | "last_active", ExtArgs["result"]["user_sessions"]>
  export type user_sessionsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type user_sessionsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type user_sessionsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $user_sessionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user_sessions"
    objects: {
      users: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      session_id: string
      user_id: string
      device_name: string
      device_finger: string
      user_agent: string
      revoked: boolean
      last_ip: string
      access_token: string | null
      refresh_token: string | null
      created_at: Date
      last_active: Date
    }, ExtArgs["result"]["user_sessions"]>
    composites: {}
  }

  type user_sessionsGetPayload<S extends boolean | null | undefined | user_sessionsDefaultArgs> = $Result.GetResult<Prisma.$user_sessionsPayload, S>

  type user_sessionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<user_sessionsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: User_sessionsCountAggregateInputType | true
    }

  export interface user_sessionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user_sessions'], meta: { name: 'user_sessions' } }
    /**
     * Find zero or one User_sessions that matches the filter.
     * @param {user_sessionsFindUniqueArgs} args - Arguments to find a User_sessions
     * @example
     * // Get one User_sessions
     * const user_sessions = await prisma.user_sessions.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends user_sessionsFindUniqueArgs>(args: SelectSubset<T, user_sessionsFindUniqueArgs<ExtArgs>>): Prisma__user_sessionsClient<$Result.GetResult<Prisma.$user_sessionsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User_sessions that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {user_sessionsFindUniqueOrThrowArgs} args - Arguments to find a User_sessions
     * @example
     * // Get one User_sessions
     * const user_sessions = await prisma.user_sessions.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends user_sessionsFindUniqueOrThrowArgs>(args: SelectSubset<T, user_sessionsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__user_sessionsClient<$Result.GetResult<Prisma.$user_sessionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_sessions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_sessionsFindFirstArgs} args - Arguments to find a User_sessions
     * @example
     * // Get one User_sessions
     * const user_sessions = await prisma.user_sessions.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends user_sessionsFindFirstArgs>(args?: SelectSubset<T, user_sessionsFindFirstArgs<ExtArgs>>): Prisma__user_sessionsClient<$Result.GetResult<Prisma.$user_sessionsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_sessions that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_sessionsFindFirstOrThrowArgs} args - Arguments to find a User_sessions
     * @example
     * // Get one User_sessions
     * const user_sessions = await prisma.user_sessions.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends user_sessionsFindFirstOrThrowArgs>(args?: SelectSubset<T, user_sessionsFindFirstOrThrowArgs<ExtArgs>>): Prisma__user_sessionsClient<$Result.GetResult<Prisma.$user_sessionsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more User_sessions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_sessionsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_sessions
     * const user_sessions = await prisma.user_sessions.findMany()
     * 
     * // Get first 10 User_sessions
     * const user_sessions = await prisma.user_sessions.findMany({ take: 10 })
     * 
     * // Only select the `session_id`
     * const user_sessionsWithSession_idOnly = await prisma.user_sessions.findMany({ select: { session_id: true } })
     * 
     */
    findMany<T extends user_sessionsFindManyArgs>(args?: SelectSubset<T, user_sessionsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_sessionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User_sessions.
     * @param {user_sessionsCreateArgs} args - Arguments to create a User_sessions.
     * @example
     * // Create one User_sessions
     * const User_sessions = await prisma.user_sessions.create({
     *   data: {
     *     // ... data to create a User_sessions
     *   }
     * })
     * 
     */
    create<T extends user_sessionsCreateArgs>(args: SelectSubset<T, user_sessionsCreateArgs<ExtArgs>>): Prisma__user_sessionsClient<$Result.GetResult<Prisma.$user_sessionsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many User_sessions.
     * @param {user_sessionsCreateManyArgs} args - Arguments to create many User_sessions.
     * @example
     * // Create many User_sessions
     * const user_sessions = await prisma.user_sessions.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends user_sessionsCreateManyArgs>(args?: SelectSubset<T, user_sessionsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many User_sessions and returns the data saved in the database.
     * @param {user_sessionsCreateManyAndReturnArgs} args - Arguments to create many User_sessions.
     * @example
     * // Create many User_sessions
     * const user_sessions = await prisma.user_sessions.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many User_sessions and only return the `session_id`
     * const user_sessionsWithSession_idOnly = await prisma.user_sessions.createManyAndReturn({
     *   select: { session_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends user_sessionsCreateManyAndReturnArgs>(args?: SelectSubset<T, user_sessionsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_sessionsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User_sessions.
     * @param {user_sessionsDeleteArgs} args - Arguments to delete one User_sessions.
     * @example
     * // Delete one User_sessions
     * const User_sessions = await prisma.user_sessions.delete({
     *   where: {
     *     // ... filter to delete one User_sessions
     *   }
     * })
     * 
     */
    delete<T extends user_sessionsDeleteArgs>(args: SelectSubset<T, user_sessionsDeleteArgs<ExtArgs>>): Prisma__user_sessionsClient<$Result.GetResult<Prisma.$user_sessionsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User_sessions.
     * @param {user_sessionsUpdateArgs} args - Arguments to update one User_sessions.
     * @example
     * // Update one User_sessions
     * const user_sessions = await prisma.user_sessions.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends user_sessionsUpdateArgs>(args: SelectSubset<T, user_sessionsUpdateArgs<ExtArgs>>): Prisma__user_sessionsClient<$Result.GetResult<Prisma.$user_sessionsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more User_sessions.
     * @param {user_sessionsDeleteManyArgs} args - Arguments to filter User_sessions to delete.
     * @example
     * // Delete a few User_sessions
     * const { count } = await prisma.user_sessions.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends user_sessionsDeleteManyArgs>(args?: SelectSubset<T, user_sessionsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_sessionsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_sessions
     * const user_sessions = await prisma.user_sessions.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends user_sessionsUpdateManyArgs>(args: SelectSubset<T, user_sessionsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_sessions and returns the data updated in the database.
     * @param {user_sessionsUpdateManyAndReturnArgs} args - Arguments to update many User_sessions.
     * @example
     * // Update many User_sessions
     * const user_sessions = await prisma.user_sessions.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more User_sessions and only return the `session_id`
     * const user_sessionsWithSession_idOnly = await prisma.user_sessions.updateManyAndReturn({
     *   select: { session_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends user_sessionsUpdateManyAndReturnArgs>(args: SelectSubset<T, user_sessionsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_sessionsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User_sessions.
     * @param {user_sessionsUpsertArgs} args - Arguments to update or create a User_sessions.
     * @example
     * // Update or create a User_sessions
     * const user_sessions = await prisma.user_sessions.upsert({
     *   create: {
     *     // ... data to create a User_sessions
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_sessions we want to update
     *   }
     * })
     */
    upsert<T extends user_sessionsUpsertArgs>(args: SelectSubset<T, user_sessionsUpsertArgs<ExtArgs>>): Prisma__user_sessionsClient<$Result.GetResult<Prisma.$user_sessionsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of User_sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_sessionsCountArgs} args - Arguments to filter User_sessions to count.
     * @example
     * // Count the number of User_sessions
     * const count = await prisma.user_sessions.count({
     *   where: {
     *     // ... the filter for the User_sessions we want to count
     *   }
     * })
    **/
    count<T extends user_sessionsCountArgs>(
      args?: Subset<T, user_sessionsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_sessionsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_sessionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_sessionsAggregateArgs>(args: Subset<T, User_sessionsAggregateArgs>): Prisma.PrismaPromise<GetUser_sessionsAggregateType<T>>

    /**
     * Group by User_sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_sessionsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends user_sessionsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: user_sessionsGroupByArgs['orderBy'] }
        : { orderBy?: user_sessionsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, user_sessionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_sessionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user_sessions model
   */
  readonly fields: user_sessionsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user_sessions.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__user_sessionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the user_sessions model
   */
  interface user_sessionsFieldRefs {
    readonly session_id: FieldRef<"user_sessions", 'String'>
    readonly user_id: FieldRef<"user_sessions", 'String'>
    readonly device_name: FieldRef<"user_sessions", 'String'>
    readonly device_finger: FieldRef<"user_sessions", 'String'>
    readonly user_agent: FieldRef<"user_sessions", 'String'>
    readonly revoked: FieldRef<"user_sessions", 'Boolean'>
    readonly last_ip: FieldRef<"user_sessions", 'String'>
    readonly access_token: FieldRef<"user_sessions", 'String'>
    readonly refresh_token: FieldRef<"user_sessions", 'String'>
    readonly created_at: FieldRef<"user_sessions", 'DateTime'>
    readonly last_active: FieldRef<"user_sessions", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * user_sessions findUnique
   */
  export type user_sessionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_sessions
     */
    select?: user_sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_sessions
     */
    omit?: user_sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_sessionsInclude<ExtArgs> | null
    /**
     * Filter, which user_sessions to fetch.
     */
    where: user_sessionsWhereUniqueInput
  }

  /**
   * user_sessions findUniqueOrThrow
   */
  export type user_sessionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_sessions
     */
    select?: user_sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_sessions
     */
    omit?: user_sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_sessionsInclude<ExtArgs> | null
    /**
     * Filter, which user_sessions to fetch.
     */
    where: user_sessionsWhereUniqueInput
  }

  /**
   * user_sessions findFirst
   */
  export type user_sessionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_sessions
     */
    select?: user_sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_sessions
     */
    omit?: user_sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_sessionsInclude<ExtArgs> | null
    /**
     * Filter, which user_sessions to fetch.
     */
    where?: user_sessionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_sessions to fetch.
     */
    orderBy?: user_sessionsOrderByWithRelationInput | user_sessionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_sessions.
     */
    cursor?: user_sessionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_sessions.
     */
    distinct?: User_sessionsScalarFieldEnum | User_sessionsScalarFieldEnum[]
  }

  /**
   * user_sessions findFirstOrThrow
   */
  export type user_sessionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_sessions
     */
    select?: user_sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_sessions
     */
    omit?: user_sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_sessionsInclude<ExtArgs> | null
    /**
     * Filter, which user_sessions to fetch.
     */
    where?: user_sessionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_sessions to fetch.
     */
    orderBy?: user_sessionsOrderByWithRelationInput | user_sessionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_sessions.
     */
    cursor?: user_sessionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_sessions.
     */
    distinct?: User_sessionsScalarFieldEnum | User_sessionsScalarFieldEnum[]
  }

  /**
   * user_sessions findMany
   */
  export type user_sessionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_sessions
     */
    select?: user_sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_sessions
     */
    omit?: user_sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_sessionsInclude<ExtArgs> | null
    /**
     * Filter, which user_sessions to fetch.
     */
    where?: user_sessionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_sessions to fetch.
     */
    orderBy?: user_sessionsOrderByWithRelationInput | user_sessionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing user_sessions.
     */
    cursor?: user_sessionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_sessions.
     */
    skip?: number
    distinct?: User_sessionsScalarFieldEnum | User_sessionsScalarFieldEnum[]
  }

  /**
   * user_sessions create
   */
  export type user_sessionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_sessions
     */
    select?: user_sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_sessions
     */
    omit?: user_sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_sessionsInclude<ExtArgs> | null
    /**
     * The data needed to create a user_sessions.
     */
    data: XOR<user_sessionsCreateInput, user_sessionsUncheckedCreateInput>
  }

  /**
   * user_sessions createMany
   */
  export type user_sessionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many user_sessions.
     */
    data: user_sessionsCreateManyInput | user_sessionsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_sessions createManyAndReturn
   */
  export type user_sessionsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_sessions
     */
    select?: user_sessionsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_sessions
     */
    omit?: user_sessionsOmit<ExtArgs> | null
    /**
     * The data used to create many user_sessions.
     */
    data: user_sessionsCreateManyInput | user_sessionsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_sessionsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_sessions update
   */
  export type user_sessionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_sessions
     */
    select?: user_sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_sessions
     */
    omit?: user_sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_sessionsInclude<ExtArgs> | null
    /**
     * The data needed to update a user_sessions.
     */
    data: XOR<user_sessionsUpdateInput, user_sessionsUncheckedUpdateInput>
    /**
     * Choose, which user_sessions to update.
     */
    where: user_sessionsWhereUniqueInput
  }

  /**
   * user_sessions updateMany
   */
  export type user_sessionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update user_sessions.
     */
    data: XOR<user_sessionsUpdateManyMutationInput, user_sessionsUncheckedUpdateManyInput>
    /**
     * Filter which user_sessions to update
     */
    where?: user_sessionsWhereInput
    /**
     * Limit how many user_sessions to update.
     */
    limit?: number
  }

  /**
   * user_sessions updateManyAndReturn
   */
  export type user_sessionsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_sessions
     */
    select?: user_sessionsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_sessions
     */
    omit?: user_sessionsOmit<ExtArgs> | null
    /**
     * The data used to update user_sessions.
     */
    data: XOR<user_sessionsUpdateManyMutationInput, user_sessionsUncheckedUpdateManyInput>
    /**
     * Filter which user_sessions to update
     */
    where?: user_sessionsWhereInput
    /**
     * Limit how many user_sessions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_sessionsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_sessions upsert
   */
  export type user_sessionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_sessions
     */
    select?: user_sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_sessions
     */
    omit?: user_sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_sessionsInclude<ExtArgs> | null
    /**
     * The filter to search for the user_sessions to update in case it exists.
     */
    where: user_sessionsWhereUniqueInput
    /**
     * In case the user_sessions found by the `where` argument doesn't exist, create a new user_sessions with this data.
     */
    create: XOR<user_sessionsCreateInput, user_sessionsUncheckedCreateInput>
    /**
     * In case the user_sessions was found with the provided `where` argument, update it with this data.
     */
    update: XOR<user_sessionsUpdateInput, user_sessionsUncheckedUpdateInput>
  }

  /**
   * user_sessions delete
   */
  export type user_sessionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_sessions
     */
    select?: user_sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_sessions
     */
    omit?: user_sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_sessionsInclude<ExtArgs> | null
    /**
     * Filter which user_sessions to delete.
     */
    where: user_sessionsWhereUniqueInput
  }

  /**
   * user_sessions deleteMany
   */
  export type user_sessionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_sessions to delete
     */
    where?: user_sessionsWhereInput
    /**
     * Limit how many user_sessions to delete.
     */
    limit?: number
  }

  /**
   * user_sessions without action
   */
  export type user_sessionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_sessions
     */
    select?: user_sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_sessions
     */
    omit?: user_sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_sessionsInclude<ExtArgs> | null
  }


  /**
   * Model users
   */

  export type AggregateUsers = {
    _count: UsersCountAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  export type UsersMinAggregateOutputType = {
    id: string | null
    user_id: string | null
    first_name: string | null
    last_name: string | null
    username: string | null
    password: string | null
    email: string | null
    telephone: string | null
    status: $Enums.UserStatus | null
    created_at: Date | null
    updated_at: Date | null
    role: $Enums.UserRole | null
    cif: string | null
  }

  export type UsersMaxAggregateOutputType = {
    id: string | null
    user_id: string | null
    first_name: string | null
    last_name: string | null
    username: string | null
    password: string | null
    email: string | null
    telephone: string | null
    status: $Enums.UserStatus | null
    created_at: Date | null
    updated_at: Date | null
    role: $Enums.UserRole | null
    cif: string | null
  }

  export type UsersCountAggregateOutputType = {
    id: number
    user_id: number
    first_name: number
    last_name: number
    username: number
    password: number
    email: number
    telephone: number
    status: number
    profile: number
    created_at: number
    updated_at: number
    role: number
    cif: number
    _all: number
  }


  export type UsersMinAggregateInputType = {
    id?: true
    user_id?: true
    first_name?: true
    last_name?: true
    username?: true
    password?: true
    email?: true
    telephone?: true
    status?: true
    created_at?: true
    updated_at?: true
    role?: true
    cif?: true
  }

  export type UsersMaxAggregateInputType = {
    id?: true
    user_id?: true
    first_name?: true
    last_name?: true
    username?: true
    password?: true
    email?: true
    telephone?: true
    status?: true
    created_at?: true
    updated_at?: true
    role?: true
    cif?: true
  }

  export type UsersCountAggregateInputType = {
    id?: true
    user_id?: true
    first_name?: true
    last_name?: true
    username?: true
    password?: true
    email?: true
    telephone?: true
    status?: true
    profile?: true
    created_at?: true
    updated_at?: true
    role?: true
    cif?: true
    _all?: true
  }

  export type UsersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to aggregate.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned users
    **/
    _count?: true | UsersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsersMaxAggregateInputType
  }

  export type GetUsersAggregateType<T extends UsersAggregateArgs> = {
        [P in keyof T & keyof AggregateUsers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsers[P]>
      : GetScalarType<T[P], AggregateUsers[P]>
  }




  export type usersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usersWhereInput
    orderBy?: usersOrderByWithAggregationInput | usersOrderByWithAggregationInput[]
    by: UsersScalarFieldEnum[] | UsersScalarFieldEnum
    having?: usersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsersCountAggregateInputType | true
    _min?: UsersMinAggregateInputType
    _max?: UsersMaxAggregateInputType
  }

  export type UsersGroupByOutputType = {
    id: string
    user_id: string | null
    first_name: string | null
    last_name: string | null
    username: string | null
    password: string
    email: string | null
    telephone: string | null
    status: $Enums.UserStatus
    profile: JsonValue | null
    created_at: Date
    updated_at: Date | null
    role: $Enums.UserRole
    cif: string | null
    _count: UsersCountAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  type GetUsersGroupByPayload<T extends usersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsersGroupByOutputType[P]>
            : GetScalarType<T[P], UsersGroupByOutputType[P]>
        }
      >
    >


  export type usersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    first_name?: boolean
    last_name?: boolean
    username?: boolean
    password?: boolean
    email?: boolean
    telephone?: boolean
    status?: boolean
    profile?: boolean
    created_at?: boolean
    updated_at?: boolean
    role?: boolean
    cif?: boolean
    carts?: boolean | users$cartsArgs<ExtArgs>
    categories?: boolean | users$categoriesArgs<ExtArgs>
    chat_participants?: boolean | users$chat_participantsArgs<ExtArgs>
    configurations?: boolean | users$configurationsArgs<ExtArgs>
    deliveries?: boolean | users$deliveriesArgs<ExtArgs>
    direction?: boolean | users$directionArgs<ExtArgs>
    discounts?: boolean | users$discountsArgs<ExtArgs>
    messages?: boolean | users$messagesArgs<ExtArgs>
    notifications?: boolean | users$notificationsArgs<ExtArgs>
    orders_orders_retailer_idTousers?: boolean | users$orders_orders_retailer_idTousersArgs<ExtArgs>
    orders_orders_wholesaler_idTousers?: boolean | users$orders_orders_wholesaler_idTousersArgs<ExtArgs>
    products?: boolean | users$productsArgs<ExtArgs>
    user_sessions?: boolean | users$user_sessionsArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["users"]>

  export type usersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    first_name?: boolean
    last_name?: boolean
    username?: boolean
    password?: boolean
    email?: boolean
    telephone?: boolean
    status?: boolean
    profile?: boolean
    created_at?: boolean
    updated_at?: boolean
    role?: boolean
    cif?: boolean
  }, ExtArgs["result"]["users"]>

  export type usersSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    first_name?: boolean
    last_name?: boolean
    username?: boolean
    password?: boolean
    email?: boolean
    telephone?: boolean
    status?: boolean
    profile?: boolean
    created_at?: boolean
    updated_at?: boolean
    role?: boolean
    cif?: boolean
  }, ExtArgs["result"]["users"]>

  export type usersSelectScalar = {
    id?: boolean
    user_id?: boolean
    first_name?: boolean
    last_name?: boolean
    username?: boolean
    password?: boolean
    email?: boolean
    telephone?: boolean
    status?: boolean
    profile?: boolean
    created_at?: boolean
    updated_at?: boolean
    role?: boolean
    cif?: boolean
  }

  export type usersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "first_name" | "last_name" | "username" | "password" | "email" | "telephone" | "status" | "profile" | "created_at" | "updated_at" | "role" | "cif", ExtArgs["result"]["users"]>
  export type usersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    carts?: boolean | users$cartsArgs<ExtArgs>
    categories?: boolean | users$categoriesArgs<ExtArgs>
    chat_participants?: boolean | users$chat_participantsArgs<ExtArgs>
    configurations?: boolean | users$configurationsArgs<ExtArgs>
    deliveries?: boolean | users$deliveriesArgs<ExtArgs>
    direction?: boolean | users$directionArgs<ExtArgs>
    discounts?: boolean | users$discountsArgs<ExtArgs>
    messages?: boolean | users$messagesArgs<ExtArgs>
    notifications?: boolean | users$notificationsArgs<ExtArgs>
    orders_orders_retailer_idTousers?: boolean | users$orders_orders_retailer_idTousersArgs<ExtArgs>
    orders_orders_wholesaler_idTousers?: boolean | users$orders_orders_wholesaler_idTousersArgs<ExtArgs>
    products?: boolean | users$productsArgs<ExtArgs>
    user_sessions?: boolean | users$user_sessionsArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type usersIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type usersIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $usersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "users"
    objects: {
      carts: Prisma.$cartsPayload<ExtArgs>[]
      categories: Prisma.$categoriesPayload<ExtArgs>[]
      chat_participants: Prisma.$chat_participantsPayload<ExtArgs>[]
      configurations: Prisma.$configurationsPayload<ExtArgs>[]
      deliveries: Prisma.$deliveriesPayload<ExtArgs>[]
      direction: Prisma.$directionPayload<ExtArgs>[]
      discounts: Prisma.$discountsPayload<ExtArgs>[]
      messages: Prisma.$messagesPayload<ExtArgs>[]
      notifications: Prisma.$notificationsPayload<ExtArgs>[]
      orders_orders_retailer_idTousers: Prisma.$ordersPayload<ExtArgs>[]
      orders_orders_wholesaler_idTousers: Prisma.$ordersPayload<ExtArgs>[]
      products: Prisma.$productsPayload<ExtArgs>[]
      user_sessions: Prisma.$user_sessionsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      user_id: string | null
      first_name: string | null
      last_name: string | null
      username: string | null
      password: string
      email: string | null
      telephone: string | null
      status: $Enums.UserStatus
      profile: Prisma.JsonValue | null
      created_at: Date
      updated_at: Date | null
      role: $Enums.UserRole
      cif: string | null
    }, ExtArgs["result"]["users"]>
    composites: {}
  }

  type usersGetPayload<S extends boolean | null | undefined | usersDefaultArgs> = $Result.GetResult<Prisma.$usersPayload, S>

  type usersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<usersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsersCountAggregateInputType | true
    }

  export interface usersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['users'], meta: { name: 'users' } }
    /**
     * Find zero or one Users that matches the filter.
     * @param {usersFindUniqueArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends usersFindUniqueArgs>(args: SelectSubset<T, usersFindUniqueArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Users that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {usersFindUniqueOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends usersFindUniqueOrThrowArgs>(args: SelectSubset<T, usersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends usersFindFirstArgs>(args?: SelectSubset<T, usersFindFirstArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Users that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends usersFindFirstOrThrowArgs>(args?: SelectSubset<T, usersFindFirstOrThrowArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.users.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.users.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const usersWithIdOnly = await prisma.users.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends usersFindManyArgs>(args?: SelectSubset<T, usersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Users.
     * @param {usersCreateArgs} args - Arguments to create a Users.
     * @example
     * // Create one Users
     * const Users = await prisma.users.create({
     *   data: {
     *     // ... data to create a Users
     *   }
     * })
     * 
     */
    create<T extends usersCreateArgs>(args: SelectSubset<T, usersCreateArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {usersCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const users = await prisma.users.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends usersCreateManyArgs>(args?: SelectSubset<T, usersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {usersCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const users = await prisma.users.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const usersWithIdOnly = await prisma.users.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends usersCreateManyAndReturnArgs>(args?: SelectSubset<T, usersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Users.
     * @param {usersDeleteArgs} args - Arguments to delete one Users.
     * @example
     * // Delete one Users
     * const Users = await prisma.users.delete({
     *   where: {
     *     // ... filter to delete one Users
     *   }
     * })
     * 
     */
    delete<T extends usersDeleteArgs>(args: SelectSubset<T, usersDeleteArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Users.
     * @param {usersUpdateArgs} args - Arguments to update one Users.
     * @example
     * // Update one Users
     * const users = await prisma.users.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends usersUpdateArgs>(args: SelectSubset<T, usersUpdateArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {usersDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.users.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends usersDeleteManyArgs>(args?: SelectSubset<T, usersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends usersUpdateManyArgs>(args: SelectSubset<T, usersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {usersUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `id`
     * const usersWithIdOnly = await prisma.users.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends usersUpdateManyAndReturnArgs>(args: SelectSubset<T, usersUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Users.
     * @param {usersUpsertArgs} args - Arguments to update or create a Users.
     * @example
     * // Update or create a Users
     * const users = await prisma.users.upsert({
     *   create: {
     *     // ... data to create a Users
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Users we want to update
     *   }
     * })
     */
    upsert<T extends usersUpsertArgs>(args: SelectSubset<T, usersUpsertArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.users.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends usersCountArgs>(
      args?: Subset<T, usersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsersAggregateArgs>(args: Subset<T, UsersAggregateArgs>): Prisma.PrismaPromise<GetUsersAggregateType<T>>

    /**
     * Group by Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends usersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: usersGroupByArgs['orderBy'] }
        : { orderBy?: usersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, usersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the users model
   */
  readonly fields: usersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for users.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__usersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    carts<T extends users$cartsArgs<ExtArgs> = {}>(args?: Subset<T, users$cartsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cartsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    categories<T extends users$categoriesArgs<ExtArgs> = {}>(args?: Subset<T, users$categoriesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$categoriesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    chat_participants<T extends users$chat_participantsArgs<ExtArgs> = {}>(args?: Subset<T, users$chat_participantsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$chat_participantsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    configurations<T extends users$configurationsArgs<ExtArgs> = {}>(args?: Subset<T, users$configurationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$configurationsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    deliveries<T extends users$deliveriesArgs<ExtArgs> = {}>(args?: Subset<T, users$deliveriesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$deliveriesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    direction<T extends users$directionArgs<ExtArgs> = {}>(args?: Subset<T, users$directionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$directionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    discounts<T extends users$discountsArgs<ExtArgs> = {}>(args?: Subset<T, users$discountsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$discountsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    messages<T extends users$messagesArgs<ExtArgs> = {}>(args?: Subset<T, users$messagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$messagesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    notifications<T extends users$notificationsArgs<ExtArgs> = {}>(args?: Subset<T, users$notificationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$notificationsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    orders_orders_retailer_idTousers<T extends users$orders_orders_retailer_idTousersArgs<ExtArgs> = {}>(args?: Subset<T, users$orders_orders_retailer_idTousersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    orders_orders_wholesaler_idTousers<T extends users$orders_orders_wholesaler_idTousersArgs<ExtArgs> = {}>(args?: Subset<T, users$orders_orders_wholesaler_idTousersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    products<T extends users$productsArgs<ExtArgs> = {}>(args?: Subset<T, users$productsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    user_sessions<T extends users$user_sessionsArgs<ExtArgs> = {}>(args?: Subset<T, users$user_sessionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_sessionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the users model
   */
  interface usersFieldRefs {
    readonly id: FieldRef<"users", 'String'>
    readonly user_id: FieldRef<"users", 'String'>
    readonly first_name: FieldRef<"users", 'String'>
    readonly last_name: FieldRef<"users", 'String'>
    readonly username: FieldRef<"users", 'String'>
    readonly password: FieldRef<"users", 'String'>
    readonly email: FieldRef<"users", 'String'>
    readonly telephone: FieldRef<"users", 'String'>
    readonly status: FieldRef<"users", 'UserStatus'>
    readonly profile: FieldRef<"users", 'Json'>
    readonly created_at: FieldRef<"users", 'DateTime'>
    readonly updated_at: FieldRef<"users", 'DateTime'>
    readonly role: FieldRef<"users", 'UserRole'>
    readonly cif: FieldRef<"users", 'String'>
  }
    

  // Custom InputTypes
  /**
   * users findUnique
   */
  export type usersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users findUniqueOrThrow
   */
  export type usersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users findFirst
   */
  export type usersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users findFirstOrThrow
   */
  export type usersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users findMany
   */
  export type usersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users create
   */
  export type usersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The data needed to create a users.
     */
    data: XOR<usersCreateInput, usersUncheckedCreateInput>
  }

  /**
   * users createMany
   */
  export type usersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many users.
     */
    data: usersCreateManyInput | usersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * users createManyAndReturn
   */
  export type usersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * The data used to create many users.
     */
    data: usersCreateManyInput | usersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * users update
   */
  export type usersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The data needed to update a users.
     */
    data: XOR<usersUpdateInput, usersUncheckedUpdateInput>
    /**
     * Choose, which users to update.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users updateMany
   */
  export type usersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update users.
     */
    data: XOR<usersUpdateManyMutationInput, usersUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     */
    where?: usersWhereInput
    /**
     * Limit how many users to update.
     */
    limit?: number
  }

  /**
   * users updateManyAndReturn
   */
  export type usersUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * The data used to update users.
     */
    data: XOR<usersUpdateManyMutationInput, usersUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     */
    where?: usersWhereInput
    /**
     * Limit how many users to update.
     */
    limit?: number
  }

  /**
   * users upsert
   */
  export type usersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The filter to search for the users to update in case it exists.
     */
    where: usersWhereUniqueInput
    /**
     * In case the users found by the `where` argument doesn't exist, create a new users with this data.
     */
    create: XOR<usersCreateInput, usersUncheckedCreateInput>
    /**
     * In case the users was found with the provided `where` argument, update it with this data.
     */
    update: XOR<usersUpdateInput, usersUncheckedUpdateInput>
  }

  /**
   * users delete
   */
  export type usersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter which users to delete.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users deleteMany
   */
  export type usersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to delete
     */
    where?: usersWhereInput
    /**
     * Limit how many users to delete.
     */
    limit?: number
  }

  /**
   * users.carts
   */
  export type users$cartsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the carts
     */
    select?: cartsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the carts
     */
    omit?: cartsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cartsInclude<ExtArgs> | null
    where?: cartsWhereInput
    orderBy?: cartsOrderByWithRelationInput | cartsOrderByWithRelationInput[]
    cursor?: cartsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CartsScalarFieldEnum | CartsScalarFieldEnum[]
  }

  /**
   * users.categories
   */
  export type users$categoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categories
     */
    select?: categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the categories
     */
    omit?: categoriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: categoriesInclude<ExtArgs> | null
    where?: categoriesWhereInput
    orderBy?: categoriesOrderByWithRelationInput | categoriesOrderByWithRelationInput[]
    cursor?: categoriesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CategoriesScalarFieldEnum | CategoriesScalarFieldEnum[]
  }

  /**
   * users.chat_participants
   */
  export type users$chat_participantsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the chat_participants
     */
    select?: chat_participantsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the chat_participants
     */
    omit?: chat_participantsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: chat_participantsInclude<ExtArgs> | null
    where?: chat_participantsWhereInput
    orderBy?: chat_participantsOrderByWithRelationInput | chat_participantsOrderByWithRelationInput[]
    cursor?: chat_participantsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Chat_participantsScalarFieldEnum | Chat_participantsScalarFieldEnum[]
  }

  /**
   * users.configurations
   */
  export type users$configurationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the configurations
     */
    select?: configurationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the configurations
     */
    omit?: configurationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: configurationsInclude<ExtArgs> | null
    where?: configurationsWhereInput
    orderBy?: configurationsOrderByWithRelationInput | configurationsOrderByWithRelationInput[]
    cursor?: configurationsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ConfigurationsScalarFieldEnum | ConfigurationsScalarFieldEnum[]
  }

  /**
   * users.deliveries
   */
  export type users$deliveriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the deliveries
     */
    select?: deliveriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the deliveries
     */
    omit?: deliveriesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: deliveriesInclude<ExtArgs> | null
    where?: deliveriesWhereInput
    orderBy?: deliveriesOrderByWithRelationInput | deliveriesOrderByWithRelationInput[]
    cursor?: deliveriesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DeliveriesScalarFieldEnum | DeliveriesScalarFieldEnum[]
  }

  /**
   * users.direction
   */
  export type users$directionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the direction
     */
    select?: directionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the direction
     */
    omit?: directionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: directionInclude<ExtArgs> | null
    where?: directionWhereInput
    orderBy?: directionOrderByWithRelationInput | directionOrderByWithRelationInput[]
    cursor?: directionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DirectionScalarFieldEnum | DirectionScalarFieldEnum[]
  }

  /**
   * users.discounts
   */
  export type users$discountsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the discounts
     */
    select?: discountsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the discounts
     */
    omit?: discountsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: discountsInclude<ExtArgs> | null
    where?: discountsWhereInput
    orderBy?: discountsOrderByWithRelationInput | discountsOrderByWithRelationInput[]
    cursor?: discountsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DiscountsScalarFieldEnum | DiscountsScalarFieldEnum[]
  }

  /**
   * users.messages
   */
  export type users$messagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the messages
     */
    select?: messagesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the messages
     */
    omit?: messagesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: messagesInclude<ExtArgs> | null
    where?: messagesWhereInput
    orderBy?: messagesOrderByWithRelationInput | messagesOrderByWithRelationInput[]
    cursor?: messagesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MessagesScalarFieldEnum | MessagesScalarFieldEnum[]
  }

  /**
   * users.notifications
   */
  export type users$notificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the notifications
     */
    select?: notificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the notifications
     */
    omit?: notificationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: notificationsInclude<ExtArgs> | null
    where?: notificationsWhereInput
    orderBy?: notificationsOrderByWithRelationInput | notificationsOrderByWithRelationInput[]
    cursor?: notificationsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NotificationsScalarFieldEnum | NotificationsScalarFieldEnum[]
  }

  /**
   * users.orders_orders_retailer_idTousers
   */
  export type users$orders_orders_retailer_idTousersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    where?: ordersWhereInput
    orderBy?: ordersOrderByWithRelationInput | ordersOrderByWithRelationInput[]
    cursor?: ordersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrdersScalarFieldEnum | OrdersScalarFieldEnum[]
  }

  /**
   * users.orders_orders_wholesaler_idTousers
   */
  export type users$orders_orders_wholesaler_idTousersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    where?: ordersWhereInput
    orderBy?: ordersOrderByWithRelationInput | ordersOrderByWithRelationInput[]
    cursor?: ordersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrdersScalarFieldEnum | OrdersScalarFieldEnum[]
  }

  /**
   * users.products
   */
  export type users$productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the products
     */
    select?: productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the products
     */
    omit?: productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: productsInclude<ExtArgs> | null
    where?: productsWhereInput
    orderBy?: productsOrderByWithRelationInput | productsOrderByWithRelationInput[]
    cursor?: productsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductsScalarFieldEnum | ProductsScalarFieldEnum[]
  }

  /**
   * users.user_sessions
   */
  export type users$user_sessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_sessions
     */
    select?: user_sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_sessions
     */
    omit?: user_sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_sessionsInclude<ExtArgs> | null
    where?: user_sessionsWhereInput
    orderBy?: user_sessionsOrderByWithRelationInput | user_sessionsOrderByWithRelationInput[]
    cursor?: user_sessionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: User_sessionsScalarFieldEnum | User_sessionsScalarFieldEnum[]
  }

  /**
   * users without action
   */
  export type usersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
  }


  /**
   * Model variant_products
   */

  export type AggregateVariant_products = {
    _count: Variant_productsCountAggregateOutputType | null
    _avg: Variant_productsAvgAggregateOutputType | null
    _sum: Variant_productsSumAggregateOutputType | null
    _min: Variant_productsMinAggregateOutputType | null
    _max: Variant_productsMaxAggregateOutputType | null
  }

  export type Variant_productsAvgAggregateOutputType = {
    id: number | null
    product_id: number | null
    type_sale: number | null
    price: Decimal | null
    price_iva: Decimal | null
    stock: number | null
    sort: number | null
    status: number | null
    iva: Decimal | null
  }

  export type Variant_productsSumAggregateOutputType = {
    id: bigint | null
    product_id: bigint | null
    type_sale: number | null
    price: Decimal | null
    price_iva: Decimal | null
    stock: number | null
    sort: number | null
    status: number | null
    iva: Decimal | null
  }

  export type Variant_productsMinAggregateOutputType = {
    id: bigint | null
    created_at: Date | null
    product_id: bigint | null
    type_sale: number | null
    price: Decimal | null
    price_iva: Decimal | null
    stock: number | null
    sort: number | null
    status: number | null
    iva: Decimal | null
    product_code: string | null
  }

  export type Variant_productsMaxAggregateOutputType = {
    id: bigint | null
    created_at: Date | null
    product_id: bigint | null
    type_sale: number | null
    price: Decimal | null
    price_iva: Decimal | null
    stock: number | null
    sort: number | null
    status: number | null
    iva: Decimal | null
    product_code: string | null
  }

  export type Variant_productsCountAggregateOutputType = {
    id: number
    created_at: number
    product_id: number
    type_sale: number
    price: number
    price_iva: number
    stock: number
    sort: number
    attributes: number
    status: number
    iva: number
    product_code: number
    _all: number
  }


  export type Variant_productsAvgAggregateInputType = {
    id?: true
    product_id?: true
    type_sale?: true
    price?: true
    price_iva?: true
    stock?: true
    sort?: true
    status?: true
    iva?: true
  }

  export type Variant_productsSumAggregateInputType = {
    id?: true
    product_id?: true
    type_sale?: true
    price?: true
    price_iva?: true
    stock?: true
    sort?: true
    status?: true
    iva?: true
  }

  export type Variant_productsMinAggregateInputType = {
    id?: true
    created_at?: true
    product_id?: true
    type_sale?: true
    price?: true
    price_iva?: true
    stock?: true
    sort?: true
    status?: true
    iva?: true
    product_code?: true
  }

  export type Variant_productsMaxAggregateInputType = {
    id?: true
    created_at?: true
    product_id?: true
    type_sale?: true
    price?: true
    price_iva?: true
    stock?: true
    sort?: true
    status?: true
    iva?: true
    product_code?: true
  }

  export type Variant_productsCountAggregateInputType = {
    id?: true
    created_at?: true
    product_id?: true
    type_sale?: true
    price?: true
    price_iva?: true
    stock?: true
    sort?: true
    attributes?: true
    status?: true
    iva?: true
    product_code?: true
    _all?: true
  }

  export type Variant_productsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which variant_products to aggregate.
     */
    where?: variant_productsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of variant_products to fetch.
     */
    orderBy?: variant_productsOrderByWithRelationInput | variant_productsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: variant_productsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` variant_products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` variant_products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned variant_products
    **/
    _count?: true | Variant_productsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Variant_productsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Variant_productsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Variant_productsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Variant_productsMaxAggregateInputType
  }

  export type GetVariant_productsAggregateType<T extends Variant_productsAggregateArgs> = {
        [P in keyof T & keyof AggregateVariant_products]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVariant_products[P]>
      : GetScalarType<T[P], AggregateVariant_products[P]>
  }




  export type variant_productsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: variant_productsWhereInput
    orderBy?: variant_productsOrderByWithAggregationInput | variant_productsOrderByWithAggregationInput[]
    by: Variant_productsScalarFieldEnum[] | Variant_productsScalarFieldEnum
    having?: variant_productsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Variant_productsCountAggregateInputType | true
    _avg?: Variant_productsAvgAggregateInputType
    _sum?: Variant_productsSumAggregateInputType
    _min?: Variant_productsMinAggregateInputType
    _max?: Variant_productsMaxAggregateInputType
  }

  export type Variant_productsGroupByOutputType = {
    id: bigint
    created_at: Date
    product_id: bigint
    type_sale: number
    price: Decimal
    price_iva: Decimal
    stock: number
    sort: number
    attributes: JsonValue | null
    status: number
    iva: Decimal
    product_code: string
    _count: Variant_productsCountAggregateOutputType | null
    _avg: Variant_productsAvgAggregateOutputType | null
    _sum: Variant_productsSumAggregateOutputType | null
    _min: Variant_productsMinAggregateOutputType | null
    _max: Variant_productsMaxAggregateOutputType | null
  }

  type GetVariant_productsGroupByPayload<T extends variant_productsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Variant_productsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Variant_productsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Variant_productsGroupByOutputType[P]>
            : GetScalarType<T[P], Variant_productsGroupByOutputType[P]>
        }
      >
    >


  export type variant_productsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    created_at?: boolean
    product_id?: boolean
    type_sale?: boolean
    price?: boolean
    price_iva?: boolean
    stock?: boolean
    sort?: boolean
    attributes?: boolean
    status?: boolean
    iva?: boolean
    product_code?: boolean
    cart_details?: boolean | variant_products$cart_detailsArgs<ExtArgs>
    order_details?: boolean | variant_products$order_detailsArgs<ExtArgs>
    products?: boolean | productsDefaultArgs<ExtArgs>
    _count?: boolean | Variant_productsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["variant_products"]>

  export type variant_productsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    created_at?: boolean
    product_id?: boolean
    type_sale?: boolean
    price?: boolean
    price_iva?: boolean
    stock?: boolean
    sort?: boolean
    attributes?: boolean
    status?: boolean
    iva?: boolean
    product_code?: boolean
    products?: boolean | productsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["variant_products"]>

  export type variant_productsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    created_at?: boolean
    product_id?: boolean
    type_sale?: boolean
    price?: boolean
    price_iva?: boolean
    stock?: boolean
    sort?: boolean
    attributes?: boolean
    status?: boolean
    iva?: boolean
    product_code?: boolean
    products?: boolean | productsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["variant_products"]>

  export type variant_productsSelectScalar = {
    id?: boolean
    created_at?: boolean
    product_id?: boolean
    type_sale?: boolean
    price?: boolean
    price_iva?: boolean
    stock?: boolean
    sort?: boolean
    attributes?: boolean
    status?: boolean
    iva?: boolean
    product_code?: boolean
  }

  export type variant_productsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "created_at" | "product_id" | "type_sale" | "price" | "price_iva" | "stock" | "sort" | "attributes" | "status" | "iva" | "product_code", ExtArgs["result"]["variant_products"]>
  export type variant_productsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cart_details?: boolean | variant_products$cart_detailsArgs<ExtArgs>
    order_details?: boolean | variant_products$order_detailsArgs<ExtArgs>
    products?: boolean | productsDefaultArgs<ExtArgs>
    _count?: boolean | Variant_productsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type variant_productsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    products?: boolean | productsDefaultArgs<ExtArgs>
  }
  export type variant_productsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    products?: boolean | productsDefaultArgs<ExtArgs>
  }

  export type $variant_productsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "variant_products"
    objects: {
      cart_details: Prisma.$cart_detailsPayload<ExtArgs>[]
      order_details: Prisma.$order_detailsPayload<ExtArgs>[]
      products: Prisma.$productsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      created_at: Date
      product_id: bigint
      type_sale: number
      price: Prisma.Decimal
      price_iva: Prisma.Decimal
      stock: number
      sort: number
      attributes: Prisma.JsonValue | null
      status: number
      iva: Prisma.Decimal
      product_code: string
    }, ExtArgs["result"]["variant_products"]>
    composites: {}
  }

  type variant_productsGetPayload<S extends boolean | null | undefined | variant_productsDefaultArgs> = $Result.GetResult<Prisma.$variant_productsPayload, S>

  type variant_productsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<variant_productsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Variant_productsCountAggregateInputType | true
    }

  export interface variant_productsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['variant_products'], meta: { name: 'variant_products' } }
    /**
     * Find zero or one Variant_products that matches the filter.
     * @param {variant_productsFindUniqueArgs} args - Arguments to find a Variant_products
     * @example
     * // Get one Variant_products
     * const variant_products = await prisma.variant_products.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends variant_productsFindUniqueArgs>(args: SelectSubset<T, variant_productsFindUniqueArgs<ExtArgs>>): Prisma__variant_productsClient<$Result.GetResult<Prisma.$variant_productsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Variant_products that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {variant_productsFindUniqueOrThrowArgs} args - Arguments to find a Variant_products
     * @example
     * // Get one Variant_products
     * const variant_products = await prisma.variant_products.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends variant_productsFindUniqueOrThrowArgs>(args: SelectSubset<T, variant_productsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__variant_productsClient<$Result.GetResult<Prisma.$variant_productsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Variant_products that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {variant_productsFindFirstArgs} args - Arguments to find a Variant_products
     * @example
     * // Get one Variant_products
     * const variant_products = await prisma.variant_products.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends variant_productsFindFirstArgs>(args?: SelectSubset<T, variant_productsFindFirstArgs<ExtArgs>>): Prisma__variant_productsClient<$Result.GetResult<Prisma.$variant_productsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Variant_products that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {variant_productsFindFirstOrThrowArgs} args - Arguments to find a Variant_products
     * @example
     * // Get one Variant_products
     * const variant_products = await prisma.variant_products.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends variant_productsFindFirstOrThrowArgs>(args?: SelectSubset<T, variant_productsFindFirstOrThrowArgs<ExtArgs>>): Prisma__variant_productsClient<$Result.GetResult<Prisma.$variant_productsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Variant_products that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {variant_productsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Variant_products
     * const variant_products = await prisma.variant_products.findMany()
     * 
     * // Get first 10 Variant_products
     * const variant_products = await prisma.variant_products.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const variant_productsWithIdOnly = await prisma.variant_products.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends variant_productsFindManyArgs>(args?: SelectSubset<T, variant_productsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$variant_productsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Variant_products.
     * @param {variant_productsCreateArgs} args - Arguments to create a Variant_products.
     * @example
     * // Create one Variant_products
     * const Variant_products = await prisma.variant_products.create({
     *   data: {
     *     // ... data to create a Variant_products
     *   }
     * })
     * 
     */
    create<T extends variant_productsCreateArgs>(args: SelectSubset<T, variant_productsCreateArgs<ExtArgs>>): Prisma__variant_productsClient<$Result.GetResult<Prisma.$variant_productsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Variant_products.
     * @param {variant_productsCreateManyArgs} args - Arguments to create many Variant_products.
     * @example
     * // Create many Variant_products
     * const variant_products = await prisma.variant_products.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends variant_productsCreateManyArgs>(args?: SelectSubset<T, variant_productsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Variant_products and returns the data saved in the database.
     * @param {variant_productsCreateManyAndReturnArgs} args - Arguments to create many Variant_products.
     * @example
     * // Create many Variant_products
     * const variant_products = await prisma.variant_products.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Variant_products and only return the `id`
     * const variant_productsWithIdOnly = await prisma.variant_products.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends variant_productsCreateManyAndReturnArgs>(args?: SelectSubset<T, variant_productsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$variant_productsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Variant_products.
     * @param {variant_productsDeleteArgs} args - Arguments to delete one Variant_products.
     * @example
     * // Delete one Variant_products
     * const Variant_products = await prisma.variant_products.delete({
     *   where: {
     *     // ... filter to delete one Variant_products
     *   }
     * })
     * 
     */
    delete<T extends variant_productsDeleteArgs>(args: SelectSubset<T, variant_productsDeleteArgs<ExtArgs>>): Prisma__variant_productsClient<$Result.GetResult<Prisma.$variant_productsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Variant_products.
     * @param {variant_productsUpdateArgs} args - Arguments to update one Variant_products.
     * @example
     * // Update one Variant_products
     * const variant_products = await prisma.variant_products.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends variant_productsUpdateArgs>(args: SelectSubset<T, variant_productsUpdateArgs<ExtArgs>>): Prisma__variant_productsClient<$Result.GetResult<Prisma.$variant_productsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Variant_products.
     * @param {variant_productsDeleteManyArgs} args - Arguments to filter Variant_products to delete.
     * @example
     * // Delete a few Variant_products
     * const { count } = await prisma.variant_products.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends variant_productsDeleteManyArgs>(args?: SelectSubset<T, variant_productsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Variant_products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {variant_productsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Variant_products
     * const variant_products = await prisma.variant_products.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends variant_productsUpdateManyArgs>(args: SelectSubset<T, variant_productsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Variant_products and returns the data updated in the database.
     * @param {variant_productsUpdateManyAndReturnArgs} args - Arguments to update many Variant_products.
     * @example
     * // Update many Variant_products
     * const variant_products = await prisma.variant_products.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Variant_products and only return the `id`
     * const variant_productsWithIdOnly = await prisma.variant_products.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends variant_productsUpdateManyAndReturnArgs>(args: SelectSubset<T, variant_productsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$variant_productsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Variant_products.
     * @param {variant_productsUpsertArgs} args - Arguments to update or create a Variant_products.
     * @example
     * // Update or create a Variant_products
     * const variant_products = await prisma.variant_products.upsert({
     *   create: {
     *     // ... data to create a Variant_products
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Variant_products we want to update
     *   }
     * })
     */
    upsert<T extends variant_productsUpsertArgs>(args: SelectSubset<T, variant_productsUpsertArgs<ExtArgs>>): Prisma__variant_productsClient<$Result.GetResult<Prisma.$variant_productsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Variant_products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {variant_productsCountArgs} args - Arguments to filter Variant_products to count.
     * @example
     * // Count the number of Variant_products
     * const count = await prisma.variant_products.count({
     *   where: {
     *     // ... the filter for the Variant_products we want to count
     *   }
     * })
    **/
    count<T extends variant_productsCountArgs>(
      args?: Subset<T, variant_productsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Variant_productsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Variant_products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Variant_productsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Variant_productsAggregateArgs>(args: Subset<T, Variant_productsAggregateArgs>): Prisma.PrismaPromise<GetVariant_productsAggregateType<T>>

    /**
     * Group by Variant_products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {variant_productsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends variant_productsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: variant_productsGroupByArgs['orderBy'] }
        : { orderBy?: variant_productsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, variant_productsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVariant_productsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the variant_products model
   */
  readonly fields: variant_productsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for variant_products.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__variant_productsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cart_details<T extends variant_products$cart_detailsArgs<ExtArgs> = {}>(args?: Subset<T, variant_products$cart_detailsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cart_detailsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    order_details<T extends variant_products$order_detailsArgs<ExtArgs> = {}>(args?: Subset<T, variant_products$order_detailsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$order_detailsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    products<T extends productsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, productsDefaultArgs<ExtArgs>>): Prisma__productsClient<$Result.GetResult<Prisma.$productsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the variant_products model
   */
  interface variant_productsFieldRefs {
    readonly id: FieldRef<"variant_products", 'BigInt'>
    readonly created_at: FieldRef<"variant_products", 'DateTime'>
    readonly product_id: FieldRef<"variant_products", 'BigInt'>
    readonly type_sale: FieldRef<"variant_products", 'Int'>
    readonly price: FieldRef<"variant_products", 'Decimal'>
    readonly price_iva: FieldRef<"variant_products", 'Decimal'>
    readonly stock: FieldRef<"variant_products", 'Int'>
    readonly sort: FieldRef<"variant_products", 'Int'>
    readonly attributes: FieldRef<"variant_products", 'Json'>
    readonly status: FieldRef<"variant_products", 'Int'>
    readonly iva: FieldRef<"variant_products", 'Decimal'>
    readonly product_code: FieldRef<"variant_products", 'String'>
  }
    

  // Custom InputTypes
  /**
   * variant_products findUnique
   */
  export type variant_productsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the variant_products
     */
    select?: variant_productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the variant_products
     */
    omit?: variant_productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: variant_productsInclude<ExtArgs> | null
    /**
     * Filter, which variant_products to fetch.
     */
    where: variant_productsWhereUniqueInput
  }

  /**
   * variant_products findUniqueOrThrow
   */
  export type variant_productsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the variant_products
     */
    select?: variant_productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the variant_products
     */
    omit?: variant_productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: variant_productsInclude<ExtArgs> | null
    /**
     * Filter, which variant_products to fetch.
     */
    where: variant_productsWhereUniqueInput
  }

  /**
   * variant_products findFirst
   */
  export type variant_productsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the variant_products
     */
    select?: variant_productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the variant_products
     */
    omit?: variant_productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: variant_productsInclude<ExtArgs> | null
    /**
     * Filter, which variant_products to fetch.
     */
    where?: variant_productsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of variant_products to fetch.
     */
    orderBy?: variant_productsOrderByWithRelationInput | variant_productsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for variant_products.
     */
    cursor?: variant_productsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` variant_products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` variant_products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of variant_products.
     */
    distinct?: Variant_productsScalarFieldEnum | Variant_productsScalarFieldEnum[]
  }

  /**
   * variant_products findFirstOrThrow
   */
  export type variant_productsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the variant_products
     */
    select?: variant_productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the variant_products
     */
    omit?: variant_productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: variant_productsInclude<ExtArgs> | null
    /**
     * Filter, which variant_products to fetch.
     */
    where?: variant_productsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of variant_products to fetch.
     */
    orderBy?: variant_productsOrderByWithRelationInput | variant_productsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for variant_products.
     */
    cursor?: variant_productsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` variant_products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` variant_products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of variant_products.
     */
    distinct?: Variant_productsScalarFieldEnum | Variant_productsScalarFieldEnum[]
  }

  /**
   * variant_products findMany
   */
  export type variant_productsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the variant_products
     */
    select?: variant_productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the variant_products
     */
    omit?: variant_productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: variant_productsInclude<ExtArgs> | null
    /**
     * Filter, which variant_products to fetch.
     */
    where?: variant_productsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of variant_products to fetch.
     */
    orderBy?: variant_productsOrderByWithRelationInput | variant_productsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing variant_products.
     */
    cursor?: variant_productsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` variant_products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` variant_products.
     */
    skip?: number
    distinct?: Variant_productsScalarFieldEnum | Variant_productsScalarFieldEnum[]
  }

  /**
   * variant_products create
   */
  export type variant_productsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the variant_products
     */
    select?: variant_productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the variant_products
     */
    omit?: variant_productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: variant_productsInclude<ExtArgs> | null
    /**
     * The data needed to create a variant_products.
     */
    data: XOR<variant_productsCreateInput, variant_productsUncheckedCreateInput>
  }

  /**
   * variant_products createMany
   */
  export type variant_productsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many variant_products.
     */
    data: variant_productsCreateManyInput | variant_productsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * variant_products createManyAndReturn
   */
  export type variant_productsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the variant_products
     */
    select?: variant_productsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the variant_products
     */
    omit?: variant_productsOmit<ExtArgs> | null
    /**
     * The data used to create many variant_products.
     */
    data: variant_productsCreateManyInput | variant_productsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: variant_productsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * variant_products update
   */
  export type variant_productsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the variant_products
     */
    select?: variant_productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the variant_products
     */
    omit?: variant_productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: variant_productsInclude<ExtArgs> | null
    /**
     * The data needed to update a variant_products.
     */
    data: XOR<variant_productsUpdateInput, variant_productsUncheckedUpdateInput>
    /**
     * Choose, which variant_products to update.
     */
    where: variant_productsWhereUniqueInput
  }

  /**
   * variant_products updateMany
   */
  export type variant_productsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update variant_products.
     */
    data: XOR<variant_productsUpdateManyMutationInput, variant_productsUncheckedUpdateManyInput>
    /**
     * Filter which variant_products to update
     */
    where?: variant_productsWhereInput
    /**
     * Limit how many variant_products to update.
     */
    limit?: number
  }

  /**
   * variant_products updateManyAndReturn
   */
  export type variant_productsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the variant_products
     */
    select?: variant_productsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the variant_products
     */
    omit?: variant_productsOmit<ExtArgs> | null
    /**
     * The data used to update variant_products.
     */
    data: XOR<variant_productsUpdateManyMutationInput, variant_productsUncheckedUpdateManyInput>
    /**
     * Filter which variant_products to update
     */
    where?: variant_productsWhereInput
    /**
     * Limit how many variant_products to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: variant_productsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * variant_products upsert
   */
  export type variant_productsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the variant_products
     */
    select?: variant_productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the variant_products
     */
    omit?: variant_productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: variant_productsInclude<ExtArgs> | null
    /**
     * The filter to search for the variant_products to update in case it exists.
     */
    where: variant_productsWhereUniqueInput
    /**
     * In case the variant_products found by the `where` argument doesn't exist, create a new variant_products with this data.
     */
    create: XOR<variant_productsCreateInput, variant_productsUncheckedCreateInput>
    /**
     * In case the variant_products was found with the provided `where` argument, update it with this data.
     */
    update: XOR<variant_productsUpdateInput, variant_productsUncheckedUpdateInput>
  }

  /**
   * variant_products delete
   */
  export type variant_productsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the variant_products
     */
    select?: variant_productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the variant_products
     */
    omit?: variant_productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: variant_productsInclude<ExtArgs> | null
    /**
     * Filter which variant_products to delete.
     */
    where: variant_productsWhereUniqueInput
  }

  /**
   * variant_products deleteMany
   */
  export type variant_productsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which variant_products to delete
     */
    where?: variant_productsWhereInput
    /**
     * Limit how many variant_products to delete.
     */
    limit?: number
  }

  /**
   * variant_products.cart_details
   */
  export type variant_products$cart_detailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cart_details
     */
    select?: cart_detailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the cart_details
     */
    omit?: cart_detailsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cart_detailsInclude<ExtArgs> | null
    where?: cart_detailsWhereInput
    orderBy?: cart_detailsOrderByWithRelationInput | cart_detailsOrderByWithRelationInput[]
    cursor?: cart_detailsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Cart_detailsScalarFieldEnum | Cart_detailsScalarFieldEnum[]
  }

  /**
   * variant_products.order_details
   */
  export type variant_products$order_detailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the order_details
     */
    select?: order_detailsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the order_details
     */
    omit?: order_detailsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: order_detailsInclude<ExtArgs> | null
    where?: order_detailsWhereInput
    orderBy?: order_detailsOrderByWithRelationInput | order_detailsOrderByWithRelationInput[]
    cursor?: order_detailsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Order_detailsScalarFieldEnum | Order_detailsScalarFieldEnum[]
  }

  /**
   * variant_products without action
   */
  export type variant_productsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the variant_products
     */
    select?: variant_productsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the variant_products
     */
    omit?: variant_productsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: variant_productsInclude<ExtArgs> | null
  }


  /**
   * Model direction
   */

  export type AggregateDirection = {
    _count: DirectionCountAggregateOutputType | null
    _avg: DirectionAvgAggregateOutputType | null
    _sum: DirectionSumAggregateOutputType | null
    _min: DirectionMinAggregateOutputType | null
    _max: DirectionMaxAggregateOutputType | null
  }

  export type DirectionAvgAggregateOutputType = {
    id: number | null
    latitude: number | null
    longitude: number | null
  }

  export type DirectionSumAggregateOutputType = {
    id: bigint | null
    latitude: number | null
    longitude: number | null
  }

  export type DirectionMinAggregateOutputType = {
    id: bigint | null
    user_id: string | null
    type: $Enums.AddressType | null
    direction: string | null
    city: string | null
    province: string | null
    zip_code: string | null
    latitude: number | null
    longitude: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type DirectionMaxAggregateOutputType = {
    id: bigint | null
    user_id: string | null
    type: $Enums.AddressType | null
    direction: string | null
    city: string | null
    province: string | null
    zip_code: string | null
    latitude: number | null
    longitude: number | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type DirectionCountAggregateOutputType = {
    id: number
    user_id: number
    type: number
    direction: number
    city: number
    province: number
    zip_code: number
    latitude: number
    longitude: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type DirectionAvgAggregateInputType = {
    id?: true
    latitude?: true
    longitude?: true
  }

  export type DirectionSumAggregateInputType = {
    id?: true
    latitude?: true
    longitude?: true
  }

  export type DirectionMinAggregateInputType = {
    id?: true
    user_id?: true
    type?: true
    direction?: true
    city?: true
    province?: true
    zip_code?: true
    latitude?: true
    longitude?: true
    created_at?: true
    updated_at?: true
  }

  export type DirectionMaxAggregateInputType = {
    id?: true
    user_id?: true
    type?: true
    direction?: true
    city?: true
    province?: true
    zip_code?: true
    latitude?: true
    longitude?: true
    created_at?: true
    updated_at?: true
  }

  export type DirectionCountAggregateInputType = {
    id?: true
    user_id?: true
    type?: true
    direction?: true
    city?: true
    province?: true
    zip_code?: true
    latitude?: true
    longitude?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type DirectionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which direction to aggregate.
     */
    where?: directionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of directions to fetch.
     */
    orderBy?: directionOrderByWithRelationInput | directionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: directionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` directions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` directions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned directions
    **/
    _count?: true | DirectionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: DirectionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: DirectionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DirectionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DirectionMaxAggregateInputType
  }

  export type GetDirectionAggregateType<T extends DirectionAggregateArgs> = {
        [P in keyof T & keyof AggregateDirection]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDirection[P]>
      : GetScalarType<T[P], AggregateDirection[P]>
  }




  export type directionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: directionWhereInput
    orderBy?: directionOrderByWithAggregationInput | directionOrderByWithAggregationInput[]
    by: DirectionScalarFieldEnum[] | DirectionScalarFieldEnum
    having?: directionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DirectionCountAggregateInputType | true
    _avg?: DirectionAvgAggregateInputType
    _sum?: DirectionSumAggregateInputType
    _min?: DirectionMinAggregateInputType
    _max?: DirectionMaxAggregateInputType
  }

  export type DirectionGroupByOutputType = {
    id: bigint
    user_id: string
    type: $Enums.AddressType
    direction: string
    city: string
    province: string
    zip_code: string
    latitude: number
    longitude: number
    created_at: Date
    updated_at: Date | null
    _count: DirectionCountAggregateOutputType | null
    _avg: DirectionAvgAggregateOutputType | null
    _sum: DirectionSumAggregateOutputType | null
    _min: DirectionMinAggregateOutputType | null
    _max: DirectionMaxAggregateOutputType | null
  }

  type GetDirectionGroupByPayload<T extends directionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DirectionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DirectionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DirectionGroupByOutputType[P]>
            : GetScalarType<T[P], DirectionGroupByOutputType[P]>
        }
      >
    >


  export type directionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    type?: boolean
    direction?: boolean
    city?: boolean
    province?: boolean
    zip_code?: boolean
    latitude?: boolean
    longitude?: boolean
    created_at?: boolean
    updated_at?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
    orders?: boolean | direction$ordersArgs<ExtArgs>
    _count?: boolean | DirectionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["direction"]>

  export type directionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    type?: boolean
    direction?: boolean
    city?: boolean
    province?: boolean
    zip_code?: boolean
    latitude?: boolean
    longitude?: boolean
    created_at?: boolean
    updated_at?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["direction"]>

  export type directionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    type?: boolean
    direction?: boolean
    city?: boolean
    province?: boolean
    zip_code?: boolean
    latitude?: boolean
    longitude?: boolean
    created_at?: boolean
    updated_at?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["direction"]>

  export type directionSelectScalar = {
    id?: boolean
    user_id?: boolean
    type?: boolean
    direction?: boolean
    city?: boolean
    province?: boolean
    zip_code?: boolean
    latitude?: boolean
    longitude?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type directionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "type" | "direction" | "city" | "province" | "zip_code" | "latitude" | "longitude" | "created_at" | "updated_at", ExtArgs["result"]["direction"]>
  export type directionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
    orders?: boolean | direction$ordersArgs<ExtArgs>
    _count?: boolean | DirectionCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type directionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type directionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $directionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "direction"
    objects: {
      users: Prisma.$usersPayload<ExtArgs>
      orders: Prisma.$ordersPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      user_id: string
      type: $Enums.AddressType
      direction: string
      city: string
      province: string
      zip_code: string
      latitude: number
      longitude: number
      created_at: Date
      updated_at: Date | null
    }, ExtArgs["result"]["direction"]>
    composites: {}
  }

  type directionGetPayload<S extends boolean | null | undefined | directionDefaultArgs> = $Result.GetResult<Prisma.$directionPayload, S>

  type directionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<directionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DirectionCountAggregateInputType | true
    }

  export interface directionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['direction'], meta: { name: 'direction' } }
    /**
     * Find zero or one Direction that matches the filter.
     * @param {directionFindUniqueArgs} args - Arguments to find a Direction
     * @example
     * // Get one Direction
     * const direction = await prisma.direction.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends directionFindUniqueArgs>(args: SelectSubset<T, directionFindUniqueArgs<ExtArgs>>): Prisma__directionClient<$Result.GetResult<Prisma.$directionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Direction that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {directionFindUniqueOrThrowArgs} args - Arguments to find a Direction
     * @example
     * // Get one Direction
     * const direction = await prisma.direction.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends directionFindUniqueOrThrowArgs>(args: SelectSubset<T, directionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__directionClient<$Result.GetResult<Prisma.$directionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Direction that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {directionFindFirstArgs} args - Arguments to find a Direction
     * @example
     * // Get one Direction
     * const direction = await prisma.direction.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends directionFindFirstArgs>(args?: SelectSubset<T, directionFindFirstArgs<ExtArgs>>): Prisma__directionClient<$Result.GetResult<Prisma.$directionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Direction that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {directionFindFirstOrThrowArgs} args - Arguments to find a Direction
     * @example
     * // Get one Direction
     * const direction = await prisma.direction.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends directionFindFirstOrThrowArgs>(args?: SelectSubset<T, directionFindFirstOrThrowArgs<ExtArgs>>): Prisma__directionClient<$Result.GetResult<Prisma.$directionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Directions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {directionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Directions
     * const directions = await prisma.direction.findMany()
     * 
     * // Get first 10 Directions
     * const directions = await prisma.direction.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const directionWithIdOnly = await prisma.direction.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends directionFindManyArgs>(args?: SelectSubset<T, directionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$directionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Direction.
     * @param {directionCreateArgs} args - Arguments to create a Direction.
     * @example
     * // Create one Direction
     * const Direction = await prisma.direction.create({
     *   data: {
     *     // ... data to create a Direction
     *   }
     * })
     * 
     */
    create<T extends directionCreateArgs>(args: SelectSubset<T, directionCreateArgs<ExtArgs>>): Prisma__directionClient<$Result.GetResult<Prisma.$directionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Directions.
     * @param {directionCreateManyArgs} args - Arguments to create many Directions.
     * @example
     * // Create many Directions
     * const direction = await prisma.direction.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends directionCreateManyArgs>(args?: SelectSubset<T, directionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Directions and returns the data saved in the database.
     * @param {directionCreateManyAndReturnArgs} args - Arguments to create many Directions.
     * @example
     * // Create many Directions
     * const direction = await prisma.direction.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Directions and only return the `id`
     * const directionWithIdOnly = await prisma.direction.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends directionCreateManyAndReturnArgs>(args?: SelectSubset<T, directionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$directionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Direction.
     * @param {directionDeleteArgs} args - Arguments to delete one Direction.
     * @example
     * // Delete one Direction
     * const Direction = await prisma.direction.delete({
     *   where: {
     *     // ... filter to delete one Direction
     *   }
     * })
     * 
     */
    delete<T extends directionDeleteArgs>(args: SelectSubset<T, directionDeleteArgs<ExtArgs>>): Prisma__directionClient<$Result.GetResult<Prisma.$directionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Direction.
     * @param {directionUpdateArgs} args - Arguments to update one Direction.
     * @example
     * // Update one Direction
     * const direction = await prisma.direction.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends directionUpdateArgs>(args: SelectSubset<T, directionUpdateArgs<ExtArgs>>): Prisma__directionClient<$Result.GetResult<Prisma.$directionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Directions.
     * @param {directionDeleteManyArgs} args - Arguments to filter Directions to delete.
     * @example
     * // Delete a few Directions
     * const { count } = await prisma.direction.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends directionDeleteManyArgs>(args?: SelectSubset<T, directionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Directions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {directionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Directions
     * const direction = await prisma.direction.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends directionUpdateManyArgs>(args: SelectSubset<T, directionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Directions and returns the data updated in the database.
     * @param {directionUpdateManyAndReturnArgs} args - Arguments to update many Directions.
     * @example
     * // Update many Directions
     * const direction = await prisma.direction.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Directions and only return the `id`
     * const directionWithIdOnly = await prisma.direction.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends directionUpdateManyAndReturnArgs>(args: SelectSubset<T, directionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$directionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Direction.
     * @param {directionUpsertArgs} args - Arguments to update or create a Direction.
     * @example
     * // Update or create a Direction
     * const direction = await prisma.direction.upsert({
     *   create: {
     *     // ... data to create a Direction
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Direction we want to update
     *   }
     * })
     */
    upsert<T extends directionUpsertArgs>(args: SelectSubset<T, directionUpsertArgs<ExtArgs>>): Prisma__directionClient<$Result.GetResult<Prisma.$directionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Directions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {directionCountArgs} args - Arguments to filter Directions to count.
     * @example
     * // Count the number of Directions
     * const count = await prisma.direction.count({
     *   where: {
     *     // ... the filter for the Directions we want to count
     *   }
     * })
    **/
    count<T extends directionCountArgs>(
      args?: Subset<T, directionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DirectionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Direction.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DirectionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DirectionAggregateArgs>(args: Subset<T, DirectionAggregateArgs>): Prisma.PrismaPromise<GetDirectionAggregateType<T>>

    /**
     * Group by Direction.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {directionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends directionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: directionGroupByArgs['orderBy'] }
        : { orderBy?: directionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, directionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDirectionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the direction model
   */
  readonly fields: directionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for direction.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__directionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    orders<T extends direction$ordersArgs<ExtArgs> = {}>(args?: Subset<T, direction$ordersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ordersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the direction model
   */
  interface directionFieldRefs {
    readonly id: FieldRef<"direction", 'BigInt'>
    readonly user_id: FieldRef<"direction", 'String'>
    readonly type: FieldRef<"direction", 'AddressType'>
    readonly direction: FieldRef<"direction", 'String'>
    readonly city: FieldRef<"direction", 'String'>
    readonly province: FieldRef<"direction", 'String'>
    readonly zip_code: FieldRef<"direction", 'String'>
    readonly latitude: FieldRef<"direction", 'Float'>
    readonly longitude: FieldRef<"direction", 'Float'>
    readonly created_at: FieldRef<"direction", 'DateTime'>
    readonly updated_at: FieldRef<"direction", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * direction findUnique
   */
  export type directionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the direction
     */
    select?: directionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the direction
     */
    omit?: directionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: directionInclude<ExtArgs> | null
    /**
     * Filter, which direction to fetch.
     */
    where: directionWhereUniqueInput
  }

  /**
   * direction findUniqueOrThrow
   */
  export type directionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the direction
     */
    select?: directionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the direction
     */
    omit?: directionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: directionInclude<ExtArgs> | null
    /**
     * Filter, which direction to fetch.
     */
    where: directionWhereUniqueInput
  }

  /**
   * direction findFirst
   */
  export type directionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the direction
     */
    select?: directionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the direction
     */
    omit?: directionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: directionInclude<ExtArgs> | null
    /**
     * Filter, which direction to fetch.
     */
    where?: directionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of directions to fetch.
     */
    orderBy?: directionOrderByWithRelationInput | directionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for directions.
     */
    cursor?: directionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` directions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` directions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of directions.
     */
    distinct?: DirectionScalarFieldEnum | DirectionScalarFieldEnum[]
  }

  /**
   * direction findFirstOrThrow
   */
  export type directionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the direction
     */
    select?: directionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the direction
     */
    omit?: directionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: directionInclude<ExtArgs> | null
    /**
     * Filter, which direction to fetch.
     */
    where?: directionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of directions to fetch.
     */
    orderBy?: directionOrderByWithRelationInput | directionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for directions.
     */
    cursor?: directionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` directions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` directions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of directions.
     */
    distinct?: DirectionScalarFieldEnum | DirectionScalarFieldEnum[]
  }

  /**
   * direction findMany
   */
  export type directionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the direction
     */
    select?: directionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the direction
     */
    omit?: directionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: directionInclude<ExtArgs> | null
    /**
     * Filter, which directions to fetch.
     */
    where?: directionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of directions to fetch.
     */
    orderBy?: directionOrderByWithRelationInput | directionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing directions.
     */
    cursor?: directionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` directions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` directions.
     */
    skip?: number
    distinct?: DirectionScalarFieldEnum | DirectionScalarFieldEnum[]
  }

  /**
   * direction create
   */
  export type directionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the direction
     */
    select?: directionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the direction
     */
    omit?: directionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: directionInclude<ExtArgs> | null
    /**
     * The data needed to create a direction.
     */
    data: XOR<directionCreateInput, directionUncheckedCreateInput>
  }

  /**
   * direction createMany
   */
  export type directionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many directions.
     */
    data: directionCreateManyInput | directionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * direction createManyAndReturn
   */
  export type directionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the direction
     */
    select?: directionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the direction
     */
    omit?: directionOmit<ExtArgs> | null
    /**
     * The data used to create many directions.
     */
    data: directionCreateManyInput | directionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: directionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * direction update
   */
  export type directionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the direction
     */
    select?: directionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the direction
     */
    omit?: directionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: directionInclude<ExtArgs> | null
    /**
     * The data needed to update a direction.
     */
    data: XOR<directionUpdateInput, directionUncheckedUpdateInput>
    /**
     * Choose, which direction to update.
     */
    where: directionWhereUniqueInput
  }

  /**
   * direction updateMany
   */
  export type directionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update directions.
     */
    data: XOR<directionUpdateManyMutationInput, directionUncheckedUpdateManyInput>
    /**
     * Filter which directions to update
     */
    where?: directionWhereInput
    /**
     * Limit how many directions to update.
     */
    limit?: number
  }

  /**
   * direction updateManyAndReturn
   */
  export type directionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the direction
     */
    select?: directionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the direction
     */
    omit?: directionOmit<ExtArgs> | null
    /**
     * The data used to update directions.
     */
    data: XOR<directionUpdateManyMutationInput, directionUncheckedUpdateManyInput>
    /**
     * Filter which directions to update
     */
    where?: directionWhereInput
    /**
     * Limit how many directions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: directionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * direction upsert
   */
  export type directionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the direction
     */
    select?: directionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the direction
     */
    omit?: directionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: directionInclude<ExtArgs> | null
    /**
     * The filter to search for the direction to update in case it exists.
     */
    where: directionWhereUniqueInput
    /**
     * In case the direction found by the `where` argument doesn't exist, create a new direction with this data.
     */
    create: XOR<directionCreateInput, directionUncheckedCreateInput>
    /**
     * In case the direction was found with the provided `where` argument, update it with this data.
     */
    update: XOR<directionUpdateInput, directionUncheckedUpdateInput>
  }

  /**
   * direction delete
   */
  export type directionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the direction
     */
    select?: directionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the direction
     */
    omit?: directionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: directionInclude<ExtArgs> | null
    /**
     * Filter which direction to delete.
     */
    where: directionWhereUniqueInput
  }

  /**
   * direction deleteMany
   */
  export type directionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which directions to delete
     */
    where?: directionWhereInput
    /**
     * Limit how many directions to delete.
     */
    limit?: number
  }

  /**
   * direction.orders
   */
  export type direction$ordersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the orders
     */
    select?: ordersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the orders
     */
    omit?: ordersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ordersInclude<ExtArgs> | null
    where?: ordersWhereInput
    orderBy?: ordersOrderByWithRelationInput | ordersOrderByWithRelationInput[]
    cursor?: ordersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrdersScalarFieldEnum | OrdersScalarFieldEnum[]
  }

  /**
   * direction without action
   */
  export type directionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the direction
     */
    select?: directionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the direction
     */
    omit?: directionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: directionInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const Cart_detailsScalarFieldEnum: {
    id: 'id',
    cart_id: 'cart_id',
    variant_products_id: 'variant_products_id',
    quantity: 'quantity',
    created_at: 'created_at'
  };

  export type Cart_detailsScalarFieldEnum = (typeof Cart_detailsScalarFieldEnum)[keyof typeof Cart_detailsScalarFieldEnum]


  export const CartsScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    created_at: 'created_at'
  };

  export type CartsScalarFieldEnum = (typeof CartsScalarFieldEnum)[keyof typeof CartsScalarFieldEnum]


  export const CategoriesScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    name: 'name',
    iva: 'iva',
    parent_id: 'parent_id',
    created_at: 'created_at'
  };

  export type CategoriesScalarFieldEnum = (typeof CategoriesScalarFieldEnum)[keyof typeof CategoriesScalarFieldEnum]


  export const Chat_panelsScalarFieldEnum: {
    id: 'id',
    name: 'name',
    created_at: 'created_at'
  };

  export type Chat_panelsScalarFieldEnum = (typeof Chat_panelsScalarFieldEnum)[keyof typeof Chat_panelsScalarFieldEnum]


  export const Chat_participantsScalarFieldEnum: {
    user_id: 'user_id',
    chat_panel_id: 'chat_panel_id',
    created_at: 'created_at'
  };

  export type Chat_participantsScalarFieldEnum = (typeof Chat_participantsScalarFieldEnum)[keyof typeof Chat_participantsScalarFieldEnum]


  export const ConfigurationsScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    language: 'language',
    timezone: 'timezone'
  };

  export type ConfigurationsScalarFieldEnum = (typeof ConfigurationsScalarFieldEnum)[keyof typeof ConfigurationsScalarFieldEnum]


  export const DeliveriesScalarFieldEnum: {
    id: 'id',
    order_id: 'order_id',
    delivery_person: 'delivery_person',
    status: 'status',
    start_time: 'start_time',
    end_time: 'end_time',
    notes: 'notes',
    created_at: 'created_at',
    updated_at: 'updated_at',
    latitude: 'latitude',
    longitude: 'longitude'
  };

  export type DeliveriesScalarFieldEnum = (typeof DeliveriesScalarFieldEnum)[keyof typeof DeliveriesScalarFieldEnum]


  export const Delivery_timelineScalarFieldEnum: {
    id: 'id',
    delivery_id: 'delivery_id',
    status: 'status',
    notes: 'notes',
    created_at: 'created_at',
    latitude: 'latitude',
    longitude: 'longitude'
  };

  export type Delivery_timelineScalarFieldEnum = (typeof Delivery_timelineScalarFieldEnum)[keyof typeof Delivery_timelineScalarFieldEnum]


  export const DiscountsScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    name: 'name',
    type_value: 'type_value',
    applies_to_all: 'applies_to_all',
    start_date: 'start_date',
    end_date: 'end_date',
    status: 'status',
    created_at: 'created_at'
  };

  export type DiscountsScalarFieldEnum = (typeof DiscountsScalarFieldEnum)[keyof typeof DiscountsScalarFieldEnum]


  export const FilesScalarFieldEnum: {
    id: 'id',
    file_name: 'file_name',
    file_hash: 'file_hash',
    mime_type: 'mime_type',
    file_size: 'file_size',
    url: 'url',
    created_at: 'created_at',
    uploaded_by: 'uploaded_by',
    to_delete: 'to_delete'
  };

  export type FilesScalarFieldEnum = (typeof FilesScalarFieldEnum)[keyof typeof FilesScalarFieldEnum]


  export const Message_filesScalarFieldEnum: {
    id: 'id',
    message_id: 'message_id',
    file_id: 'file_id',
    sort: 'sort'
  };

  export type Message_filesScalarFieldEnum = (typeof Message_filesScalarFieldEnum)[keyof typeof Message_filesScalarFieldEnum]


  export const MessagesScalarFieldEnum: {
    id: 'id',
    chat_panel_id: 'chat_panel_id',
    sender_id: 'sender_id',
    reply_to: 'reply_to',
    content: 'content',
    created_at: 'created_at',
    is_read: 'is_read'
  };

  export type MessagesScalarFieldEnum = (typeof MessagesScalarFieldEnum)[keyof typeof MessagesScalarFieldEnum]


  export const NotificationsScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    title: 'title',
    message: 'message',
    type: 'type',
    is_read: 'is_read',
    click_action: 'click_action',
    created_at: 'created_at'
  };

  export type NotificationsScalarFieldEnum = (typeof NotificationsScalarFieldEnum)[keyof typeof NotificationsScalarFieldEnum]


  export const Order_detailsScalarFieldEnum: {
    id: 'id',
    order_id: 'order_id',
    product_code: 'product_code',
    variant_product_id: 'variant_product_id',
    quantity: 'quantity',
    unit_price: 'unit_price',
    unit_price_iva: 'unit_price_iva',
    subtotal: 'subtotal',
    iva: 'iva',
    discount_applied: 'discount_applied',
    attributes: 'attributes',
    created_at: 'created_at'
  };

  export type Order_detailsScalarFieldEnum = (typeof Order_detailsScalarFieldEnum)[keyof typeof Order_detailsScalarFieldEnum]


  export const OrdersScalarFieldEnum: {
    id: 'id',
    retailer_id: 'retailer_id',
    wholesaler_id: 'wholesaler_id',
    status: 'status',
    payment_method: 'payment_method',
    shipping_address: 'shipping_address',
    notes: 'notes',
    discount_total: 'discount_total',
    subtotal: 'subtotal',
    total: 'total',
    iva_total: 'iva_total',
    discount_log: 'discount_log',
    estimated_date: 'estimated_date',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type OrdersScalarFieldEnum = (typeof OrdersScalarFieldEnum)[keyof typeof OrdersScalarFieldEnum]


  export const ProductsScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    name: 'name',
    title: 'title',
    description: 'description',
    iva: 'iva',
    category_id: 'category_id',
    status: 'status',
    created_at: 'created_at',
    product_code: 'product_code'
  };

  export type ProductsScalarFieldEnum = (typeof ProductsScalarFieldEnum)[keyof typeof ProductsScalarFieldEnum]


  export const Products_filesScalarFieldEnum: {
    id: 'id',
    product_id: 'product_id',
    file_id: 'file_id',
    sort: 'sort'
  };

  export type Products_filesScalarFieldEnum = (typeof Products_filesScalarFieldEnum)[keyof typeof Products_filesScalarFieldEnum]


  export const User_sessionsScalarFieldEnum: {
    session_id: 'session_id',
    user_id: 'user_id',
    device_name: 'device_name',
    device_finger: 'device_finger',
    user_agent: 'user_agent',
    revoked: 'revoked',
    last_ip: 'last_ip',
    access_token: 'access_token',
    refresh_token: 'refresh_token',
    created_at: 'created_at',
    last_active: 'last_active'
  };

  export type User_sessionsScalarFieldEnum = (typeof User_sessionsScalarFieldEnum)[keyof typeof User_sessionsScalarFieldEnum]


  export const UsersScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    first_name: 'first_name',
    last_name: 'last_name',
    username: 'username',
    password: 'password',
    email: 'email',
    telephone: 'telephone',
    status: 'status',
    profile: 'profile',
    created_at: 'created_at',
    updated_at: 'updated_at',
    role: 'role',
    cif: 'cif'
  };

  export type UsersScalarFieldEnum = (typeof UsersScalarFieldEnum)[keyof typeof UsersScalarFieldEnum]


  export const Variant_productsScalarFieldEnum: {
    id: 'id',
    created_at: 'created_at',
    product_id: 'product_id',
    type_sale: 'type_sale',
    price: 'price',
    price_iva: 'price_iva',
    stock: 'stock',
    sort: 'sort',
    attributes: 'attributes',
    status: 'status',
    iva: 'iva',
    product_code: 'product_code'
  };

  export type Variant_productsScalarFieldEnum = (typeof Variant_productsScalarFieldEnum)[keyof typeof Variant_productsScalarFieldEnum]


  export const DirectionScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    type: 'type',
    direction: 'direction',
    city: 'city',
    province: 'province',
    zip_code: 'zip_code',
    latitude: 'latitude',
    longitude: 'longitude',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type DirectionScalarFieldEnum = (typeof DirectionScalarFieldEnum)[keyof typeof DirectionScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const JsonNullValueInput: {
    JsonNull: typeof JsonNull
  };

  export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'BigInt'
   */
  export type BigIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BigInt'>
    


  /**
   * Reference to a field of type 'BigInt[]'
   */
  export type ListBigIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BigInt[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'DeliveryStatus'
   */
  export type EnumDeliveryStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DeliveryStatus'>
    


  /**
   * Reference to a field of type 'DeliveryStatus[]'
   */
  export type ListEnumDeliveryStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DeliveryStatus[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'UserStatus'
   */
  export type EnumUserStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'UserStatus'>
    


  /**
   * Reference to a field of type 'UserStatus[]'
   */
  export type ListEnumUserStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'UserStatus[]'>
    


  /**
   * Reference to a field of type 'UserRole'
   */
  export type EnumUserRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'UserRole'>
    


  /**
   * Reference to a field of type 'UserRole[]'
   */
  export type ListEnumUserRoleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'UserRole[]'>
    


  /**
   * Reference to a field of type 'AddressType'
   */
  export type EnumAddressTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AddressType'>
    


  /**
   * Reference to a field of type 'AddressType[]'
   */
  export type ListEnumAddressTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'AddressType[]'>
    
  /**
   * Deep Input Types
   */


  export type cart_detailsWhereInput = {
    AND?: cart_detailsWhereInput | cart_detailsWhereInput[]
    OR?: cart_detailsWhereInput[]
    NOT?: cart_detailsWhereInput | cart_detailsWhereInput[]
    id?: BigIntFilter<"cart_details"> | bigint | number
    cart_id?: BigIntFilter<"cart_details"> | bigint | number
    variant_products_id?: BigIntNullableFilter<"cart_details"> | bigint | number | null
    quantity?: IntFilter<"cart_details"> | number
    created_at?: DateTimeFilter<"cart_details"> | Date | string
    carts?: XOR<CartsScalarRelationFilter, cartsWhereInput>
    variant_products?: XOR<Variant_productsNullableScalarRelationFilter, variant_productsWhereInput> | null
  }

  export type cart_detailsOrderByWithRelationInput = {
    id?: SortOrder
    cart_id?: SortOrder
    variant_products_id?: SortOrderInput | SortOrder
    quantity?: SortOrder
    created_at?: SortOrder
    carts?: cartsOrderByWithRelationInput
    variant_products?: variant_productsOrderByWithRelationInput
  }

  export type cart_detailsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: cart_detailsWhereInput | cart_detailsWhereInput[]
    OR?: cart_detailsWhereInput[]
    NOT?: cart_detailsWhereInput | cart_detailsWhereInput[]
    cart_id?: BigIntFilter<"cart_details"> | bigint | number
    variant_products_id?: BigIntNullableFilter<"cart_details"> | bigint | number | null
    quantity?: IntFilter<"cart_details"> | number
    created_at?: DateTimeFilter<"cart_details"> | Date | string
    carts?: XOR<CartsScalarRelationFilter, cartsWhereInput>
    variant_products?: XOR<Variant_productsNullableScalarRelationFilter, variant_productsWhereInput> | null
  }, "id">

  export type cart_detailsOrderByWithAggregationInput = {
    id?: SortOrder
    cart_id?: SortOrder
    variant_products_id?: SortOrderInput | SortOrder
    quantity?: SortOrder
    created_at?: SortOrder
    _count?: cart_detailsCountOrderByAggregateInput
    _avg?: cart_detailsAvgOrderByAggregateInput
    _max?: cart_detailsMaxOrderByAggregateInput
    _min?: cart_detailsMinOrderByAggregateInput
    _sum?: cart_detailsSumOrderByAggregateInput
  }

  export type cart_detailsScalarWhereWithAggregatesInput = {
    AND?: cart_detailsScalarWhereWithAggregatesInput | cart_detailsScalarWhereWithAggregatesInput[]
    OR?: cart_detailsScalarWhereWithAggregatesInput[]
    NOT?: cart_detailsScalarWhereWithAggregatesInput | cart_detailsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"cart_details"> | bigint | number
    cart_id?: BigIntWithAggregatesFilter<"cart_details"> | bigint | number
    variant_products_id?: BigIntNullableWithAggregatesFilter<"cart_details"> | bigint | number | null
    quantity?: IntWithAggregatesFilter<"cart_details"> | number
    created_at?: DateTimeWithAggregatesFilter<"cart_details"> | Date | string
  }

  export type cartsWhereInput = {
    AND?: cartsWhereInput | cartsWhereInput[]
    OR?: cartsWhereInput[]
    NOT?: cartsWhereInput | cartsWhereInput[]
    id?: BigIntFilter<"carts"> | bigint | number
    user_id?: UuidFilter<"carts"> | string
    created_at?: DateTimeFilter<"carts"> | Date | string
    cart_details?: Cart_detailsListRelationFilter
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }

  export type cartsOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrder
    cart_details?: cart_detailsOrderByRelationAggregateInput
    users?: usersOrderByWithRelationInput
  }

  export type cartsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: cartsWhereInput | cartsWhereInput[]
    OR?: cartsWhereInput[]
    NOT?: cartsWhereInput | cartsWhereInput[]
    user_id?: UuidFilter<"carts"> | string
    created_at?: DateTimeFilter<"carts"> | Date | string
    cart_details?: Cart_detailsListRelationFilter
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }, "id">

  export type cartsOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrder
    _count?: cartsCountOrderByAggregateInput
    _avg?: cartsAvgOrderByAggregateInput
    _max?: cartsMaxOrderByAggregateInput
    _min?: cartsMinOrderByAggregateInput
    _sum?: cartsSumOrderByAggregateInput
  }

  export type cartsScalarWhereWithAggregatesInput = {
    AND?: cartsScalarWhereWithAggregatesInput | cartsScalarWhereWithAggregatesInput[]
    OR?: cartsScalarWhereWithAggregatesInput[]
    NOT?: cartsScalarWhereWithAggregatesInput | cartsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"carts"> | bigint | number
    user_id?: UuidWithAggregatesFilter<"carts"> | string
    created_at?: DateTimeWithAggregatesFilter<"carts"> | Date | string
  }

  export type categoriesWhereInput = {
    AND?: categoriesWhereInput | categoriesWhereInput[]
    OR?: categoriesWhereInput[]
    NOT?: categoriesWhereInput | categoriesWhereInput[]
    id?: BigIntFilter<"categories"> | bigint | number
    user_id?: UuidNullableFilter<"categories"> | string | null
    name?: StringFilter<"categories"> | string
    iva?: DecimalNullableFilter<"categories"> | Decimal | DecimalJsLike | number | string | null
    parent_id?: BigIntNullableFilter<"categories"> | bigint | number | null
    created_at?: DateTimeFilter<"categories"> | Date | string
    categories?: XOR<CategoriesNullableScalarRelationFilter, categoriesWhereInput> | null
    other_categories?: CategoriesListRelationFilter
    users?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
    products?: ProductsListRelationFilter
  }

  export type categoriesOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrderInput | SortOrder
    name?: SortOrder
    iva?: SortOrderInput | SortOrder
    parent_id?: SortOrderInput | SortOrder
    created_at?: SortOrder
    categories?: categoriesOrderByWithRelationInput
    other_categories?: categoriesOrderByRelationAggregateInput
    users?: usersOrderByWithRelationInput
    products?: productsOrderByRelationAggregateInput
  }

  export type categoriesWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: categoriesWhereInput | categoriesWhereInput[]
    OR?: categoriesWhereInput[]
    NOT?: categoriesWhereInput | categoriesWhereInput[]
    user_id?: UuidNullableFilter<"categories"> | string | null
    name?: StringFilter<"categories"> | string
    iva?: DecimalNullableFilter<"categories"> | Decimal | DecimalJsLike | number | string | null
    parent_id?: BigIntNullableFilter<"categories"> | bigint | number | null
    created_at?: DateTimeFilter<"categories"> | Date | string
    categories?: XOR<CategoriesNullableScalarRelationFilter, categoriesWhereInput> | null
    other_categories?: CategoriesListRelationFilter
    users?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
    products?: ProductsListRelationFilter
  }, "id">

  export type categoriesOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrderInput | SortOrder
    name?: SortOrder
    iva?: SortOrderInput | SortOrder
    parent_id?: SortOrderInput | SortOrder
    created_at?: SortOrder
    _count?: categoriesCountOrderByAggregateInput
    _avg?: categoriesAvgOrderByAggregateInput
    _max?: categoriesMaxOrderByAggregateInput
    _min?: categoriesMinOrderByAggregateInput
    _sum?: categoriesSumOrderByAggregateInput
  }

  export type categoriesScalarWhereWithAggregatesInput = {
    AND?: categoriesScalarWhereWithAggregatesInput | categoriesScalarWhereWithAggregatesInput[]
    OR?: categoriesScalarWhereWithAggregatesInput[]
    NOT?: categoriesScalarWhereWithAggregatesInput | categoriesScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"categories"> | bigint | number
    user_id?: UuidNullableWithAggregatesFilter<"categories"> | string | null
    name?: StringWithAggregatesFilter<"categories"> | string
    iva?: DecimalNullableWithAggregatesFilter<"categories"> | Decimal | DecimalJsLike | number | string | null
    parent_id?: BigIntNullableWithAggregatesFilter<"categories"> | bigint | number | null
    created_at?: DateTimeWithAggregatesFilter<"categories"> | Date | string
  }

  export type chat_panelsWhereInput = {
    AND?: chat_panelsWhereInput | chat_panelsWhereInput[]
    OR?: chat_panelsWhereInput[]
    NOT?: chat_panelsWhereInput | chat_panelsWhereInput[]
    id?: BigIntFilter<"chat_panels"> | bigint | number
    name?: StringFilter<"chat_panels"> | string
    created_at?: DateTimeFilter<"chat_panels"> | Date | string
    chat_participants?: Chat_participantsListRelationFilter
    messages?: MessagesListRelationFilter
  }

  export type chat_panelsOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    created_at?: SortOrder
    chat_participants?: chat_participantsOrderByRelationAggregateInput
    messages?: messagesOrderByRelationAggregateInput
  }

  export type chat_panelsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: chat_panelsWhereInput | chat_panelsWhereInput[]
    OR?: chat_panelsWhereInput[]
    NOT?: chat_panelsWhereInput | chat_panelsWhereInput[]
    name?: StringFilter<"chat_panels"> | string
    created_at?: DateTimeFilter<"chat_panels"> | Date | string
    chat_participants?: Chat_participantsListRelationFilter
    messages?: MessagesListRelationFilter
  }, "id">

  export type chat_panelsOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    created_at?: SortOrder
    _count?: chat_panelsCountOrderByAggregateInput
    _avg?: chat_panelsAvgOrderByAggregateInput
    _max?: chat_panelsMaxOrderByAggregateInput
    _min?: chat_panelsMinOrderByAggregateInput
    _sum?: chat_panelsSumOrderByAggregateInput
  }

  export type chat_panelsScalarWhereWithAggregatesInput = {
    AND?: chat_panelsScalarWhereWithAggregatesInput | chat_panelsScalarWhereWithAggregatesInput[]
    OR?: chat_panelsScalarWhereWithAggregatesInput[]
    NOT?: chat_panelsScalarWhereWithAggregatesInput | chat_panelsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"chat_panels"> | bigint | number
    name?: StringWithAggregatesFilter<"chat_panels"> | string
    created_at?: DateTimeWithAggregatesFilter<"chat_panels"> | Date | string
  }

  export type chat_participantsWhereInput = {
    AND?: chat_participantsWhereInput | chat_participantsWhereInput[]
    OR?: chat_participantsWhereInput[]
    NOT?: chat_participantsWhereInput | chat_participantsWhereInput[]
    user_id?: UuidFilter<"chat_participants"> | string
    chat_panel_id?: BigIntFilter<"chat_participants"> | bigint | number
    created_at?: DateTimeNullableFilter<"chat_participants"> | Date | string | null
    chat_panels?: XOR<Chat_panelsScalarRelationFilter, chat_panelsWhereInput>
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }

  export type chat_participantsOrderByWithRelationInput = {
    user_id?: SortOrder
    chat_panel_id?: SortOrder
    created_at?: SortOrderInput | SortOrder
    chat_panels?: chat_panelsOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
  }

  export type chat_participantsWhereUniqueInput = Prisma.AtLeast<{
    chat_panel_id_user_id?: chat_participantsChat_panel_idUser_idCompoundUniqueInput
    AND?: chat_participantsWhereInput | chat_participantsWhereInput[]
    OR?: chat_participantsWhereInput[]
    NOT?: chat_participantsWhereInput | chat_participantsWhereInput[]
    user_id?: UuidFilter<"chat_participants"> | string
    chat_panel_id?: BigIntFilter<"chat_participants"> | bigint | number
    created_at?: DateTimeNullableFilter<"chat_participants"> | Date | string | null
    chat_panels?: XOR<Chat_panelsScalarRelationFilter, chat_panelsWhereInput>
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }, "chat_panel_id_user_id">

  export type chat_participantsOrderByWithAggregationInput = {
    user_id?: SortOrder
    chat_panel_id?: SortOrder
    created_at?: SortOrderInput | SortOrder
    _count?: chat_participantsCountOrderByAggregateInput
    _avg?: chat_participantsAvgOrderByAggregateInput
    _max?: chat_participantsMaxOrderByAggregateInput
    _min?: chat_participantsMinOrderByAggregateInput
    _sum?: chat_participantsSumOrderByAggregateInput
  }

  export type chat_participantsScalarWhereWithAggregatesInput = {
    AND?: chat_participantsScalarWhereWithAggregatesInput | chat_participantsScalarWhereWithAggregatesInput[]
    OR?: chat_participantsScalarWhereWithAggregatesInput[]
    NOT?: chat_participantsScalarWhereWithAggregatesInput | chat_participantsScalarWhereWithAggregatesInput[]
    user_id?: UuidWithAggregatesFilter<"chat_participants"> | string
    chat_panel_id?: BigIntWithAggregatesFilter<"chat_participants"> | bigint | number
    created_at?: DateTimeNullableWithAggregatesFilter<"chat_participants"> | Date | string | null
  }

  export type configurationsWhereInput = {
    AND?: configurationsWhereInput | configurationsWhereInput[]
    OR?: configurationsWhereInput[]
    NOT?: configurationsWhereInput | configurationsWhereInput[]
    id?: BigIntFilter<"configurations"> | bigint | number
    user_id?: UuidFilter<"configurations"> | string
    language?: StringFilter<"configurations"> | string
    timezone?: StringFilter<"configurations"> | string
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }

  export type configurationsOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    language?: SortOrder
    timezone?: SortOrder
    users?: usersOrderByWithRelationInput
  }

  export type configurationsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: configurationsWhereInput | configurationsWhereInput[]
    OR?: configurationsWhereInput[]
    NOT?: configurationsWhereInput | configurationsWhereInput[]
    user_id?: UuidFilter<"configurations"> | string
    language?: StringFilter<"configurations"> | string
    timezone?: StringFilter<"configurations"> | string
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }, "id">

  export type configurationsOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    language?: SortOrder
    timezone?: SortOrder
    _count?: configurationsCountOrderByAggregateInput
    _avg?: configurationsAvgOrderByAggregateInput
    _max?: configurationsMaxOrderByAggregateInput
    _min?: configurationsMinOrderByAggregateInput
    _sum?: configurationsSumOrderByAggregateInput
  }

  export type configurationsScalarWhereWithAggregatesInput = {
    AND?: configurationsScalarWhereWithAggregatesInput | configurationsScalarWhereWithAggregatesInput[]
    OR?: configurationsScalarWhereWithAggregatesInput[]
    NOT?: configurationsScalarWhereWithAggregatesInput | configurationsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"configurations"> | bigint | number
    user_id?: UuidWithAggregatesFilter<"configurations"> | string
    language?: StringWithAggregatesFilter<"configurations"> | string
    timezone?: StringWithAggregatesFilter<"configurations"> | string
  }

  export type deliveriesWhereInput = {
    AND?: deliveriesWhereInput | deliveriesWhereInput[]
    OR?: deliveriesWhereInput[]
    NOT?: deliveriesWhereInput | deliveriesWhereInput[]
    id?: BigIntFilter<"deliveries"> | bigint | number
    order_id?: BigIntFilter<"deliveries"> | bigint | number
    delivery_person?: UuidFilter<"deliveries"> | string
    status?: EnumDeliveryStatusFilter<"deliveries"> | $Enums.DeliveryStatus
    start_time?: DateTimeFilter<"deliveries"> | Date | string
    end_time?: DateTimeNullableFilter<"deliveries"> | Date | string | null
    notes?: StringFilter<"deliveries"> | string
    created_at?: DateTimeFilter<"deliveries"> | Date | string
    updated_at?: DateTimeNullableFilter<"deliveries"> | Date | string | null
    latitude?: FloatFilter<"deliveries"> | number
    longitude?: FloatFilter<"deliveries"> | number
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
    delivery_timeline?: Delivery_timelineListRelationFilter
  }

  export type deliveriesOrderByWithRelationInput = {
    id?: SortOrder
    order_id?: SortOrder
    delivery_person?: SortOrder
    status?: SortOrder
    start_time?: SortOrder
    end_time?: SortOrderInput | SortOrder
    notes?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    users?: usersOrderByWithRelationInput
    delivery_timeline?: delivery_timelineOrderByRelationAggregateInput
  }

  export type deliveriesWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: deliveriesWhereInput | deliveriesWhereInput[]
    OR?: deliveriesWhereInput[]
    NOT?: deliveriesWhereInput | deliveriesWhereInput[]
    order_id?: BigIntFilter<"deliveries"> | bigint | number
    delivery_person?: UuidFilter<"deliveries"> | string
    status?: EnumDeliveryStatusFilter<"deliveries"> | $Enums.DeliveryStatus
    start_time?: DateTimeFilter<"deliveries"> | Date | string
    end_time?: DateTimeNullableFilter<"deliveries"> | Date | string | null
    notes?: StringFilter<"deliveries"> | string
    created_at?: DateTimeFilter<"deliveries"> | Date | string
    updated_at?: DateTimeNullableFilter<"deliveries"> | Date | string | null
    latitude?: FloatFilter<"deliveries"> | number
    longitude?: FloatFilter<"deliveries"> | number
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
    delivery_timeline?: Delivery_timelineListRelationFilter
  }, "id">

  export type deliveriesOrderByWithAggregationInput = {
    id?: SortOrder
    order_id?: SortOrder
    delivery_person?: SortOrder
    status?: SortOrder
    start_time?: SortOrder
    end_time?: SortOrderInput | SortOrder
    notes?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    _count?: deliveriesCountOrderByAggregateInput
    _avg?: deliveriesAvgOrderByAggregateInput
    _max?: deliveriesMaxOrderByAggregateInput
    _min?: deliveriesMinOrderByAggregateInput
    _sum?: deliveriesSumOrderByAggregateInput
  }

  export type deliveriesScalarWhereWithAggregatesInput = {
    AND?: deliveriesScalarWhereWithAggregatesInput | deliveriesScalarWhereWithAggregatesInput[]
    OR?: deliveriesScalarWhereWithAggregatesInput[]
    NOT?: deliveriesScalarWhereWithAggregatesInput | deliveriesScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"deliveries"> | bigint | number
    order_id?: BigIntWithAggregatesFilter<"deliveries"> | bigint | number
    delivery_person?: UuidWithAggregatesFilter<"deliveries"> | string
    status?: EnumDeliveryStatusWithAggregatesFilter<"deliveries"> | $Enums.DeliveryStatus
    start_time?: DateTimeWithAggregatesFilter<"deliveries"> | Date | string
    end_time?: DateTimeNullableWithAggregatesFilter<"deliveries"> | Date | string | null
    notes?: StringWithAggregatesFilter<"deliveries"> | string
    created_at?: DateTimeWithAggregatesFilter<"deliveries"> | Date | string
    updated_at?: DateTimeNullableWithAggregatesFilter<"deliveries"> | Date | string | null
    latitude?: FloatWithAggregatesFilter<"deliveries"> | number
    longitude?: FloatWithAggregatesFilter<"deliveries"> | number
  }

  export type delivery_timelineWhereInput = {
    AND?: delivery_timelineWhereInput | delivery_timelineWhereInput[]
    OR?: delivery_timelineWhereInput[]
    NOT?: delivery_timelineWhereInput | delivery_timelineWhereInput[]
    id?: BigIntFilter<"delivery_timeline"> | bigint | number
    delivery_id?: BigIntNullableFilter<"delivery_timeline"> | bigint | number | null
    status?: EnumDeliveryStatusFilter<"delivery_timeline"> | $Enums.DeliveryStatus
    notes?: StringNullableFilter<"delivery_timeline"> | string | null
    created_at?: DateTimeFilter<"delivery_timeline"> | Date | string
    latitude?: FloatFilter<"delivery_timeline"> | number
    longitude?: FloatFilter<"delivery_timeline"> | number
    deliveries?: XOR<DeliveriesNullableScalarRelationFilter, deliveriesWhereInput> | null
  }

  export type delivery_timelineOrderByWithRelationInput = {
    id?: SortOrder
    delivery_id?: SortOrderInput | SortOrder
    status?: SortOrder
    notes?: SortOrderInput | SortOrder
    created_at?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    deliveries?: deliveriesOrderByWithRelationInput
  }

  export type delivery_timelineWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: delivery_timelineWhereInput | delivery_timelineWhereInput[]
    OR?: delivery_timelineWhereInput[]
    NOT?: delivery_timelineWhereInput | delivery_timelineWhereInput[]
    delivery_id?: BigIntNullableFilter<"delivery_timeline"> | bigint | number | null
    status?: EnumDeliveryStatusFilter<"delivery_timeline"> | $Enums.DeliveryStatus
    notes?: StringNullableFilter<"delivery_timeline"> | string | null
    created_at?: DateTimeFilter<"delivery_timeline"> | Date | string
    latitude?: FloatFilter<"delivery_timeline"> | number
    longitude?: FloatFilter<"delivery_timeline"> | number
    deliveries?: XOR<DeliveriesNullableScalarRelationFilter, deliveriesWhereInput> | null
  }, "id">

  export type delivery_timelineOrderByWithAggregationInput = {
    id?: SortOrder
    delivery_id?: SortOrderInput | SortOrder
    status?: SortOrder
    notes?: SortOrderInput | SortOrder
    created_at?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    _count?: delivery_timelineCountOrderByAggregateInput
    _avg?: delivery_timelineAvgOrderByAggregateInput
    _max?: delivery_timelineMaxOrderByAggregateInput
    _min?: delivery_timelineMinOrderByAggregateInput
    _sum?: delivery_timelineSumOrderByAggregateInput
  }

  export type delivery_timelineScalarWhereWithAggregatesInput = {
    AND?: delivery_timelineScalarWhereWithAggregatesInput | delivery_timelineScalarWhereWithAggregatesInput[]
    OR?: delivery_timelineScalarWhereWithAggregatesInput[]
    NOT?: delivery_timelineScalarWhereWithAggregatesInput | delivery_timelineScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"delivery_timeline"> | bigint | number
    delivery_id?: BigIntNullableWithAggregatesFilter<"delivery_timeline"> | bigint | number | null
    status?: EnumDeliveryStatusWithAggregatesFilter<"delivery_timeline"> | $Enums.DeliveryStatus
    notes?: StringNullableWithAggregatesFilter<"delivery_timeline"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"delivery_timeline"> | Date | string
    latitude?: FloatWithAggregatesFilter<"delivery_timeline"> | number
    longitude?: FloatWithAggregatesFilter<"delivery_timeline"> | number
  }

  export type discountsWhereInput = {
    AND?: discountsWhereInput | discountsWhereInput[]
    OR?: discountsWhereInput[]
    NOT?: discountsWhereInput | discountsWhereInput[]
    id?: BigIntFilter<"discounts"> | bigint | number
    user_id?: UuidFilter<"discounts"> | string
    name?: StringFilter<"discounts"> | string
    type_value?: JsonFilter<"discounts">
    applies_to_all?: BoolFilter<"discounts"> | boolean
    start_date?: DateTimeFilter<"discounts"> | Date | string
    end_date?: DateTimeFilter<"discounts"> | Date | string
    status?: IntFilter<"discounts"> | number
    created_at?: DateTimeFilter<"discounts"> | Date | string
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }

  export type discountsOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    name?: SortOrder
    type_value?: SortOrder
    applies_to_all?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    users?: usersOrderByWithRelationInput
  }

  export type discountsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: discountsWhereInput | discountsWhereInput[]
    OR?: discountsWhereInput[]
    NOT?: discountsWhereInput | discountsWhereInput[]
    user_id?: UuidFilter<"discounts"> | string
    name?: StringFilter<"discounts"> | string
    type_value?: JsonFilter<"discounts">
    applies_to_all?: BoolFilter<"discounts"> | boolean
    start_date?: DateTimeFilter<"discounts"> | Date | string
    end_date?: DateTimeFilter<"discounts"> | Date | string
    status?: IntFilter<"discounts"> | number
    created_at?: DateTimeFilter<"discounts"> | Date | string
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }, "id">

  export type discountsOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    name?: SortOrder
    type_value?: SortOrder
    applies_to_all?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    _count?: discountsCountOrderByAggregateInput
    _avg?: discountsAvgOrderByAggregateInput
    _max?: discountsMaxOrderByAggregateInput
    _min?: discountsMinOrderByAggregateInput
    _sum?: discountsSumOrderByAggregateInput
  }

  export type discountsScalarWhereWithAggregatesInput = {
    AND?: discountsScalarWhereWithAggregatesInput | discountsScalarWhereWithAggregatesInput[]
    OR?: discountsScalarWhereWithAggregatesInput[]
    NOT?: discountsScalarWhereWithAggregatesInput | discountsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"discounts"> | bigint | number
    user_id?: UuidWithAggregatesFilter<"discounts"> | string
    name?: StringWithAggregatesFilter<"discounts"> | string
    type_value?: JsonWithAggregatesFilter<"discounts">
    applies_to_all?: BoolWithAggregatesFilter<"discounts"> | boolean
    start_date?: DateTimeWithAggregatesFilter<"discounts"> | Date | string
    end_date?: DateTimeWithAggregatesFilter<"discounts"> | Date | string
    status?: IntWithAggregatesFilter<"discounts"> | number
    created_at?: DateTimeWithAggregatesFilter<"discounts"> | Date | string
  }

  export type filesWhereInput = {
    AND?: filesWhereInput | filesWhereInput[]
    OR?: filesWhereInput[]
    NOT?: filesWhereInput | filesWhereInput[]
    id?: BigIntFilter<"files"> | bigint | number
    file_name?: StringFilter<"files"> | string
    file_hash?: StringFilter<"files"> | string
    mime_type?: StringFilter<"files"> | string
    file_size?: BigIntFilter<"files"> | bigint | number
    url?: StringFilter<"files"> | string
    created_at?: DateTimeFilter<"files"> | Date | string
    uploaded_by?: BigIntFilter<"files"> | bigint | number
    to_delete?: BoolFilter<"files"> | boolean
    message_files?: Message_filesListRelationFilter
    products_files?: Products_filesListRelationFilter
  }

  export type filesOrderByWithRelationInput = {
    id?: SortOrder
    file_name?: SortOrder
    file_hash?: SortOrder
    mime_type?: SortOrder
    file_size?: SortOrder
    url?: SortOrder
    created_at?: SortOrder
    uploaded_by?: SortOrder
    to_delete?: SortOrder
    message_files?: message_filesOrderByRelationAggregateInput
    products_files?: products_filesOrderByRelationAggregateInput
  }

  export type filesWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    file_hash?: string
    AND?: filesWhereInput | filesWhereInput[]
    OR?: filesWhereInput[]
    NOT?: filesWhereInput | filesWhereInput[]
    file_name?: StringFilter<"files"> | string
    mime_type?: StringFilter<"files"> | string
    file_size?: BigIntFilter<"files"> | bigint | number
    url?: StringFilter<"files"> | string
    created_at?: DateTimeFilter<"files"> | Date | string
    uploaded_by?: BigIntFilter<"files"> | bigint | number
    to_delete?: BoolFilter<"files"> | boolean
    message_files?: Message_filesListRelationFilter
    products_files?: Products_filesListRelationFilter
  }, "id" | "file_hash">

  export type filesOrderByWithAggregationInput = {
    id?: SortOrder
    file_name?: SortOrder
    file_hash?: SortOrder
    mime_type?: SortOrder
    file_size?: SortOrder
    url?: SortOrder
    created_at?: SortOrder
    uploaded_by?: SortOrder
    to_delete?: SortOrder
    _count?: filesCountOrderByAggregateInput
    _avg?: filesAvgOrderByAggregateInput
    _max?: filesMaxOrderByAggregateInput
    _min?: filesMinOrderByAggregateInput
    _sum?: filesSumOrderByAggregateInput
  }

  export type filesScalarWhereWithAggregatesInput = {
    AND?: filesScalarWhereWithAggregatesInput | filesScalarWhereWithAggregatesInput[]
    OR?: filesScalarWhereWithAggregatesInput[]
    NOT?: filesScalarWhereWithAggregatesInput | filesScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"files"> | bigint | number
    file_name?: StringWithAggregatesFilter<"files"> | string
    file_hash?: StringWithAggregatesFilter<"files"> | string
    mime_type?: StringWithAggregatesFilter<"files"> | string
    file_size?: BigIntWithAggregatesFilter<"files"> | bigint | number
    url?: StringWithAggregatesFilter<"files"> | string
    created_at?: DateTimeWithAggregatesFilter<"files"> | Date | string
    uploaded_by?: BigIntWithAggregatesFilter<"files"> | bigint | number
    to_delete?: BoolWithAggregatesFilter<"files"> | boolean
  }

  export type message_filesWhereInput = {
    AND?: message_filesWhereInput | message_filesWhereInput[]
    OR?: message_filesWhereInput[]
    NOT?: message_filesWhereInput | message_filesWhereInput[]
    id?: BigIntFilter<"message_files"> | bigint | number
    message_id?: BigIntFilter<"message_files"> | bigint | number
    file_id?: BigIntFilter<"message_files"> | bigint | number
    sort?: IntFilter<"message_files"> | number
    files?: XOR<FilesScalarRelationFilter, filesWhereInput>
    messages?: XOR<MessagesScalarRelationFilter, messagesWhereInput>
  }

  export type message_filesOrderByWithRelationInput = {
    id?: SortOrder
    message_id?: SortOrder
    file_id?: SortOrder
    sort?: SortOrder
    files?: filesOrderByWithRelationInput
    messages?: messagesOrderByWithRelationInput
  }

  export type message_filesWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: message_filesWhereInput | message_filesWhereInput[]
    OR?: message_filesWhereInput[]
    NOT?: message_filesWhereInput | message_filesWhereInput[]
    message_id?: BigIntFilter<"message_files"> | bigint | number
    file_id?: BigIntFilter<"message_files"> | bigint | number
    sort?: IntFilter<"message_files"> | number
    files?: XOR<FilesScalarRelationFilter, filesWhereInput>
    messages?: XOR<MessagesScalarRelationFilter, messagesWhereInput>
  }, "id">

  export type message_filesOrderByWithAggregationInput = {
    id?: SortOrder
    message_id?: SortOrder
    file_id?: SortOrder
    sort?: SortOrder
    _count?: message_filesCountOrderByAggregateInput
    _avg?: message_filesAvgOrderByAggregateInput
    _max?: message_filesMaxOrderByAggregateInput
    _min?: message_filesMinOrderByAggregateInput
    _sum?: message_filesSumOrderByAggregateInput
  }

  export type message_filesScalarWhereWithAggregatesInput = {
    AND?: message_filesScalarWhereWithAggregatesInput | message_filesScalarWhereWithAggregatesInput[]
    OR?: message_filesScalarWhereWithAggregatesInput[]
    NOT?: message_filesScalarWhereWithAggregatesInput | message_filesScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"message_files"> | bigint | number
    message_id?: BigIntWithAggregatesFilter<"message_files"> | bigint | number
    file_id?: BigIntWithAggregatesFilter<"message_files"> | bigint | number
    sort?: IntWithAggregatesFilter<"message_files"> | number
  }

  export type messagesWhereInput = {
    AND?: messagesWhereInput | messagesWhereInput[]
    OR?: messagesWhereInput[]
    NOT?: messagesWhereInput | messagesWhereInput[]
    id?: BigIntFilter<"messages"> | bigint | number
    chat_panel_id?: BigIntFilter<"messages"> | bigint | number
    sender_id?: UuidNullableFilter<"messages"> | string | null
    reply_to?: BigIntNullableFilter<"messages"> | bigint | number | null
    content?: StringNullableFilter<"messages"> | string | null
    created_at?: DateTimeFilter<"messages"> | Date | string
    is_read?: BoolFilter<"messages"> | boolean
    message_files?: Message_filesListRelationFilter
    chat_panels?: XOR<Chat_panelsScalarRelationFilter, chat_panelsWhereInput>
    messages?: XOR<MessagesNullableScalarRelationFilter, messagesWhereInput> | null
    other_messages?: MessagesListRelationFilter
    users?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
  }

  export type messagesOrderByWithRelationInput = {
    id?: SortOrder
    chat_panel_id?: SortOrder
    sender_id?: SortOrderInput | SortOrder
    reply_to?: SortOrderInput | SortOrder
    content?: SortOrderInput | SortOrder
    created_at?: SortOrder
    is_read?: SortOrder
    message_files?: message_filesOrderByRelationAggregateInput
    chat_panels?: chat_panelsOrderByWithRelationInput
    messages?: messagesOrderByWithRelationInput
    other_messages?: messagesOrderByRelationAggregateInput
    users?: usersOrderByWithRelationInput
  }

  export type messagesWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: messagesWhereInput | messagesWhereInput[]
    OR?: messagesWhereInput[]
    NOT?: messagesWhereInput | messagesWhereInput[]
    chat_panel_id?: BigIntFilter<"messages"> | bigint | number
    sender_id?: UuidNullableFilter<"messages"> | string | null
    reply_to?: BigIntNullableFilter<"messages"> | bigint | number | null
    content?: StringNullableFilter<"messages"> | string | null
    created_at?: DateTimeFilter<"messages"> | Date | string
    is_read?: BoolFilter<"messages"> | boolean
    message_files?: Message_filesListRelationFilter
    chat_panels?: XOR<Chat_panelsScalarRelationFilter, chat_panelsWhereInput>
    messages?: XOR<MessagesNullableScalarRelationFilter, messagesWhereInput> | null
    other_messages?: MessagesListRelationFilter
    users?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
  }, "id">

  export type messagesOrderByWithAggregationInput = {
    id?: SortOrder
    chat_panel_id?: SortOrder
    sender_id?: SortOrderInput | SortOrder
    reply_to?: SortOrderInput | SortOrder
    content?: SortOrderInput | SortOrder
    created_at?: SortOrder
    is_read?: SortOrder
    _count?: messagesCountOrderByAggregateInput
    _avg?: messagesAvgOrderByAggregateInput
    _max?: messagesMaxOrderByAggregateInput
    _min?: messagesMinOrderByAggregateInput
    _sum?: messagesSumOrderByAggregateInput
  }

  export type messagesScalarWhereWithAggregatesInput = {
    AND?: messagesScalarWhereWithAggregatesInput | messagesScalarWhereWithAggregatesInput[]
    OR?: messagesScalarWhereWithAggregatesInput[]
    NOT?: messagesScalarWhereWithAggregatesInput | messagesScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"messages"> | bigint | number
    chat_panel_id?: BigIntWithAggregatesFilter<"messages"> | bigint | number
    sender_id?: UuidNullableWithAggregatesFilter<"messages"> | string | null
    reply_to?: BigIntNullableWithAggregatesFilter<"messages"> | bigint | number | null
    content?: StringNullableWithAggregatesFilter<"messages"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"messages"> | Date | string
    is_read?: BoolWithAggregatesFilter<"messages"> | boolean
  }

  export type notificationsWhereInput = {
    AND?: notificationsWhereInput | notificationsWhereInput[]
    OR?: notificationsWhereInput[]
    NOT?: notificationsWhereInput | notificationsWhereInput[]
    id?: BigIntFilter<"notifications"> | bigint | number
    user_id?: UuidFilter<"notifications"> | string
    title?: StringFilter<"notifications"> | string
    message?: StringFilter<"notifications"> | string
    type?: IntFilter<"notifications"> | number
    is_read?: BoolFilter<"notifications"> | boolean
    click_action?: StringFilter<"notifications"> | string
    created_at?: DateTimeFilter<"notifications"> | Date | string
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }

  export type notificationsOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    title?: SortOrder
    message?: SortOrder
    type?: SortOrder
    is_read?: SortOrder
    click_action?: SortOrder
    created_at?: SortOrder
    users?: usersOrderByWithRelationInput
  }

  export type notificationsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: notificationsWhereInput | notificationsWhereInput[]
    OR?: notificationsWhereInput[]
    NOT?: notificationsWhereInput | notificationsWhereInput[]
    user_id?: UuidFilter<"notifications"> | string
    title?: StringFilter<"notifications"> | string
    message?: StringFilter<"notifications"> | string
    type?: IntFilter<"notifications"> | number
    is_read?: BoolFilter<"notifications"> | boolean
    click_action?: StringFilter<"notifications"> | string
    created_at?: DateTimeFilter<"notifications"> | Date | string
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }, "id">

  export type notificationsOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    title?: SortOrder
    message?: SortOrder
    type?: SortOrder
    is_read?: SortOrder
    click_action?: SortOrder
    created_at?: SortOrder
    _count?: notificationsCountOrderByAggregateInput
    _avg?: notificationsAvgOrderByAggregateInput
    _max?: notificationsMaxOrderByAggregateInput
    _min?: notificationsMinOrderByAggregateInput
    _sum?: notificationsSumOrderByAggregateInput
  }

  export type notificationsScalarWhereWithAggregatesInput = {
    AND?: notificationsScalarWhereWithAggregatesInput | notificationsScalarWhereWithAggregatesInput[]
    OR?: notificationsScalarWhereWithAggregatesInput[]
    NOT?: notificationsScalarWhereWithAggregatesInput | notificationsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"notifications"> | bigint | number
    user_id?: UuidWithAggregatesFilter<"notifications"> | string
    title?: StringWithAggregatesFilter<"notifications"> | string
    message?: StringWithAggregatesFilter<"notifications"> | string
    type?: IntWithAggregatesFilter<"notifications"> | number
    is_read?: BoolWithAggregatesFilter<"notifications"> | boolean
    click_action?: StringWithAggregatesFilter<"notifications"> | string
    created_at?: DateTimeWithAggregatesFilter<"notifications"> | Date | string
  }

  export type order_detailsWhereInput = {
    AND?: order_detailsWhereInput | order_detailsWhereInput[]
    OR?: order_detailsWhereInput[]
    NOT?: order_detailsWhereInput | order_detailsWhereInput[]
    id?: BigIntFilter<"order_details"> | bigint | number
    order_id?: BigIntFilter<"order_details"> | bigint | number
    product_code?: StringFilter<"order_details"> | string
    variant_product_id?: BigIntFilter<"order_details"> | bigint | number
    quantity?: IntFilter<"order_details"> | number
    unit_price?: DecimalFilter<"order_details"> | Decimal | DecimalJsLike | number | string
    unit_price_iva?: DecimalFilter<"order_details"> | Decimal | DecimalJsLike | number | string
    subtotal?: DecimalFilter<"order_details"> | Decimal | DecimalJsLike | number | string
    iva?: DecimalFilter<"order_details"> | Decimal | DecimalJsLike | number | string
    discount_applied?: DecimalFilter<"order_details"> | Decimal | DecimalJsLike | number | string
    attributes?: JsonFilter<"order_details">
    created_at?: DateTimeFilter<"order_details"> | Date | string
    orders?: XOR<OrdersScalarRelationFilter, ordersWhereInput>
    variant_products?: XOR<Variant_productsScalarRelationFilter, variant_productsWhereInput>
  }

  export type order_detailsOrderByWithRelationInput = {
    id?: SortOrder
    order_id?: SortOrder
    product_code?: SortOrder
    variant_product_id?: SortOrder
    quantity?: SortOrder
    unit_price?: SortOrder
    unit_price_iva?: SortOrder
    subtotal?: SortOrder
    iva?: SortOrder
    discount_applied?: SortOrder
    attributes?: SortOrder
    created_at?: SortOrder
    orders?: ordersOrderByWithRelationInput
    variant_products?: variant_productsOrderByWithRelationInput
  }

  export type order_detailsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: order_detailsWhereInput | order_detailsWhereInput[]
    OR?: order_detailsWhereInput[]
    NOT?: order_detailsWhereInput | order_detailsWhereInput[]
    order_id?: BigIntFilter<"order_details"> | bigint | number
    product_code?: StringFilter<"order_details"> | string
    variant_product_id?: BigIntFilter<"order_details"> | bigint | number
    quantity?: IntFilter<"order_details"> | number
    unit_price?: DecimalFilter<"order_details"> | Decimal | DecimalJsLike | number | string
    unit_price_iva?: DecimalFilter<"order_details"> | Decimal | DecimalJsLike | number | string
    subtotal?: DecimalFilter<"order_details"> | Decimal | DecimalJsLike | number | string
    iva?: DecimalFilter<"order_details"> | Decimal | DecimalJsLike | number | string
    discount_applied?: DecimalFilter<"order_details"> | Decimal | DecimalJsLike | number | string
    attributes?: JsonFilter<"order_details">
    created_at?: DateTimeFilter<"order_details"> | Date | string
    orders?: XOR<OrdersScalarRelationFilter, ordersWhereInput>
    variant_products?: XOR<Variant_productsScalarRelationFilter, variant_productsWhereInput>
  }, "id">

  export type order_detailsOrderByWithAggregationInput = {
    id?: SortOrder
    order_id?: SortOrder
    product_code?: SortOrder
    variant_product_id?: SortOrder
    quantity?: SortOrder
    unit_price?: SortOrder
    unit_price_iva?: SortOrder
    subtotal?: SortOrder
    iva?: SortOrder
    discount_applied?: SortOrder
    attributes?: SortOrder
    created_at?: SortOrder
    _count?: order_detailsCountOrderByAggregateInput
    _avg?: order_detailsAvgOrderByAggregateInput
    _max?: order_detailsMaxOrderByAggregateInput
    _min?: order_detailsMinOrderByAggregateInput
    _sum?: order_detailsSumOrderByAggregateInput
  }

  export type order_detailsScalarWhereWithAggregatesInput = {
    AND?: order_detailsScalarWhereWithAggregatesInput | order_detailsScalarWhereWithAggregatesInput[]
    OR?: order_detailsScalarWhereWithAggregatesInput[]
    NOT?: order_detailsScalarWhereWithAggregatesInput | order_detailsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"order_details"> | bigint | number
    order_id?: BigIntWithAggregatesFilter<"order_details"> | bigint | number
    product_code?: StringWithAggregatesFilter<"order_details"> | string
    variant_product_id?: BigIntWithAggregatesFilter<"order_details"> | bigint | number
    quantity?: IntWithAggregatesFilter<"order_details"> | number
    unit_price?: DecimalWithAggregatesFilter<"order_details"> | Decimal | DecimalJsLike | number | string
    unit_price_iva?: DecimalWithAggregatesFilter<"order_details"> | Decimal | DecimalJsLike | number | string
    subtotal?: DecimalWithAggregatesFilter<"order_details"> | Decimal | DecimalJsLike | number | string
    iva?: DecimalWithAggregatesFilter<"order_details"> | Decimal | DecimalJsLike | number | string
    discount_applied?: DecimalWithAggregatesFilter<"order_details"> | Decimal | DecimalJsLike | number | string
    attributes?: JsonWithAggregatesFilter<"order_details">
    created_at?: DateTimeWithAggregatesFilter<"order_details"> | Date | string
  }

  export type ordersWhereInput = {
    AND?: ordersWhereInput | ordersWhereInput[]
    OR?: ordersWhereInput[]
    NOT?: ordersWhereInput | ordersWhereInput[]
    id?: BigIntFilter<"orders"> | bigint | number
    retailer_id?: UuidNullableFilter<"orders"> | string | null
    wholesaler_id?: UuidNullableFilter<"orders"> | string | null
    status?: IntFilter<"orders"> | number
    payment_method?: IntFilter<"orders"> | number
    shipping_address?: BigIntNullableFilter<"orders"> | bigint | number | null
    notes?: StringNullableFilter<"orders"> | string | null
    discount_total?: DecimalFilter<"orders"> | Decimal | DecimalJsLike | number | string
    subtotal?: DecimalFilter<"orders"> | Decimal | DecimalJsLike | number | string
    total?: DecimalFilter<"orders"> | Decimal | DecimalJsLike | number | string
    iva_total?: DecimalFilter<"orders"> | Decimal | DecimalJsLike | number | string
    discount_log?: JsonFilter<"orders">
    estimated_date?: DateTimeNullableFilter<"orders"> | Date | string | null
    created_at?: DateTimeFilter<"orders"> | Date | string
    updated_at?: DateTimeNullableFilter<"orders"> | Date | string | null
    order_details?: Order_detailsListRelationFilter
    users_orders_retailer_idTousers?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
    direcction?: XOR<DirectionNullableScalarRelationFilter, directionWhereInput> | null
    users_orders_wholesaler_idTousers?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
  }

  export type ordersOrderByWithRelationInput = {
    id?: SortOrder
    retailer_id?: SortOrderInput | SortOrder
    wholesaler_id?: SortOrderInput | SortOrder
    status?: SortOrder
    payment_method?: SortOrder
    shipping_address?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    discount_total?: SortOrder
    subtotal?: SortOrder
    total?: SortOrder
    iva_total?: SortOrder
    discount_log?: SortOrder
    estimated_date?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    order_details?: order_detailsOrderByRelationAggregateInput
    users_orders_retailer_idTousers?: usersOrderByWithRelationInput
    direcction?: directionOrderByWithRelationInput
    users_orders_wholesaler_idTousers?: usersOrderByWithRelationInput
  }

  export type ordersWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: ordersWhereInput | ordersWhereInput[]
    OR?: ordersWhereInput[]
    NOT?: ordersWhereInput | ordersWhereInput[]
    retailer_id?: UuidNullableFilter<"orders"> | string | null
    wholesaler_id?: UuidNullableFilter<"orders"> | string | null
    status?: IntFilter<"orders"> | number
    payment_method?: IntFilter<"orders"> | number
    shipping_address?: BigIntNullableFilter<"orders"> | bigint | number | null
    notes?: StringNullableFilter<"orders"> | string | null
    discount_total?: DecimalFilter<"orders"> | Decimal | DecimalJsLike | number | string
    subtotal?: DecimalFilter<"orders"> | Decimal | DecimalJsLike | number | string
    total?: DecimalFilter<"orders"> | Decimal | DecimalJsLike | number | string
    iva_total?: DecimalFilter<"orders"> | Decimal | DecimalJsLike | number | string
    discount_log?: JsonFilter<"orders">
    estimated_date?: DateTimeNullableFilter<"orders"> | Date | string | null
    created_at?: DateTimeFilter<"orders"> | Date | string
    updated_at?: DateTimeNullableFilter<"orders"> | Date | string | null
    order_details?: Order_detailsListRelationFilter
    users_orders_retailer_idTousers?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
    direcction?: XOR<DirectionNullableScalarRelationFilter, directionWhereInput> | null
    users_orders_wholesaler_idTousers?: XOR<UsersNullableScalarRelationFilter, usersWhereInput> | null
  }, "id">

  export type ordersOrderByWithAggregationInput = {
    id?: SortOrder
    retailer_id?: SortOrderInput | SortOrder
    wholesaler_id?: SortOrderInput | SortOrder
    status?: SortOrder
    payment_method?: SortOrder
    shipping_address?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    discount_total?: SortOrder
    subtotal?: SortOrder
    total?: SortOrder
    iva_total?: SortOrder
    discount_log?: SortOrder
    estimated_date?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: ordersCountOrderByAggregateInput
    _avg?: ordersAvgOrderByAggregateInput
    _max?: ordersMaxOrderByAggregateInput
    _min?: ordersMinOrderByAggregateInput
    _sum?: ordersSumOrderByAggregateInput
  }

  export type ordersScalarWhereWithAggregatesInput = {
    AND?: ordersScalarWhereWithAggregatesInput | ordersScalarWhereWithAggregatesInput[]
    OR?: ordersScalarWhereWithAggregatesInput[]
    NOT?: ordersScalarWhereWithAggregatesInput | ordersScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"orders"> | bigint | number
    retailer_id?: UuidNullableWithAggregatesFilter<"orders"> | string | null
    wholesaler_id?: UuidNullableWithAggregatesFilter<"orders"> | string | null
    status?: IntWithAggregatesFilter<"orders"> | number
    payment_method?: IntWithAggregatesFilter<"orders"> | number
    shipping_address?: BigIntNullableWithAggregatesFilter<"orders"> | bigint | number | null
    notes?: StringNullableWithAggregatesFilter<"orders"> | string | null
    discount_total?: DecimalWithAggregatesFilter<"orders"> | Decimal | DecimalJsLike | number | string
    subtotal?: DecimalWithAggregatesFilter<"orders"> | Decimal | DecimalJsLike | number | string
    total?: DecimalWithAggregatesFilter<"orders"> | Decimal | DecimalJsLike | number | string
    iva_total?: DecimalWithAggregatesFilter<"orders"> | Decimal | DecimalJsLike | number | string
    discount_log?: JsonWithAggregatesFilter<"orders">
    estimated_date?: DateTimeNullableWithAggregatesFilter<"orders"> | Date | string | null
    created_at?: DateTimeWithAggregatesFilter<"orders"> | Date | string
    updated_at?: DateTimeNullableWithAggregatesFilter<"orders"> | Date | string | null
  }

  export type productsWhereInput = {
    AND?: productsWhereInput | productsWhereInput[]
    OR?: productsWhereInput[]
    NOT?: productsWhereInput | productsWhereInput[]
    id?: BigIntFilter<"products"> | bigint | number
    user_id?: UuidFilter<"products"> | string
    name?: StringFilter<"products"> | string
    title?: StringNullableFilter<"products"> | string | null
    description?: StringNullableFilter<"products"> | string | null
    iva?: DecimalFilter<"products"> | Decimal | DecimalJsLike | number | string
    category_id?: BigIntFilter<"products"> | bigint | number
    status?: IntFilter<"products"> | number
    created_at?: DateTimeFilter<"products"> | Date | string
    product_code?: StringFilter<"products"> | string
    categories?: XOR<CategoriesScalarRelationFilter, categoriesWhereInput>
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
    products_files?: Products_filesListRelationFilter
    variant_products?: Variant_productsListRelationFilter
  }

  export type productsOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    name?: SortOrder
    title?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    iva?: SortOrder
    category_id?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    product_code?: SortOrder
    categories?: categoriesOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
    products_files?: products_filesOrderByRelationAggregateInput
    variant_products?: variant_productsOrderByRelationAggregateInput
  }

  export type productsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: productsWhereInput | productsWhereInput[]
    OR?: productsWhereInput[]
    NOT?: productsWhereInput | productsWhereInput[]
    user_id?: UuidFilter<"products"> | string
    name?: StringFilter<"products"> | string
    title?: StringNullableFilter<"products"> | string | null
    description?: StringNullableFilter<"products"> | string | null
    iva?: DecimalFilter<"products"> | Decimal | DecimalJsLike | number | string
    category_id?: BigIntFilter<"products"> | bigint | number
    status?: IntFilter<"products"> | number
    created_at?: DateTimeFilter<"products"> | Date | string
    product_code?: StringFilter<"products"> | string
    categories?: XOR<CategoriesScalarRelationFilter, categoriesWhereInput>
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
    products_files?: Products_filesListRelationFilter
    variant_products?: Variant_productsListRelationFilter
  }, "id">

  export type productsOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    name?: SortOrder
    title?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    iva?: SortOrder
    category_id?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    product_code?: SortOrder
    _count?: productsCountOrderByAggregateInput
    _avg?: productsAvgOrderByAggregateInput
    _max?: productsMaxOrderByAggregateInput
    _min?: productsMinOrderByAggregateInput
    _sum?: productsSumOrderByAggregateInput
  }

  export type productsScalarWhereWithAggregatesInput = {
    AND?: productsScalarWhereWithAggregatesInput | productsScalarWhereWithAggregatesInput[]
    OR?: productsScalarWhereWithAggregatesInput[]
    NOT?: productsScalarWhereWithAggregatesInput | productsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"products"> | bigint | number
    user_id?: UuidWithAggregatesFilter<"products"> | string
    name?: StringWithAggregatesFilter<"products"> | string
    title?: StringNullableWithAggregatesFilter<"products"> | string | null
    description?: StringNullableWithAggregatesFilter<"products"> | string | null
    iva?: DecimalWithAggregatesFilter<"products"> | Decimal | DecimalJsLike | number | string
    category_id?: BigIntWithAggregatesFilter<"products"> | bigint | number
    status?: IntWithAggregatesFilter<"products"> | number
    created_at?: DateTimeWithAggregatesFilter<"products"> | Date | string
    product_code?: StringWithAggregatesFilter<"products"> | string
  }

  export type products_filesWhereInput = {
    AND?: products_filesWhereInput | products_filesWhereInput[]
    OR?: products_filesWhereInput[]
    NOT?: products_filesWhereInput | products_filesWhereInput[]
    id?: BigIntFilter<"products_files"> | bigint | number
    product_id?: BigIntFilter<"products_files"> | bigint | number
    file_id?: BigIntFilter<"products_files"> | bigint | number
    sort?: IntFilter<"products_files"> | number
    files?: XOR<FilesScalarRelationFilter, filesWhereInput>
    products?: XOR<ProductsScalarRelationFilter, productsWhereInput>
  }

  export type products_filesOrderByWithRelationInput = {
    id?: SortOrder
    product_id?: SortOrder
    file_id?: SortOrder
    sort?: SortOrder
    files?: filesOrderByWithRelationInput
    products?: productsOrderByWithRelationInput
  }

  export type products_filesWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: products_filesWhereInput | products_filesWhereInput[]
    OR?: products_filesWhereInput[]
    NOT?: products_filesWhereInput | products_filesWhereInput[]
    product_id?: BigIntFilter<"products_files"> | bigint | number
    file_id?: BigIntFilter<"products_files"> | bigint | number
    sort?: IntFilter<"products_files"> | number
    files?: XOR<FilesScalarRelationFilter, filesWhereInput>
    products?: XOR<ProductsScalarRelationFilter, productsWhereInput>
  }, "id">

  export type products_filesOrderByWithAggregationInput = {
    id?: SortOrder
    product_id?: SortOrder
    file_id?: SortOrder
    sort?: SortOrder
    _count?: products_filesCountOrderByAggregateInput
    _avg?: products_filesAvgOrderByAggregateInput
    _max?: products_filesMaxOrderByAggregateInput
    _min?: products_filesMinOrderByAggregateInput
    _sum?: products_filesSumOrderByAggregateInput
  }

  export type products_filesScalarWhereWithAggregatesInput = {
    AND?: products_filesScalarWhereWithAggregatesInput | products_filesScalarWhereWithAggregatesInput[]
    OR?: products_filesScalarWhereWithAggregatesInput[]
    NOT?: products_filesScalarWhereWithAggregatesInput | products_filesScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"products_files"> | bigint | number
    product_id?: BigIntWithAggregatesFilter<"products_files"> | bigint | number
    file_id?: BigIntWithAggregatesFilter<"products_files"> | bigint | number
    sort?: IntWithAggregatesFilter<"products_files"> | number
  }

  export type user_sessionsWhereInput = {
    AND?: user_sessionsWhereInput | user_sessionsWhereInput[]
    OR?: user_sessionsWhereInput[]
    NOT?: user_sessionsWhereInput | user_sessionsWhereInput[]
    session_id?: UuidFilter<"user_sessions"> | string
    user_id?: UuidFilter<"user_sessions"> | string
    device_name?: StringFilter<"user_sessions"> | string
    device_finger?: StringFilter<"user_sessions"> | string
    user_agent?: StringFilter<"user_sessions"> | string
    revoked?: BoolFilter<"user_sessions"> | boolean
    last_ip?: StringFilter<"user_sessions"> | string
    access_token?: StringNullableFilter<"user_sessions"> | string | null
    refresh_token?: StringNullableFilter<"user_sessions"> | string | null
    created_at?: DateTimeFilter<"user_sessions"> | Date | string
    last_active?: DateTimeFilter<"user_sessions"> | Date | string
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }

  export type user_sessionsOrderByWithRelationInput = {
    session_id?: SortOrder
    user_id?: SortOrder
    device_name?: SortOrder
    device_finger?: SortOrder
    user_agent?: SortOrder
    revoked?: SortOrder
    last_ip?: SortOrder
    access_token?: SortOrderInput | SortOrder
    refresh_token?: SortOrderInput | SortOrder
    created_at?: SortOrder
    last_active?: SortOrder
    users?: usersOrderByWithRelationInput
  }

  export type user_sessionsWhereUniqueInput = Prisma.AtLeast<{
    session_id?: string
    user_id_device_finger?: user_sessionsUser_idDevice_fingerCompoundUniqueInput
    AND?: user_sessionsWhereInput | user_sessionsWhereInput[]
    OR?: user_sessionsWhereInput[]
    NOT?: user_sessionsWhereInput | user_sessionsWhereInput[]
    user_id?: UuidFilter<"user_sessions"> | string
    device_name?: StringFilter<"user_sessions"> | string
    device_finger?: StringFilter<"user_sessions"> | string
    user_agent?: StringFilter<"user_sessions"> | string
    revoked?: BoolFilter<"user_sessions"> | boolean
    last_ip?: StringFilter<"user_sessions"> | string
    access_token?: StringNullableFilter<"user_sessions"> | string | null
    refresh_token?: StringNullableFilter<"user_sessions"> | string | null
    created_at?: DateTimeFilter<"user_sessions"> | Date | string
    last_active?: DateTimeFilter<"user_sessions"> | Date | string
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }, "session_id" | "user_id_device_finger">

  export type user_sessionsOrderByWithAggregationInput = {
    session_id?: SortOrder
    user_id?: SortOrder
    device_name?: SortOrder
    device_finger?: SortOrder
    user_agent?: SortOrder
    revoked?: SortOrder
    last_ip?: SortOrder
    access_token?: SortOrderInput | SortOrder
    refresh_token?: SortOrderInput | SortOrder
    created_at?: SortOrder
    last_active?: SortOrder
    _count?: user_sessionsCountOrderByAggregateInput
    _max?: user_sessionsMaxOrderByAggregateInput
    _min?: user_sessionsMinOrderByAggregateInput
  }

  export type user_sessionsScalarWhereWithAggregatesInput = {
    AND?: user_sessionsScalarWhereWithAggregatesInput | user_sessionsScalarWhereWithAggregatesInput[]
    OR?: user_sessionsScalarWhereWithAggregatesInput[]
    NOT?: user_sessionsScalarWhereWithAggregatesInput | user_sessionsScalarWhereWithAggregatesInput[]
    session_id?: UuidWithAggregatesFilter<"user_sessions"> | string
    user_id?: UuidWithAggregatesFilter<"user_sessions"> | string
    device_name?: StringWithAggregatesFilter<"user_sessions"> | string
    device_finger?: StringWithAggregatesFilter<"user_sessions"> | string
    user_agent?: StringWithAggregatesFilter<"user_sessions"> | string
    revoked?: BoolWithAggregatesFilter<"user_sessions"> | boolean
    last_ip?: StringWithAggregatesFilter<"user_sessions"> | string
    access_token?: StringNullableWithAggregatesFilter<"user_sessions"> | string | null
    refresh_token?: StringNullableWithAggregatesFilter<"user_sessions"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"user_sessions"> | Date | string
    last_active?: DateTimeWithAggregatesFilter<"user_sessions"> | Date | string
  }

  export type usersWhereInput = {
    AND?: usersWhereInput | usersWhereInput[]
    OR?: usersWhereInput[]
    NOT?: usersWhereInput | usersWhereInput[]
    id?: UuidFilter<"users"> | string
    user_id?: StringNullableFilter<"users"> | string | null
    first_name?: StringNullableFilter<"users"> | string | null
    last_name?: StringNullableFilter<"users"> | string | null
    username?: StringNullableFilter<"users"> | string | null
    password?: StringFilter<"users"> | string
    email?: StringNullableFilter<"users"> | string | null
    telephone?: StringNullableFilter<"users"> | string | null
    status?: EnumUserStatusFilter<"users"> | $Enums.UserStatus
    profile?: JsonNullableFilter<"users">
    created_at?: DateTimeFilter<"users"> | Date | string
    updated_at?: DateTimeNullableFilter<"users"> | Date | string | null
    role?: EnumUserRoleFilter<"users"> | $Enums.UserRole
    cif?: StringNullableFilter<"users"> | string | null
    carts?: CartsListRelationFilter
    categories?: CategoriesListRelationFilter
    chat_participants?: Chat_participantsListRelationFilter
    configurations?: ConfigurationsListRelationFilter
    deliveries?: DeliveriesListRelationFilter
    direction?: DirectionListRelationFilter
    discounts?: DiscountsListRelationFilter
    messages?: MessagesListRelationFilter
    notifications?: NotificationsListRelationFilter
    orders_orders_retailer_idTousers?: OrdersListRelationFilter
    orders_orders_wholesaler_idTousers?: OrdersListRelationFilter
    products?: ProductsListRelationFilter
    user_sessions?: User_sessionsListRelationFilter
  }

  export type usersOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrderInput | SortOrder
    first_name?: SortOrderInput | SortOrder
    last_name?: SortOrderInput | SortOrder
    username?: SortOrderInput | SortOrder
    password?: SortOrder
    email?: SortOrderInput | SortOrder
    telephone?: SortOrderInput | SortOrder
    status?: SortOrder
    profile?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    role?: SortOrder
    cif?: SortOrderInput | SortOrder
    carts?: cartsOrderByRelationAggregateInput
    categories?: categoriesOrderByRelationAggregateInput
    chat_participants?: chat_participantsOrderByRelationAggregateInput
    configurations?: configurationsOrderByRelationAggregateInput
    deliveries?: deliveriesOrderByRelationAggregateInput
    direction?: directionOrderByRelationAggregateInput
    discounts?: discountsOrderByRelationAggregateInput
    messages?: messagesOrderByRelationAggregateInput
    notifications?: notificationsOrderByRelationAggregateInput
    orders_orders_retailer_idTousers?: ordersOrderByRelationAggregateInput
    orders_orders_wholesaler_idTousers?: ordersOrderByRelationAggregateInput
    products?: productsOrderByRelationAggregateInput
    user_sessions?: user_sessionsOrderByRelationAggregateInput
  }

  export type usersWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    username?: string
    email?: string
    telephone?: string
    AND?: usersWhereInput | usersWhereInput[]
    OR?: usersWhereInput[]
    NOT?: usersWhereInput | usersWhereInput[]
    user_id?: StringNullableFilter<"users"> | string | null
    first_name?: StringNullableFilter<"users"> | string | null
    last_name?: StringNullableFilter<"users"> | string | null
    password?: StringFilter<"users"> | string
    status?: EnumUserStatusFilter<"users"> | $Enums.UserStatus
    profile?: JsonNullableFilter<"users">
    created_at?: DateTimeFilter<"users"> | Date | string
    updated_at?: DateTimeNullableFilter<"users"> | Date | string | null
    role?: EnumUserRoleFilter<"users"> | $Enums.UserRole
    cif?: StringNullableFilter<"users"> | string | null
    carts?: CartsListRelationFilter
    categories?: CategoriesListRelationFilter
    chat_participants?: Chat_participantsListRelationFilter
    configurations?: ConfigurationsListRelationFilter
    deliveries?: DeliveriesListRelationFilter
    direction?: DirectionListRelationFilter
    discounts?: DiscountsListRelationFilter
    messages?: MessagesListRelationFilter
    notifications?: NotificationsListRelationFilter
    orders_orders_retailer_idTousers?: OrdersListRelationFilter
    orders_orders_wholesaler_idTousers?: OrdersListRelationFilter
    products?: ProductsListRelationFilter
    user_sessions?: User_sessionsListRelationFilter
  }, "id" | "username" | "email" | "telephone">

  export type usersOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrderInput | SortOrder
    first_name?: SortOrderInput | SortOrder
    last_name?: SortOrderInput | SortOrder
    username?: SortOrderInput | SortOrder
    password?: SortOrder
    email?: SortOrderInput | SortOrder
    telephone?: SortOrderInput | SortOrder
    status?: SortOrder
    profile?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    role?: SortOrder
    cif?: SortOrderInput | SortOrder
    _count?: usersCountOrderByAggregateInput
    _max?: usersMaxOrderByAggregateInput
    _min?: usersMinOrderByAggregateInput
  }

  export type usersScalarWhereWithAggregatesInput = {
    AND?: usersScalarWhereWithAggregatesInput | usersScalarWhereWithAggregatesInput[]
    OR?: usersScalarWhereWithAggregatesInput[]
    NOT?: usersScalarWhereWithAggregatesInput | usersScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"users"> | string
    user_id?: StringNullableWithAggregatesFilter<"users"> | string | null
    first_name?: StringNullableWithAggregatesFilter<"users"> | string | null
    last_name?: StringNullableWithAggregatesFilter<"users"> | string | null
    username?: StringNullableWithAggregatesFilter<"users"> | string | null
    password?: StringWithAggregatesFilter<"users"> | string
    email?: StringNullableWithAggregatesFilter<"users"> | string | null
    telephone?: StringNullableWithAggregatesFilter<"users"> | string | null
    status?: EnumUserStatusWithAggregatesFilter<"users"> | $Enums.UserStatus
    profile?: JsonNullableWithAggregatesFilter<"users">
    created_at?: DateTimeWithAggregatesFilter<"users"> | Date | string
    updated_at?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    role?: EnumUserRoleWithAggregatesFilter<"users"> | $Enums.UserRole
    cif?: StringNullableWithAggregatesFilter<"users"> | string | null
  }

  export type variant_productsWhereInput = {
    AND?: variant_productsWhereInput | variant_productsWhereInput[]
    OR?: variant_productsWhereInput[]
    NOT?: variant_productsWhereInput | variant_productsWhereInput[]
    id?: BigIntFilter<"variant_products"> | bigint | number
    created_at?: DateTimeFilter<"variant_products"> | Date | string
    product_id?: BigIntFilter<"variant_products"> | bigint | number
    type_sale?: IntFilter<"variant_products"> | number
    price?: DecimalFilter<"variant_products"> | Decimal | DecimalJsLike | number | string
    price_iva?: DecimalFilter<"variant_products"> | Decimal | DecimalJsLike | number | string
    stock?: IntFilter<"variant_products"> | number
    sort?: IntFilter<"variant_products"> | number
    attributes?: JsonNullableFilter<"variant_products">
    status?: IntFilter<"variant_products"> | number
    iva?: DecimalFilter<"variant_products"> | Decimal | DecimalJsLike | number | string
    product_code?: StringFilter<"variant_products"> | string
    cart_details?: Cart_detailsListRelationFilter
    order_details?: Order_detailsListRelationFilter
    products?: XOR<ProductsScalarRelationFilter, productsWhereInput>
  }

  export type variant_productsOrderByWithRelationInput = {
    id?: SortOrder
    created_at?: SortOrder
    product_id?: SortOrder
    type_sale?: SortOrder
    price?: SortOrder
    price_iva?: SortOrder
    stock?: SortOrder
    sort?: SortOrder
    attributes?: SortOrderInput | SortOrder
    status?: SortOrder
    iva?: SortOrder
    product_code?: SortOrder
    cart_details?: cart_detailsOrderByRelationAggregateInput
    order_details?: order_detailsOrderByRelationAggregateInput
    products?: productsOrderByWithRelationInput
  }

  export type variant_productsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: variant_productsWhereInput | variant_productsWhereInput[]
    OR?: variant_productsWhereInput[]
    NOT?: variant_productsWhereInput | variant_productsWhereInput[]
    created_at?: DateTimeFilter<"variant_products"> | Date | string
    product_id?: BigIntFilter<"variant_products"> | bigint | number
    type_sale?: IntFilter<"variant_products"> | number
    price?: DecimalFilter<"variant_products"> | Decimal | DecimalJsLike | number | string
    price_iva?: DecimalFilter<"variant_products"> | Decimal | DecimalJsLike | number | string
    stock?: IntFilter<"variant_products"> | number
    sort?: IntFilter<"variant_products"> | number
    attributes?: JsonNullableFilter<"variant_products">
    status?: IntFilter<"variant_products"> | number
    iva?: DecimalFilter<"variant_products"> | Decimal | DecimalJsLike | number | string
    product_code?: StringFilter<"variant_products"> | string
    cart_details?: Cart_detailsListRelationFilter
    order_details?: Order_detailsListRelationFilter
    products?: XOR<ProductsScalarRelationFilter, productsWhereInput>
  }, "id">

  export type variant_productsOrderByWithAggregationInput = {
    id?: SortOrder
    created_at?: SortOrder
    product_id?: SortOrder
    type_sale?: SortOrder
    price?: SortOrder
    price_iva?: SortOrder
    stock?: SortOrder
    sort?: SortOrder
    attributes?: SortOrderInput | SortOrder
    status?: SortOrder
    iva?: SortOrder
    product_code?: SortOrder
    _count?: variant_productsCountOrderByAggregateInput
    _avg?: variant_productsAvgOrderByAggregateInput
    _max?: variant_productsMaxOrderByAggregateInput
    _min?: variant_productsMinOrderByAggregateInput
    _sum?: variant_productsSumOrderByAggregateInput
  }

  export type variant_productsScalarWhereWithAggregatesInput = {
    AND?: variant_productsScalarWhereWithAggregatesInput | variant_productsScalarWhereWithAggregatesInput[]
    OR?: variant_productsScalarWhereWithAggregatesInput[]
    NOT?: variant_productsScalarWhereWithAggregatesInput | variant_productsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"variant_products"> | bigint | number
    created_at?: DateTimeWithAggregatesFilter<"variant_products"> | Date | string
    product_id?: BigIntWithAggregatesFilter<"variant_products"> | bigint | number
    type_sale?: IntWithAggregatesFilter<"variant_products"> | number
    price?: DecimalWithAggregatesFilter<"variant_products"> | Decimal | DecimalJsLike | number | string
    price_iva?: DecimalWithAggregatesFilter<"variant_products"> | Decimal | DecimalJsLike | number | string
    stock?: IntWithAggregatesFilter<"variant_products"> | number
    sort?: IntWithAggregatesFilter<"variant_products"> | number
    attributes?: JsonNullableWithAggregatesFilter<"variant_products">
    status?: IntWithAggregatesFilter<"variant_products"> | number
    iva?: DecimalWithAggregatesFilter<"variant_products"> | Decimal | DecimalJsLike | number | string
    product_code?: StringWithAggregatesFilter<"variant_products"> | string
  }

  export type directionWhereInput = {
    AND?: directionWhereInput | directionWhereInput[]
    OR?: directionWhereInput[]
    NOT?: directionWhereInput | directionWhereInput[]
    id?: BigIntFilter<"direction"> | bigint | number
    user_id?: UuidFilter<"direction"> | string
    type?: EnumAddressTypeFilter<"direction"> | $Enums.AddressType
    direction?: StringFilter<"direction"> | string
    city?: StringFilter<"direction"> | string
    province?: StringFilter<"direction"> | string
    zip_code?: StringFilter<"direction"> | string
    latitude?: FloatFilter<"direction"> | number
    longitude?: FloatFilter<"direction"> | number
    created_at?: DateTimeFilter<"direction"> | Date | string
    updated_at?: DateTimeNullableFilter<"direction"> | Date | string | null
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
    orders?: OrdersListRelationFilter
  }

  export type directionOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    type?: SortOrder
    direction?: SortOrder
    city?: SortOrder
    province?: SortOrder
    zip_code?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    users?: usersOrderByWithRelationInput
    orders?: ordersOrderByRelationAggregateInput
  }

  export type directionWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: directionWhereInput | directionWhereInput[]
    OR?: directionWhereInput[]
    NOT?: directionWhereInput | directionWhereInput[]
    user_id?: UuidFilter<"direction"> | string
    type?: EnumAddressTypeFilter<"direction"> | $Enums.AddressType
    direction?: StringFilter<"direction"> | string
    city?: StringFilter<"direction"> | string
    province?: StringFilter<"direction"> | string
    zip_code?: StringFilter<"direction"> | string
    latitude?: FloatFilter<"direction"> | number
    longitude?: FloatFilter<"direction"> | number
    created_at?: DateTimeFilter<"direction"> | Date | string
    updated_at?: DateTimeNullableFilter<"direction"> | Date | string | null
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
    orders?: OrdersListRelationFilter
  }, "id">

  export type directionOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    type?: SortOrder
    direction?: SortOrder
    city?: SortOrder
    province?: SortOrder
    zip_code?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: directionCountOrderByAggregateInput
    _avg?: directionAvgOrderByAggregateInput
    _max?: directionMaxOrderByAggregateInput
    _min?: directionMinOrderByAggregateInput
    _sum?: directionSumOrderByAggregateInput
  }

  export type directionScalarWhereWithAggregatesInput = {
    AND?: directionScalarWhereWithAggregatesInput | directionScalarWhereWithAggregatesInput[]
    OR?: directionScalarWhereWithAggregatesInput[]
    NOT?: directionScalarWhereWithAggregatesInput | directionScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"direction"> | bigint | number
    user_id?: UuidWithAggregatesFilter<"direction"> | string
    type?: EnumAddressTypeWithAggregatesFilter<"direction"> | $Enums.AddressType
    direction?: StringWithAggregatesFilter<"direction"> | string
    city?: StringWithAggregatesFilter<"direction"> | string
    province?: StringWithAggregatesFilter<"direction"> | string
    zip_code?: StringWithAggregatesFilter<"direction"> | string
    latitude?: FloatWithAggregatesFilter<"direction"> | number
    longitude?: FloatWithAggregatesFilter<"direction"> | number
    created_at?: DateTimeWithAggregatesFilter<"direction"> | Date | string
    updated_at?: DateTimeNullableWithAggregatesFilter<"direction"> | Date | string | null
  }

  export type cart_detailsCreateInput = {
    id?: bigint | number
    quantity: number
    created_at?: Date | string
    carts: cartsCreateNestedOneWithoutCart_detailsInput
    variant_products?: variant_productsCreateNestedOneWithoutCart_detailsInput
  }

  export type cart_detailsUncheckedCreateInput = {
    id?: bigint | number
    cart_id: bigint | number
    variant_products_id?: bigint | number | null
    quantity: number
    created_at?: Date | string
  }

  export type cart_detailsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    quantity?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    carts?: cartsUpdateOneRequiredWithoutCart_detailsNestedInput
    variant_products?: variant_productsUpdateOneWithoutCart_detailsNestedInput
  }

  export type cart_detailsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    cart_id?: BigIntFieldUpdateOperationsInput | bigint | number
    variant_products_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    quantity?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type cart_detailsCreateManyInput = {
    id?: bigint | number
    cart_id: bigint | number
    variant_products_id?: bigint | number | null
    quantity: number
    created_at?: Date | string
  }

  export type cart_detailsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    quantity?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type cart_detailsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    cart_id?: BigIntFieldUpdateOperationsInput | bigint | number
    variant_products_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    quantity?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type cartsCreateInput = {
    id?: bigint | number
    created_at?: Date | string
    cart_details?: cart_detailsCreateNestedManyWithoutCartsInput
    users: usersCreateNestedOneWithoutCartsInput
  }

  export type cartsUncheckedCreateInput = {
    id?: bigint | number
    user_id: string
    created_at?: Date | string
    cart_details?: cart_detailsUncheckedCreateNestedManyWithoutCartsInput
  }

  export type cartsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    cart_details?: cart_detailsUpdateManyWithoutCartsNestedInput
    users?: usersUpdateOneRequiredWithoutCartsNestedInput
  }

  export type cartsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    cart_details?: cart_detailsUncheckedUpdateManyWithoutCartsNestedInput
  }

  export type cartsCreateManyInput = {
    id?: bigint | number
    user_id: string
    created_at?: Date | string
  }

  export type cartsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type cartsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type categoriesCreateInput = {
    id?: bigint | number
    name: string
    iva?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string
    categories?: categoriesCreateNestedOneWithoutOther_categoriesInput
    other_categories?: categoriesCreateNestedManyWithoutCategoriesInput
    users?: usersCreateNestedOneWithoutCategoriesInput
    products?: productsCreateNestedManyWithoutCategoriesInput
  }

  export type categoriesUncheckedCreateInput = {
    id?: bigint | number
    user_id?: string | null
    name: string
    iva?: Decimal | DecimalJsLike | number | string | null
    parent_id?: bigint | number | null
    created_at?: Date | string
    other_categories?: categoriesUncheckedCreateNestedManyWithoutCategoriesInput
    products?: productsUncheckedCreateNestedManyWithoutCategoriesInput
  }

  export type categoriesUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    iva?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    categories?: categoriesUpdateOneWithoutOther_categoriesNestedInput
    other_categories?: categoriesUpdateManyWithoutCategoriesNestedInput
    users?: usersUpdateOneWithoutCategoriesNestedInput
    products?: productsUpdateManyWithoutCategoriesNestedInput
  }

  export type categoriesUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    iva?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    parent_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    other_categories?: categoriesUncheckedUpdateManyWithoutCategoriesNestedInput
    products?: productsUncheckedUpdateManyWithoutCategoriesNestedInput
  }

  export type categoriesCreateManyInput = {
    id?: bigint | number
    user_id?: string | null
    name: string
    iva?: Decimal | DecimalJsLike | number | string | null
    parent_id?: bigint | number | null
    created_at?: Date | string
  }

  export type categoriesUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    iva?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type categoriesUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    iva?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    parent_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type chat_panelsCreateInput = {
    id?: bigint | number
    name: string
    created_at?: Date | string
    chat_participants?: chat_participantsCreateNestedManyWithoutChat_panelsInput
    messages?: messagesCreateNestedManyWithoutChat_panelsInput
  }

  export type chat_panelsUncheckedCreateInput = {
    id?: bigint | number
    name: string
    created_at?: Date | string
    chat_participants?: chat_participantsUncheckedCreateNestedManyWithoutChat_panelsInput
    messages?: messagesUncheckedCreateNestedManyWithoutChat_panelsInput
  }

  export type chat_panelsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_participants?: chat_participantsUpdateManyWithoutChat_panelsNestedInput
    messages?: messagesUpdateManyWithoutChat_panelsNestedInput
  }

  export type chat_panelsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_participants?: chat_participantsUncheckedUpdateManyWithoutChat_panelsNestedInput
    messages?: messagesUncheckedUpdateManyWithoutChat_panelsNestedInput
  }

  export type chat_panelsCreateManyInput = {
    id?: bigint | number
    name: string
    created_at?: Date | string
  }

  export type chat_panelsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type chat_panelsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type chat_participantsCreateInput = {
    created_at?: Date | string | null
    chat_panels: chat_panelsCreateNestedOneWithoutChat_participantsInput
    users: usersCreateNestedOneWithoutChat_participantsInput
  }

  export type chat_participantsUncheckedCreateInput = {
    user_id: string
    chat_panel_id: bigint | number
    created_at?: Date | string | null
  }

  export type chat_participantsUpdateInput = {
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    chat_panels?: chat_panelsUpdateOneRequiredWithoutChat_participantsNestedInput
    users?: usersUpdateOneRequiredWithoutChat_participantsNestedInput
  }

  export type chat_participantsUncheckedUpdateInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    chat_panel_id?: BigIntFieldUpdateOperationsInput | bigint | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type chat_participantsCreateManyInput = {
    user_id: string
    chat_panel_id: bigint | number
    created_at?: Date | string | null
  }

  export type chat_participantsUpdateManyMutationInput = {
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type chat_participantsUncheckedUpdateManyInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    chat_panel_id?: BigIntFieldUpdateOperationsInput | bigint | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type configurationsCreateInput = {
    id?: bigint | number
    language?: string
    timezone?: string
    users: usersCreateNestedOneWithoutConfigurationsInput
  }

  export type configurationsUncheckedCreateInput = {
    id?: bigint | number
    user_id: string
    language?: string
    timezone?: string
  }

  export type configurationsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
    users?: usersUpdateOneRequiredWithoutConfigurationsNestedInput
  }

  export type configurationsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: StringFieldUpdateOperationsInput | string
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
  }

  export type configurationsCreateManyInput = {
    id?: bigint | number
    user_id: string
    language?: string
    timezone?: string
  }

  export type configurationsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
  }

  export type configurationsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: StringFieldUpdateOperationsInput | string
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
  }

  export type deliveriesCreateInput = {
    id?: bigint | number
    order_id: bigint | number
    status?: $Enums.DeliveryStatus
    start_time?: Date | string
    end_time?: Date | string | null
    notes: string
    created_at?: Date | string
    updated_at?: Date | string | null
    latitude: number
    longitude: number
    users: usersCreateNestedOneWithoutDeliveriesInput
    delivery_timeline?: delivery_timelineCreateNestedManyWithoutDeliveriesInput
  }

  export type deliveriesUncheckedCreateInput = {
    id?: bigint | number
    order_id: bigint | number
    delivery_person: string
    status?: $Enums.DeliveryStatus
    start_time?: Date | string
    end_time?: Date | string | null
    notes: string
    created_at?: Date | string
    updated_at?: Date | string | null
    latitude: number
    longitude: number
    delivery_timeline?: delivery_timelineUncheckedCreateNestedManyWithoutDeliveriesInput
  }

  export type deliveriesUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    order_id?: BigIntFieldUpdateOperationsInput | bigint | number
    status?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    start_time?: DateTimeFieldUpdateOperationsInput | Date | string
    end_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
    users?: usersUpdateOneRequiredWithoutDeliveriesNestedInput
    delivery_timeline?: delivery_timelineUpdateManyWithoutDeliveriesNestedInput
  }

  export type deliveriesUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    order_id?: BigIntFieldUpdateOperationsInput | bigint | number
    delivery_person?: StringFieldUpdateOperationsInput | string
    status?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    start_time?: DateTimeFieldUpdateOperationsInput | Date | string
    end_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
    delivery_timeline?: delivery_timelineUncheckedUpdateManyWithoutDeliveriesNestedInput
  }

  export type deliveriesCreateManyInput = {
    id?: bigint | number
    order_id: bigint | number
    delivery_person: string
    status?: $Enums.DeliveryStatus
    start_time?: Date | string
    end_time?: Date | string | null
    notes: string
    created_at?: Date | string
    updated_at?: Date | string | null
    latitude: number
    longitude: number
  }

  export type deliveriesUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    order_id?: BigIntFieldUpdateOperationsInput | bigint | number
    status?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    start_time?: DateTimeFieldUpdateOperationsInput | Date | string
    end_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
  }

  export type deliveriesUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    order_id?: BigIntFieldUpdateOperationsInput | bigint | number
    delivery_person?: StringFieldUpdateOperationsInput | string
    status?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    start_time?: DateTimeFieldUpdateOperationsInput | Date | string
    end_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
  }

  export type delivery_timelineCreateInput = {
    id?: bigint | number
    status: $Enums.DeliveryStatus
    notes?: string | null
    created_at?: Date | string
    latitude: number
    longitude: number
    deliveries?: deliveriesCreateNestedOneWithoutDelivery_timelineInput
  }

  export type delivery_timelineUncheckedCreateInput = {
    id?: bigint | number
    delivery_id?: bigint | number | null
    status: $Enums.DeliveryStatus
    notes?: string | null
    created_at?: Date | string
    latitude: number
    longitude: number
  }

  export type delivery_timelineUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    status?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
    deliveries?: deliveriesUpdateOneWithoutDelivery_timelineNestedInput
  }

  export type delivery_timelineUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    delivery_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    status?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
  }

  export type delivery_timelineCreateManyInput = {
    id?: bigint | number
    delivery_id?: bigint | number | null
    status: $Enums.DeliveryStatus
    notes?: string | null
    created_at?: Date | string
    latitude: number
    longitude: number
  }

  export type delivery_timelineUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    status?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
  }

  export type delivery_timelineUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    delivery_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    status?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
  }

  export type discountsCreateInput = {
    id?: bigint | number
    name: string
    type_value: JsonNullValueInput | InputJsonValue
    applies_to_all?: boolean
    start_date: Date | string
    end_date: Date | string
    status?: number
    created_at?: Date | string
    users: usersCreateNestedOneWithoutDiscountsInput
  }

  export type discountsUncheckedCreateInput = {
    id?: bigint | number
    user_id: string
    name: string
    type_value: JsonNullValueInput | InputJsonValue
    applies_to_all?: boolean
    start_date: Date | string
    end_date: Date | string
    status?: number
    created_at?: Date | string
  }

  export type discountsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    type_value?: JsonNullValueInput | InputJsonValue
    applies_to_all?: BoolFieldUpdateOperationsInput | boolean
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: usersUpdateOneRequiredWithoutDiscountsNestedInput
  }

  export type discountsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type_value?: JsonNullValueInput | InputJsonValue
    applies_to_all?: BoolFieldUpdateOperationsInput | boolean
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type discountsCreateManyInput = {
    id?: bigint | number
    user_id: string
    name: string
    type_value: JsonNullValueInput | InputJsonValue
    applies_to_all?: boolean
    start_date: Date | string
    end_date: Date | string
    status?: number
    created_at?: Date | string
  }

  export type discountsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    type_value?: JsonNullValueInput | InputJsonValue
    applies_to_all?: BoolFieldUpdateOperationsInput | boolean
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type discountsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type_value?: JsonNullValueInput | InputJsonValue
    applies_to_all?: BoolFieldUpdateOperationsInput | boolean
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type filesCreateInput = {
    id?: bigint | number
    file_name: string
    file_hash: string
    mime_type: string
    file_size: bigint | number
    url: string
    created_at?: Date | string
    uploaded_by?: bigint | number
    to_delete?: boolean
    message_files?: message_filesCreateNestedManyWithoutFilesInput
    products_files?: products_filesCreateNestedManyWithoutFilesInput
  }

  export type filesUncheckedCreateInput = {
    id?: bigint | number
    file_name: string
    file_hash: string
    mime_type: string
    file_size: bigint | number
    url: string
    created_at?: Date | string
    uploaded_by?: bigint | number
    to_delete?: boolean
    message_files?: message_filesUncheckedCreateNestedManyWithoutFilesInput
    products_files?: products_filesUncheckedCreateNestedManyWithoutFilesInput
  }

  export type filesUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    file_name?: StringFieldUpdateOperationsInput | string
    file_hash?: StringFieldUpdateOperationsInput | string
    mime_type?: StringFieldUpdateOperationsInput | string
    file_size?: BigIntFieldUpdateOperationsInput | bigint | number
    url?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    uploaded_by?: BigIntFieldUpdateOperationsInput | bigint | number
    to_delete?: BoolFieldUpdateOperationsInput | boolean
    message_files?: message_filesUpdateManyWithoutFilesNestedInput
    products_files?: products_filesUpdateManyWithoutFilesNestedInput
  }

  export type filesUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    file_name?: StringFieldUpdateOperationsInput | string
    file_hash?: StringFieldUpdateOperationsInput | string
    mime_type?: StringFieldUpdateOperationsInput | string
    file_size?: BigIntFieldUpdateOperationsInput | bigint | number
    url?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    uploaded_by?: BigIntFieldUpdateOperationsInput | bigint | number
    to_delete?: BoolFieldUpdateOperationsInput | boolean
    message_files?: message_filesUncheckedUpdateManyWithoutFilesNestedInput
    products_files?: products_filesUncheckedUpdateManyWithoutFilesNestedInput
  }

  export type filesCreateManyInput = {
    id?: bigint | number
    file_name: string
    file_hash: string
    mime_type: string
    file_size: bigint | number
    url: string
    created_at?: Date | string
    uploaded_by?: bigint | number
    to_delete?: boolean
  }

  export type filesUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    file_name?: StringFieldUpdateOperationsInput | string
    file_hash?: StringFieldUpdateOperationsInput | string
    mime_type?: StringFieldUpdateOperationsInput | string
    file_size?: BigIntFieldUpdateOperationsInput | bigint | number
    url?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    uploaded_by?: BigIntFieldUpdateOperationsInput | bigint | number
    to_delete?: BoolFieldUpdateOperationsInput | boolean
  }

  export type filesUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    file_name?: StringFieldUpdateOperationsInput | string
    file_hash?: StringFieldUpdateOperationsInput | string
    mime_type?: StringFieldUpdateOperationsInput | string
    file_size?: BigIntFieldUpdateOperationsInput | bigint | number
    url?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    uploaded_by?: BigIntFieldUpdateOperationsInput | bigint | number
    to_delete?: BoolFieldUpdateOperationsInput | boolean
  }

  export type message_filesCreateInput = {
    id?: bigint | number
    sort: number
    files: filesCreateNestedOneWithoutMessage_filesInput
    messages: messagesCreateNestedOneWithoutMessage_filesInput
  }

  export type message_filesUncheckedCreateInput = {
    id?: bigint | number
    message_id: bigint | number
    file_id: bigint | number
    sort: number
  }

  export type message_filesUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    sort?: IntFieldUpdateOperationsInput | number
    files?: filesUpdateOneRequiredWithoutMessage_filesNestedInput
    messages?: messagesUpdateOneRequiredWithoutMessage_filesNestedInput
  }

  export type message_filesUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    message_id?: BigIntFieldUpdateOperationsInput | bigint | number
    file_id?: BigIntFieldUpdateOperationsInput | bigint | number
    sort?: IntFieldUpdateOperationsInput | number
  }

  export type message_filesCreateManyInput = {
    id?: bigint | number
    message_id: bigint | number
    file_id: bigint | number
    sort: number
  }

  export type message_filesUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    sort?: IntFieldUpdateOperationsInput | number
  }

  export type message_filesUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    message_id?: BigIntFieldUpdateOperationsInput | bigint | number
    file_id?: BigIntFieldUpdateOperationsInput | bigint | number
    sort?: IntFieldUpdateOperationsInput | number
  }

  export type messagesCreateInput = {
    id?: bigint | number
    content?: string | null
    created_at?: Date | string
    is_read?: boolean
    message_files?: message_filesCreateNestedManyWithoutMessagesInput
    chat_panels: chat_panelsCreateNestedOneWithoutMessagesInput
    messages?: messagesCreateNestedOneWithoutOther_messagesInput
    other_messages?: messagesCreateNestedManyWithoutMessagesInput
    users?: usersCreateNestedOneWithoutMessagesInput
  }

  export type messagesUncheckedCreateInput = {
    id?: bigint | number
    chat_panel_id: bigint | number
    sender_id?: string | null
    reply_to?: bigint | number | null
    content?: string | null
    created_at?: Date | string
    is_read?: boolean
    message_files?: message_filesUncheckedCreateNestedManyWithoutMessagesInput
    other_messages?: messagesUncheckedCreateNestedManyWithoutMessagesInput
  }

  export type messagesUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_read?: BoolFieldUpdateOperationsInput | boolean
    message_files?: message_filesUpdateManyWithoutMessagesNestedInput
    chat_panels?: chat_panelsUpdateOneRequiredWithoutMessagesNestedInput
    messages?: messagesUpdateOneWithoutOther_messagesNestedInput
    other_messages?: messagesUpdateManyWithoutMessagesNestedInput
    users?: usersUpdateOneWithoutMessagesNestedInput
  }

  export type messagesUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    chat_panel_id?: BigIntFieldUpdateOperationsInput | bigint | number
    sender_id?: NullableStringFieldUpdateOperationsInput | string | null
    reply_to?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_read?: BoolFieldUpdateOperationsInput | boolean
    message_files?: message_filesUncheckedUpdateManyWithoutMessagesNestedInput
    other_messages?: messagesUncheckedUpdateManyWithoutMessagesNestedInput
  }

  export type messagesCreateManyInput = {
    id?: bigint | number
    chat_panel_id: bigint | number
    sender_id?: string | null
    reply_to?: bigint | number | null
    content?: string | null
    created_at?: Date | string
    is_read?: boolean
  }

  export type messagesUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_read?: BoolFieldUpdateOperationsInput | boolean
  }

  export type messagesUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    chat_panel_id?: BigIntFieldUpdateOperationsInput | bigint | number
    sender_id?: NullableStringFieldUpdateOperationsInput | string | null
    reply_to?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_read?: BoolFieldUpdateOperationsInput | boolean
  }

  export type notificationsCreateInput = {
    id?: bigint | number
    title: string
    message: string
    type: number
    is_read?: boolean
    click_action: string
    created_at?: Date | string
    users: usersCreateNestedOneWithoutNotificationsInput
  }

  export type notificationsUncheckedCreateInput = {
    id?: bigint | number
    user_id: string
    title: string
    message: string
    type: number
    is_read?: boolean
    click_action: string
    created_at?: Date | string
  }

  export type notificationsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    type?: IntFieldUpdateOperationsInput | number
    is_read?: BoolFieldUpdateOperationsInput | boolean
    click_action?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: usersUpdateOneRequiredWithoutNotificationsNestedInput
  }

  export type notificationsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    type?: IntFieldUpdateOperationsInput | number
    is_read?: BoolFieldUpdateOperationsInput | boolean
    click_action?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type notificationsCreateManyInput = {
    id?: bigint | number
    user_id: string
    title: string
    message: string
    type: number
    is_read?: boolean
    click_action: string
    created_at?: Date | string
  }

  export type notificationsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    type?: IntFieldUpdateOperationsInput | number
    is_read?: BoolFieldUpdateOperationsInput | boolean
    click_action?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type notificationsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    type?: IntFieldUpdateOperationsInput | number
    is_read?: BoolFieldUpdateOperationsInput | boolean
    click_action?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type order_detailsCreateInput = {
    id?: bigint | number
    product_code: string
    quantity: number
    unit_price: Decimal | DecimalJsLike | number | string
    unit_price_iva: Decimal | DecimalJsLike | number | string
    subtotal: Decimal | DecimalJsLike | number | string
    iva: Decimal | DecimalJsLike | number | string
    discount_applied: Decimal | DecimalJsLike | number | string
    attributes: JsonNullValueInput | InputJsonValue
    created_at?: Date | string
    orders: ordersCreateNestedOneWithoutOrder_detailsInput
    variant_products: variant_productsCreateNestedOneWithoutOrder_detailsInput
  }

  export type order_detailsUncheckedCreateInput = {
    id?: bigint | number
    order_id: bigint | number
    product_code: string
    variant_product_id: bigint | number
    quantity: number
    unit_price: Decimal | DecimalJsLike | number | string
    unit_price_iva: Decimal | DecimalJsLike | number | string
    subtotal: Decimal | DecimalJsLike | number | string
    iva: Decimal | DecimalJsLike | number | string
    discount_applied: Decimal | DecimalJsLike | number | string
    attributes: JsonNullValueInput | InputJsonValue
    created_at?: Date | string
  }

  export type order_detailsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    product_code?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unit_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unit_price_iva?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    iva?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_applied?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    attributes?: JsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    orders?: ordersUpdateOneRequiredWithoutOrder_detailsNestedInput
    variant_products?: variant_productsUpdateOneRequiredWithoutOrder_detailsNestedInput
  }

  export type order_detailsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    order_id?: BigIntFieldUpdateOperationsInput | bigint | number
    product_code?: StringFieldUpdateOperationsInput | string
    variant_product_id?: BigIntFieldUpdateOperationsInput | bigint | number
    quantity?: IntFieldUpdateOperationsInput | number
    unit_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unit_price_iva?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    iva?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_applied?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    attributes?: JsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type order_detailsCreateManyInput = {
    id?: bigint | number
    order_id: bigint | number
    product_code: string
    variant_product_id: bigint | number
    quantity: number
    unit_price: Decimal | DecimalJsLike | number | string
    unit_price_iva: Decimal | DecimalJsLike | number | string
    subtotal: Decimal | DecimalJsLike | number | string
    iva: Decimal | DecimalJsLike | number | string
    discount_applied: Decimal | DecimalJsLike | number | string
    attributes: JsonNullValueInput | InputJsonValue
    created_at?: Date | string
  }

  export type order_detailsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    product_code?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unit_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unit_price_iva?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    iva?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_applied?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    attributes?: JsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type order_detailsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    order_id?: BigIntFieldUpdateOperationsInput | bigint | number
    product_code?: StringFieldUpdateOperationsInput | string
    variant_product_id?: BigIntFieldUpdateOperationsInput | bigint | number
    quantity?: IntFieldUpdateOperationsInput | number
    unit_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unit_price_iva?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    iva?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_applied?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    attributes?: JsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ordersCreateInput = {
    id?: bigint | number
    status?: number
    payment_method: number
    notes?: string | null
    discount_total: Decimal | DecimalJsLike | number | string
    subtotal: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    iva_total: Decimal | DecimalJsLike | number | string
    discount_log: JsonNullValueInput | InputJsonValue
    estimated_date?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string | null
    order_details?: order_detailsCreateNestedManyWithoutOrdersInput
    users_orders_retailer_idTousers?: usersCreateNestedOneWithoutOrders_orders_retailer_idTousersInput
    direcction?: directionCreateNestedOneWithoutOrdersInput
    users_orders_wholesaler_idTousers?: usersCreateNestedOneWithoutOrders_orders_wholesaler_idTousersInput
  }

  export type ordersUncheckedCreateInput = {
    id?: bigint | number
    retailer_id?: string | null
    wholesaler_id?: string | null
    status?: number
    payment_method: number
    shipping_address?: bigint | number | null
    notes?: string | null
    discount_total: Decimal | DecimalJsLike | number | string
    subtotal: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    iva_total: Decimal | DecimalJsLike | number | string
    discount_log: JsonNullValueInput | InputJsonValue
    estimated_date?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string | null
    order_details?: order_detailsUncheckedCreateNestedManyWithoutOrdersInput
  }

  export type ordersUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    status?: IntFieldUpdateOperationsInput | number
    payment_method?: IntFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    discount_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    iva_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_log?: JsonNullValueInput | InputJsonValue
    estimated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order_details?: order_detailsUpdateManyWithoutOrdersNestedInput
    users_orders_retailer_idTousers?: usersUpdateOneWithoutOrders_orders_retailer_idTousersNestedInput
    direcction?: directionUpdateOneWithoutOrdersNestedInput
    users_orders_wholesaler_idTousers?: usersUpdateOneWithoutOrders_orders_wholesaler_idTousersNestedInput
  }

  export type ordersUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    retailer_id?: NullableStringFieldUpdateOperationsInput | string | null
    wholesaler_id?: NullableStringFieldUpdateOperationsInput | string | null
    status?: IntFieldUpdateOperationsInput | number
    payment_method?: IntFieldUpdateOperationsInput | number
    shipping_address?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    discount_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    iva_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_log?: JsonNullValueInput | InputJsonValue
    estimated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order_details?: order_detailsUncheckedUpdateManyWithoutOrdersNestedInput
  }

  export type ordersCreateManyInput = {
    id?: bigint | number
    retailer_id?: string | null
    wholesaler_id?: string | null
    status?: number
    payment_method: number
    shipping_address?: bigint | number | null
    notes?: string | null
    discount_total: Decimal | DecimalJsLike | number | string
    subtotal: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    iva_total: Decimal | DecimalJsLike | number | string
    discount_log: JsonNullValueInput | InputJsonValue
    estimated_date?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string | null
  }

  export type ordersUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    status?: IntFieldUpdateOperationsInput | number
    payment_method?: IntFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    discount_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    iva_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_log?: JsonNullValueInput | InputJsonValue
    estimated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ordersUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    retailer_id?: NullableStringFieldUpdateOperationsInput | string | null
    wholesaler_id?: NullableStringFieldUpdateOperationsInput | string | null
    status?: IntFieldUpdateOperationsInput | number
    payment_method?: IntFieldUpdateOperationsInput | number
    shipping_address?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    discount_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    iva_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_log?: JsonNullValueInput | InputJsonValue
    estimated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type productsCreateInput = {
    id?: bigint | number
    name: string
    title?: string | null
    description?: string | null
    iva: Decimal | DecimalJsLike | number | string
    status?: number
    created_at?: Date | string
    product_code: string
    categories: categoriesCreateNestedOneWithoutProductsInput
    users: usersCreateNestedOneWithoutProductsInput
    products_files?: products_filesCreateNestedManyWithoutProductsInput
    variant_products?: variant_productsCreateNestedManyWithoutProductsInput
  }

  export type productsUncheckedCreateInput = {
    id?: bigint | number
    user_id: string
    name: string
    title?: string | null
    description?: string | null
    iva: Decimal | DecimalJsLike | number | string
    category_id: bigint | number
    status?: number
    created_at?: Date | string
    product_code: string
    products_files?: products_filesUncheckedCreateNestedManyWithoutProductsInput
    variant_products?: variant_productsUncheckedCreateNestedManyWithoutProductsInput
  }

  export type productsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    iva?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    product_code?: StringFieldUpdateOperationsInput | string
    categories?: categoriesUpdateOneRequiredWithoutProductsNestedInput
    users?: usersUpdateOneRequiredWithoutProductsNestedInput
    products_files?: products_filesUpdateManyWithoutProductsNestedInput
    variant_products?: variant_productsUpdateManyWithoutProductsNestedInput
  }

  export type productsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    iva?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    category_id?: BigIntFieldUpdateOperationsInput | bigint | number
    status?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    product_code?: StringFieldUpdateOperationsInput | string
    products_files?: products_filesUncheckedUpdateManyWithoutProductsNestedInput
    variant_products?: variant_productsUncheckedUpdateManyWithoutProductsNestedInput
  }

  export type productsCreateManyInput = {
    id?: bigint | number
    user_id: string
    name: string
    title?: string | null
    description?: string | null
    iva: Decimal | DecimalJsLike | number | string
    category_id: bigint | number
    status?: number
    created_at?: Date | string
    product_code: string
  }

  export type productsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    iva?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    product_code?: StringFieldUpdateOperationsInput | string
  }

  export type productsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    iva?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    category_id?: BigIntFieldUpdateOperationsInput | bigint | number
    status?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    product_code?: StringFieldUpdateOperationsInput | string
  }

  export type products_filesCreateInput = {
    id?: bigint | number
    sort: number
    files: filesCreateNestedOneWithoutProducts_filesInput
    products: productsCreateNestedOneWithoutProducts_filesInput
  }

  export type products_filesUncheckedCreateInput = {
    id?: bigint | number
    product_id: bigint | number
    file_id: bigint | number
    sort: number
  }

  export type products_filesUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    sort?: IntFieldUpdateOperationsInput | number
    files?: filesUpdateOneRequiredWithoutProducts_filesNestedInput
    products?: productsUpdateOneRequiredWithoutProducts_filesNestedInput
  }

  export type products_filesUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    product_id?: BigIntFieldUpdateOperationsInput | bigint | number
    file_id?: BigIntFieldUpdateOperationsInput | bigint | number
    sort?: IntFieldUpdateOperationsInput | number
  }

  export type products_filesCreateManyInput = {
    id?: bigint | number
    product_id: bigint | number
    file_id: bigint | number
    sort: number
  }

  export type products_filesUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    sort?: IntFieldUpdateOperationsInput | number
  }

  export type products_filesUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    product_id?: BigIntFieldUpdateOperationsInput | bigint | number
    file_id?: BigIntFieldUpdateOperationsInput | bigint | number
    sort?: IntFieldUpdateOperationsInput | number
  }

  export type user_sessionsCreateInput = {
    session_id?: string
    device_name: string
    device_finger: string
    user_agent: string
    revoked?: boolean
    last_ip: string
    access_token?: string | null
    refresh_token?: string | null
    created_at?: Date | string
    last_active?: Date | string
    users: usersCreateNestedOneWithoutUser_sessionsInput
  }

  export type user_sessionsUncheckedCreateInput = {
    session_id?: string
    user_id: string
    device_name: string
    device_finger: string
    user_agent: string
    revoked?: boolean
    last_ip: string
    access_token?: string | null
    refresh_token?: string | null
    created_at?: Date | string
    last_active?: Date | string
  }

  export type user_sessionsUpdateInput = {
    session_id?: StringFieldUpdateOperationsInput | string
    device_name?: StringFieldUpdateOperationsInput | string
    device_finger?: StringFieldUpdateOperationsInput | string
    user_agent?: StringFieldUpdateOperationsInput | string
    revoked?: BoolFieldUpdateOperationsInput | boolean
    last_ip?: StringFieldUpdateOperationsInput | string
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    last_active?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: usersUpdateOneRequiredWithoutUser_sessionsNestedInput
  }

  export type user_sessionsUncheckedUpdateInput = {
    session_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    device_name?: StringFieldUpdateOperationsInput | string
    device_finger?: StringFieldUpdateOperationsInput | string
    user_agent?: StringFieldUpdateOperationsInput | string
    revoked?: BoolFieldUpdateOperationsInput | boolean
    last_ip?: StringFieldUpdateOperationsInput | string
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    last_active?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_sessionsCreateManyInput = {
    session_id?: string
    user_id: string
    device_name: string
    device_finger: string
    user_agent: string
    revoked?: boolean
    last_ip: string
    access_token?: string | null
    refresh_token?: string | null
    created_at?: Date | string
    last_active?: Date | string
  }

  export type user_sessionsUpdateManyMutationInput = {
    session_id?: StringFieldUpdateOperationsInput | string
    device_name?: StringFieldUpdateOperationsInput | string
    device_finger?: StringFieldUpdateOperationsInput | string
    user_agent?: StringFieldUpdateOperationsInput | string
    revoked?: BoolFieldUpdateOperationsInput | boolean
    last_ip?: StringFieldUpdateOperationsInput | string
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    last_active?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_sessionsUncheckedUpdateManyInput = {
    session_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    device_name?: StringFieldUpdateOperationsInput | string
    device_finger?: StringFieldUpdateOperationsInput | string
    user_agent?: StringFieldUpdateOperationsInput | string
    revoked?: BoolFieldUpdateOperationsInput | boolean
    last_ip?: StringFieldUpdateOperationsInput | string
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    last_active?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type usersCreateInput = {
    id?: string
    user_id?: string | null
    first_name?: string | null
    last_name?: string | null
    username?: string | null
    password: string
    email?: string | null
    telephone?: string | null
    status?: $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    updated_at?: Date | string | null
    role: $Enums.UserRole
    cif?: string | null
    carts?: cartsCreateNestedManyWithoutUsersInput
    categories?: categoriesCreateNestedManyWithoutUsersInput
    chat_participants?: chat_participantsCreateNestedManyWithoutUsersInput
    configurations?: configurationsCreateNestedManyWithoutUsersInput
    deliveries?: deliveriesCreateNestedManyWithoutUsersInput
    direction?: directionCreateNestedManyWithoutUsersInput
    discounts?: discountsCreateNestedManyWithoutUsersInput
    messages?: messagesCreateNestedManyWithoutUsersInput
    notifications?: notificationsCreateNestedManyWithoutUsersInput
    orders_orders_retailer_idTousers?: ordersCreateNestedManyWithoutUsers_orders_retailer_idTousersInput
    orders_orders_wholesaler_idTousers?: ordersCreateNestedManyWithoutUsers_orders_wholesaler_idTousersInput
    products?: productsCreateNestedManyWithoutUsersInput
    user_sessions?: user_sessionsCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateInput = {
    id?: string
    user_id?: string | null
    first_name?: string | null
    last_name?: string | null
    username?: string | null
    password: string
    email?: string | null
    telephone?: string | null
    status?: $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    updated_at?: Date | string | null
    role: $Enums.UserRole
    cif?: string | null
    carts?: cartsUncheckedCreateNestedManyWithoutUsersInput
    categories?: categoriesUncheckedCreateNestedManyWithoutUsersInput
    chat_participants?: chat_participantsUncheckedCreateNestedManyWithoutUsersInput
    configurations?: configurationsUncheckedCreateNestedManyWithoutUsersInput
    deliveries?: deliveriesUncheckedCreateNestedManyWithoutUsersInput
    direction?: directionUncheckedCreateNestedManyWithoutUsersInput
    discounts?: discountsUncheckedCreateNestedManyWithoutUsersInput
    messages?: messagesUncheckedCreateNestedManyWithoutUsersInput
    notifications?: notificationsUncheckedCreateNestedManyWithoutUsersInput
    orders_orders_retailer_idTousers?: ordersUncheckedCreateNestedManyWithoutUsers_orders_retailer_idTousersInput
    orders_orders_wholesaler_idTousers?: ordersUncheckedCreateNestedManyWithoutUsers_orders_wholesaler_idTousersInput
    products?: productsUncheckedCreateNestedManyWithoutUsersInput
    user_sessions?: user_sessionsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telephone?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    cif?: NullableStringFieldUpdateOperationsInput | string | null
    carts?: cartsUpdateManyWithoutUsersNestedInput
    categories?: categoriesUpdateManyWithoutUsersNestedInput
    chat_participants?: chat_participantsUpdateManyWithoutUsersNestedInput
    configurations?: configurationsUpdateManyWithoutUsersNestedInput
    deliveries?: deliveriesUpdateManyWithoutUsersNestedInput
    direction?: directionUpdateManyWithoutUsersNestedInput
    discounts?: discountsUpdateManyWithoutUsersNestedInput
    messages?: messagesUpdateManyWithoutUsersNestedInput
    notifications?: notificationsUpdateManyWithoutUsersNestedInput
    orders_orders_retailer_idTousers?: ordersUpdateManyWithoutUsers_orders_retailer_idTousersNestedInput
    orders_orders_wholesaler_idTousers?: ordersUpdateManyWithoutUsers_orders_wholesaler_idTousersNestedInput
    products?: productsUpdateManyWithoutUsersNestedInput
    user_sessions?: user_sessionsUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telephone?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    cif?: NullableStringFieldUpdateOperationsInput | string | null
    carts?: cartsUncheckedUpdateManyWithoutUsersNestedInput
    categories?: categoriesUncheckedUpdateManyWithoutUsersNestedInput
    chat_participants?: chat_participantsUncheckedUpdateManyWithoutUsersNestedInput
    configurations?: configurationsUncheckedUpdateManyWithoutUsersNestedInput
    deliveries?: deliveriesUncheckedUpdateManyWithoutUsersNestedInput
    direction?: directionUncheckedUpdateManyWithoutUsersNestedInput
    discounts?: discountsUncheckedUpdateManyWithoutUsersNestedInput
    messages?: messagesUncheckedUpdateManyWithoutUsersNestedInput
    notifications?: notificationsUncheckedUpdateManyWithoutUsersNestedInput
    orders_orders_retailer_idTousers?: ordersUncheckedUpdateManyWithoutUsers_orders_retailer_idTousersNestedInput
    orders_orders_wholesaler_idTousers?: ordersUncheckedUpdateManyWithoutUsers_orders_wholesaler_idTousersNestedInput
    products?: productsUncheckedUpdateManyWithoutUsersNestedInput
    user_sessions?: user_sessionsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type usersCreateManyInput = {
    id?: string
    user_id?: string | null
    first_name?: string | null
    last_name?: string | null
    username?: string | null
    password: string
    email?: string | null
    telephone?: string | null
    status?: $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    updated_at?: Date | string | null
    role: $Enums.UserRole
    cif?: string | null
  }

  export type usersUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telephone?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    cif?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type usersUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telephone?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    cif?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type variant_productsCreateInput = {
    id?: bigint | number
    created_at?: Date | string
    type_sale: number
    price: Decimal | DecimalJsLike | number | string
    price_iva: Decimal | DecimalJsLike | number | string
    stock: number
    sort: number
    attributes?: NullableJsonNullValueInput | InputJsonValue
    status: number
    iva: Decimal | DecimalJsLike | number | string
    product_code: string
    cart_details?: cart_detailsCreateNestedManyWithoutVariant_productsInput
    order_details?: order_detailsCreateNestedManyWithoutVariant_productsInput
    products: productsCreateNestedOneWithoutVariant_productsInput
  }

  export type variant_productsUncheckedCreateInput = {
    id?: bigint | number
    created_at?: Date | string
    product_id: bigint | number
    type_sale: number
    price: Decimal | DecimalJsLike | number | string
    price_iva: Decimal | DecimalJsLike | number | string
    stock: number
    sort: number
    attributes?: NullableJsonNullValueInput | InputJsonValue
    status: number
    iva: Decimal | DecimalJsLike | number | string
    product_code: string
    cart_details?: cart_detailsUncheckedCreateNestedManyWithoutVariant_productsInput
    order_details?: order_detailsUncheckedCreateNestedManyWithoutVariant_productsInput
  }

  export type variant_productsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    type_sale?: IntFieldUpdateOperationsInput | number
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    price_iva?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    sort?: IntFieldUpdateOperationsInput | number
    attributes?: NullableJsonNullValueInput | InputJsonValue
    status?: IntFieldUpdateOperationsInput | number
    iva?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    product_code?: StringFieldUpdateOperationsInput | string
    cart_details?: cart_detailsUpdateManyWithoutVariant_productsNestedInput
    order_details?: order_detailsUpdateManyWithoutVariant_productsNestedInput
    products?: productsUpdateOneRequiredWithoutVariant_productsNestedInput
  }

  export type variant_productsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    product_id?: BigIntFieldUpdateOperationsInput | bigint | number
    type_sale?: IntFieldUpdateOperationsInput | number
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    price_iva?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    sort?: IntFieldUpdateOperationsInput | number
    attributes?: NullableJsonNullValueInput | InputJsonValue
    status?: IntFieldUpdateOperationsInput | number
    iva?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    product_code?: StringFieldUpdateOperationsInput | string
    cart_details?: cart_detailsUncheckedUpdateManyWithoutVariant_productsNestedInput
    order_details?: order_detailsUncheckedUpdateManyWithoutVariant_productsNestedInput
  }

  export type variant_productsCreateManyInput = {
    id?: bigint | number
    created_at?: Date | string
    product_id: bigint | number
    type_sale: number
    price: Decimal | DecimalJsLike | number | string
    price_iva: Decimal | DecimalJsLike | number | string
    stock: number
    sort: number
    attributes?: NullableJsonNullValueInput | InputJsonValue
    status: number
    iva: Decimal | DecimalJsLike | number | string
    product_code: string
  }

  export type variant_productsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    type_sale?: IntFieldUpdateOperationsInput | number
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    price_iva?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    sort?: IntFieldUpdateOperationsInput | number
    attributes?: NullableJsonNullValueInput | InputJsonValue
    status?: IntFieldUpdateOperationsInput | number
    iva?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    product_code?: StringFieldUpdateOperationsInput | string
  }

  export type variant_productsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    product_id?: BigIntFieldUpdateOperationsInput | bigint | number
    type_sale?: IntFieldUpdateOperationsInput | number
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    price_iva?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    sort?: IntFieldUpdateOperationsInput | number
    attributes?: NullableJsonNullValueInput | InputJsonValue
    status?: IntFieldUpdateOperationsInput | number
    iva?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    product_code?: StringFieldUpdateOperationsInput | string
  }

  export type directionCreateInput = {
    id?: bigint | number
    type: $Enums.AddressType
    direction: string
    city: string
    province: string
    zip_code: string
    latitude: number
    longitude: number
    created_at?: Date | string
    updated_at?: Date | string | null
    users: usersCreateNestedOneWithoutDirectionInput
    orders?: ordersCreateNestedManyWithoutDirecctionInput
  }

  export type directionUncheckedCreateInput = {
    id?: bigint | number
    user_id: string
    type: $Enums.AddressType
    direction: string
    city: string
    province: string
    zip_code: string
    latitude: number
    longitude: number
    created_at?: Date | string
    updated_at?: Date | string | null
    orders?: ordersUncheckedCreateNestedManyWithoutDirecctionInput
  }

  export type directionUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    type?: EnumAddressTypeFieldUpdateOperationsInput | $Enums.AddressType
    direction?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    province?: StringFieldUpdateOperationsInput | string
    zip_code?: StringFieldUpdateOperationsInput | string
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateOneRequiredWithoutDirectionNestedInput
    orders?: ordersUpdateManyWithoutDirecctionNestedInput
  }

  export type directionUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: StringFieldUpdateOperationsInput | string
    type?: EnumAddressTypeFieldUpdateOperationsInput | $Enums.AddressType
    direction?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    province?: StringFieldUpdateOperationsInput | string
    zip_code?: StringFieldUpdateOperationsInput | string
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    orders?: ordersUncheckedUpdateManyWithoutDirecctionNestedInput
  }

  export type directionCreateManyInput = {
    id?: bigint | number
    user_id: string
    type: $Enums.AddressType
    direction: string
    city: string
    province: string
    zip_code: string
    latitude: number
    longitude: number
    created_at?: Date | string
    updated_at?: Date | string | null
  }

  export type directionUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    type?: EnumAddressTypeFieldUpdateOperationsInput | $Enums.AddressType
    direction?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    province?: StringFieldUpdateOperationsInput | string
    zip_code?: StringFieldUpdateOperationsInput | string
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type directionUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: StringFieldUpdateOperationsInput | string
    type?: EnumAddressTypeFieldUpdateOperationsInput | $Enums.AddressType
    direction?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    province?: StringFieldUpdateOperationsInput | string
    zip_code?: StringFieldUpdateOperationsInput | string
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type BigIntFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntFilter<$PrismaModel> | bigint | number
  }

  export type BigIntNullableFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableFilter<$PrismaModel> | bigint | number | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type CartsScalarRelationFilter = {
    is?: cartsWhereInput
    isNot?: cartsWhereInput
  }

  export type Variant_productsNullableScalarRelationFilter = {
    is?: variant_productsWhereInput | null
    isNot?: variant_productsWhereInput | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type cart_detailsCountOrderByAggregateInput = {
    id?: SortOrder
    cart_id?: SortOrder
    variant_products_id?: SortOrder
    quantity?: SortOrder
    created_at?: SortOrder
  }

  export type cart_detailsAvgOrderByAggregateInput = {
    id?: SortOrder
    cart_id?: SortOrder
    variant_products_id?: SortOrder
    quantity?: SortOrder
  }

  export type cart_detailsMaxOrderByAggregateInput = {
    id?: SortOrder
    cart_id?: SortOrder
    variant_products_id?: SortOrder
    quantity?: SortOrder
    created_at?: SortOrder
  }

  export type cart_detailsMinOrderByAggregateInput = {
    id?: SortOrder
    cart_id?: SortOrder
    variant_products_id?: SortOrder
    quantity?: SortOrder
    created_at?: SortOrder
  }

  export type cart_detailsSumOrderByAggregateInput = {
    id?: SortOrder
    cart_id?: SortOrder
    variant_products_id?: SortOrder
    quantity?: SortOrder
  }

  export type BigIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntWithAggregatesFilter<$PrismaModel> | bigint | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedBigIntFilter<$PrismaModel>
    _min?: NestedBigIntFilter<$PrismaModel>
    _max?: NestedBigIntFilter<$PrismaModel>
  }

  export type BigIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableWithAggregatesFilter<$PrismaModel> | bigint | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedBigIntNullableFilter<$PrismaModel>
    _min?: NestedBigIntNullableFilter<$PrismaModel>
    _max?: NestedBigIntNullableFilter<$PrismaModel>
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type UuidFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidFilter<$PrismaModel> | string
  }

  export type Cart_detailsListRelationFilter = {
    every?: cart_detailsWhereInput
    some?: cart_detailsWhereInput
    none?: cart_detailsWhereInput
  }

  export type UsersScalarRelationFilter = {
    is?: usersWhereInput
    isNot?: usersWhereInput
  }

  export type cart_detailsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type cartsCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrder
  }

  export type cartsAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type cartsMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrder
  }

  export type cartsMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrder
  }

  export type cartsSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type UuidWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type UuidNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidNullableFilter<$PrismaModel> | string | null
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type CategoriesNullableScalarRelationFilter = {
    is?: categoriesWhereInput | null
    isNot?: categoriesWhereInput | null
  }

  export type CategoriesListRelationFilter = {
    every?: categoriesWhereInput
    some?: categoriesWhereInput
    none?: categoriesWhereInput
  }

  export type UsersNullableScalarRelationFilter = {
    is?: usersWhereInput | null
    isNot?: usersWhereInput | null
  }

  export type ProductsListRelationFilter = {
    every?: productsWhereInput
    some?: productsWhereInput
    none?: productsWhereInput
  }

  export type categoriesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type productsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type categoriesCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    name?: SortOrder
    iva?: SortOrder
    parent_id?: SortOrder
    created_at?: SortOrder
  }

  export type categoriesAvgOrderByAggregateInput = {
    id?: SortOrder
    iva?: SortOrder
    parent_id?: SortOrder
  }

  export type categoriesMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    name?: SortOrder
    iva?: SortOrder
    parent_id?: SortOrder
    created_at?: SortOrder
  }

  export type categoriesMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    name?: SortOrder
    iva?: SortOrder
    parent_id?: SortOrder
    created_at?: SortOrder
  }

  export type categoriesSumOrderByAggregateInput = {
    id?: SortOrder
    iva?: SortOrder
    parent_id?: SortOrder
  }

  export type UuidNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type Chat_participantsListRelationFilter = {
    every?: chat_participantsWhereInput
    some?: chat_participantsWhereInput
    none?: chat_participantsWhereInput
  }

  export type MessagesListRelationFilter = {
    every?: messagesWhereInput
    some?: messagesWhereInput
    none?: messagesWhereInput
  }

  export type chat_participantsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type messagesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type chat_panelsCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    created_at?: SortOrder
  }

  export type chat_panelsAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type chat_panelsMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    created_at?: SortOrder
  }

  export type chat_panelsMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    created_at?: SortOrder
  }

  export type chat_panelsSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type Chat_panelsScalarRelationFilter = {
    is?: chat_panelsWhereInput
    isNot?: chat_panelsWhereInput
  }

  export type chat_participantsChat_panel_idUser_idCompoundUniqueInput = {
    chat_panel_id: bigint | number
    user_id: string
  }

  export type chat_participantsCountOrderByAggregateInput = {
    user_id?: SortOrder
    chat_panel_id?: SortOrder
    created_at?: SortOrder
  }

  export type chat_participantsAvgOrderByAggregateInput = {
    chat_panel_id?: SortOrder
  }

  export type chat_participantsMaxOrderByAggregateInput = {
    user_id?: SortOrder
    chat_panel_id?: SortOrder
    created_at?: SortOrder
  }

  export type chat_participantsMinOrderByAggregateInput = {
    user_id?: SortOrder
    chat_panel_id?: SortOrder
    created_at?: SortOrder
  }

  export type chat_participantsSumOrderByAggregateInput = {
    chat_panel_id?: SortOrder
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type configurationsCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    language?: SortOrder
    timezone?: SortOrder
  }

  export type configurationsAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type configurationsMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    language?: SortOrder
    timezone?: SortOrder
  }

  export type configurationsMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    language?: SortOrder
    timezone?: SortOrder
  }

  export type configurationsSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type EnumDeliveryStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.DeliveryStatus | EnumDeliveryStatusFieldRefInput<$PrismaModel>
    in?: $Enums.DeliveryStatus[] | ListEnumDeliveryStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.DeliveryStatus[] | ListEnumDeliveryStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumDeliveryStatusFilter<$PrismaModel> | $Enums.DeliveryStatus
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type Delivery_timelineListRelationFilter = {
    every?: delivery_timelineWhereInput
    some?: delivery_timelineWhereInput
    none?: delivery_timelineWhereInput
  }

  export type delivery_timelineOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type deliveriesCountOrderByAggregateInput = {
    id?: SortOrder
    order_id?: SortOrder
    delivery_person?: SortOrder
    status?: SortOrder
    start_time?: SortOrder
    end_time?: SortOrder
    notes?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
  }

  export type deliveriesAvgOrderByAggregateInput = {
    id?: SortOrder
    order_id?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
  }

  export type deliveriesMaxOrderByAggregateInput = {
    id?: SortOrder
    order_id?: SortOrder
    delivery_person?: SortOrder
    status?: SortOrder
    start_time?: SortOrder
    end_time?: SortOrder
    notes?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
  }

  export type deliveriesMinOrderByAggregateInput = {
    id?: SortOrder
    order_id?: SortOrder
    delivery_person?: SortOrder
    status?: SortOrder
    start_time?: SortOrder
    end_time?: SortOrder
    notes?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
  }

  export type deliveriesSumOrderByAggregateInput = {
    id?: SortOrder
    order_id?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
  }

  export type EnumDeliveryStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DeliveryStatus | EnumDeliveryStatusFieldRefInput<$PrismaModel>
    in?: $Enums.DeliveryStatus[] | ListEnumDeliveryStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.DeliveryStatus[] | ListEnumDeliveryStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumDeliveryStatusWithAggregatesFilter<$PrismaModel> | $Enums.DeliveryStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDeliveryStatusFilter<$PrismaModel>
    _max?: NestedEnumDeliveryStatusFilter<$PrismaModel>
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DeliveriesNullableScalarRelationFilter = {
    is?: deliveriesWhereInput | null
    isNot?: deliveriesWhereInput | null
  }

  export type delivery_timelineCountOrderByAggregateInput = {
    id?: SortOrder
    delivery_id?: SortOrder
    status?: SortOrder
    notes?: SortOrder
    created_at?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
  }

  export type delivery_timelineAvgOrderByAggregateInput = {
    id?: SortOrder
    delivery_id?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
  }

  export type delivery_timelineMaxOrderByAggregateInput = {
    id?: SortOrder
    delivery_id?: SortOrder
    status?: SortOrder
    notes?: SortOrder
    created_at?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
  }

  export type delivery_timelineMinOrderByAggregateInput = {
    id?: SortOrder
    delivery_id?: SortOrder
    status?: SortOrder
    notes?: SortOrder
    created_at?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
  }

  export type delivery_timelineSumOrderByAggregateInput = {
    id?: SortOrder
    delivery_id?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }
  export type JsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonFilterBase<$PrismaModel>>, 'path'>>

  export type JsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type discountsCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    name?: SortOrder
    type_value?: SortOrder
    applies_to_all?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
  }

  export type discountsAvgOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
  }

  export type discountsMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    name?: SortOrder
    applies_to_all?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
  }

  export type discountsMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    name?: SortOrder
    applies_to_all?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
  }

  export type discountsSumOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
  }
  export type JsonWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedJsonFilter<$PrismaModel>
    _max?: NestedJsonFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type Message_filesListRelationFilter = {
    every?: message_filesWhereInput
    some?: message_filesWhereInput
    none?: message_filesWhereInput
  }

  export type Products_filesListRelationFilter = {
    every?: products_filesWhereInput
    some?: products_filesWhereInput
    none?: products_filesWhereInput
  }

  export type message_filesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type products_filesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type filesCountOrderByAggregateInput = {
    id?: SortOrder
    file_name?: SortOrder
    file_hash?: SortOrder
    mime_type?: SortOrder
    file_size?: SortOrder
    url?: SortOrder
    created_at?: SortOrder
    uploaded_by?: SortOrder
    to_delete?: SortOrder
  }

  export type filesAvgOrderByAggregateInput = {
    id?: SortOrder
    file_size?: SortOrder
    uploaded_by?: SortOrder
  }

  export type filesMaxOrderByAggregateInput = {
    id?: SortOrder
    file_name?: SortOrder
    file_hash?: SortOrder
    mime_type?: SortOrder
    file_size?: SortOrder
    url?: SortOrder
    created_at?: SortOrder
    uploaded_by?: SortOrder
    to_delete?: SortOrder
  }

  export type filesMinOrderByAggregateInput = {
    id?: SortOrder
    file_name?: SortOrder
    file_hash?: SortOrder
    mime_type?: SortOrder
    file_size?: SortOrder
    url?: SortOrder
    created_at?: SortOrder
    uploaded_by?: SortOrder
    to_delete?: SortOrder
  }

  export type filesSumOrderByAggregateInput = {
    id?: SortOrder
    file_size?: SortOrder
    uploaded_by?: SortOrder
  }

  export type FilesScalarRelationFilter = {
    is?: filesWhereInput
    isNot?: filesWhereInput
  }

  export type MessagesScalarRelationFilter = {
    is?: messagesWhereInput
    isNot?: messagesWhereInput
  }

  export type message_filesCountOrderByAggregateInput = {
    id?: SortOrder
    message_id?: SortOrder
    file_id?: SortOrder
    sort?: SortOrder
  }

  export type message_filesAvgOrderByAggregateInput = {
    id?: SortOrder
    message_id?: SortOrder
    file_id?: SortOrder
    sort?: SortOrder
  }

  export type message_filesMaxOrderByAggregateInput = {
    id?: SortOrder
    message_id?: SortOrder
    file_id?: SortOrder
    sort?: SortOrder
  }

  export type message_filesMinOrderByAggregateInput = {
    id?: SortOrder
    message_id?: SortOrder
    file_id?: SortOrder
    sort?: SortOrder
  }

  export type message_filesSumOrderByAggregateInput = {
    id?: SortOrder
    message_id?: SortOrder
    file_id?: SortOrder
    sort?: SortOrder
  }

  export type MessagesNullableScalarRelationFilter = {
    is?: messagesWhereInput | null
    isNot?: messagesWhereInput | null
  }

  export type messagesCountOrderByAggregateInput = {
    id?: SortOrder
    chat_panel_id?: SortOrder
    sender_id?: SortOrder
    reply_to?: SortOrder
    content?: SortOrder
    created_at?: SortOrder
    is_read?: SortOrder
  }

  export type messagesAvgOrderByAggregateInput = {
    id?: SortOrder
    chat_panel_id?: SortOrder
    reply_to?: SortOrder
  }

  export type messagesMaxOrderByAggregateInput = {
    id?: SortOrder
    chat_panel_id?: SortOrder
    sender_id?: SortOrder
    reply_to?: SortOrder
    content?: SortOrder
    created_at?: SortOrder
    is_read?: SortOrder
  }

  export type messagesMinOrderByAggregateInput = {
    id?: SortOrder
    chat_panel_id?: SortOrder
    sender_id?: SortOrder
    reply_to?: SortOrder
    content?: SortOrder
    created_at?: SortOrder
    is_read?: SortOrder
  }

  export type messagesSumOrderByAggregateInput = {
    id?: SortOrder
    chat_panel_id?: SortOrder
    reply_to?: SortOrder
  }

  export type notificationsCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    title?: SortOrder
    message?: SortOrder
    type?: SortOrder
    is_read?: SortOrder
    click_action?: SortOrder
    created_at?: SortOrder
  }

  export type notificationsAvgOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
  }

  export type notificationsMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    title?: SortOrder
    message?: SortOrder
    type?: SortOrder
    is_read?: SortOrder
    click_action?: SortOrder
    created_at?: SortOrder
  }

  export type notificationsMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    title?: SortOrder
    message?: SortOrder
    type?: SortOrder
    is_read?: SortOrder
    click_action?: SortOrder
    created_at?: SortOrder
  }

  export type notificationsSumOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type OrdersScalarRelationFilter = {
    is?: ordersWhereInput
    isNot?: ordersWhereInput
  }

  export type Variant_productsScalarRelationFilter = {
    is?: variant_productsWhereInput
    isNot?: variant_productsWhereInput
  }

  export type order_detailsCountOrderByAggregateInput = {
    id?: SortOrder
    order_id?: SortOrder
    product_code?: SortOrder
    variant_product_id?: SortOrder
    quantity?: SortOrder
    unit_price?: SortOrder
    unit_price_iva?: SortOrder
    subtotal?: SortOrder
    iva?: SortOrder
    discount_applied?: SortOrder
    attributes?: SortOrder
    created_at?: SortOrder
  }

  export type order_detailsAvgOrderByAggregateInput = {
    id?: SortOrder
    order_id?: SortOrder
    variant_product_id?: SortOrder
    quantity?: SortOrder
    unit_price?: SortOrder
    unit_price_iva?: SortOrder
    subtotal?: SortOrder
    iva?: SortOrder
    discount_applied?: SortOrder
  }

  export type order_detailsMaxOrderByAggregateInput = {
    id?: SortOrder
    order_id?: SortOrder
    product_code?: SortOrder
    variant_product_id?: SortOrder
    quantity?: SortOrder
    unit_price?: SortOrder
    unit_price_iva?: SortOrder
    subtotal?: SortOrder
    iva?: SortOrder
    discount_applied?: SortOrder
    created_at?: SortOrder
  }

  export type order_detailsMinOrderByAggregateInput = {
    id?: SortOrder
    order_id?: SortOrder
    product_code?: SortOrder
    variant_product_id?: SortOrder
    quantity?: SortOrder
    unit_price?: SortOrder
    unit_price_iva?: SortOrder
    subtotal?: SortOrder
    iva?: SortOrder
    discount_applied?: SortOrder
    created_at?: SortOrder
  }

  export type order_detailsSumOrderByAggregateInput = {
    id?: SortOrder
    order_id?: SortOrder
    variant_product_id?: SortOrder
    quantity?: SortOrder
    unit_price?: SortOrder
    unit_price_iva?: SortOrder
    subtotal?: SortOrder
    iva?: SortOrder
    discount_applied?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type Order_detailsListRelationFilter = {
    every?: order_detailsWhereInput
    some?: order_detailsWhereInput
    none?: order_detailsWhereInput
  }

  export type DirectionNullableScalarRelationFilter = {
    is?: directionWhereInput | null
    isNot?: directionWhereInput | null
  }

  export type order_detailsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ordersCountOrderByAggregateInput = {
    id?: SortOrder
    retailer_id?: SortOrder
    wholesaler_id?: SortOrder
    status?: SortOrder
    payment_method?: SortOrder
    shipping_address?: SortOrder
    notes?: SortOrder
    discount_total?: SortOrder
    subtotal?: SortOrder
    total?: SortOrder
    iva_total?: SortOrder
    discount_log?: SortOrder
    estimated_date?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type ordersAvgOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
    payment_method?: SortOrder
    shipping_address?: SortOrder
    discount_total?: SortOrder
    subtotal?: SortOrder
    total?: SortOrder
    iva_total?: SortOrder
  }

  export type ordersMaxOrderByAggregateInput = {
    id?: SortOrder
    retailer_id?: SortOrder
    wholesaler_id?: SortOrder
    status?: SortOrder
    payment_method?: SortOrder
    shipping_address?: SortOrder
    notes?: SortOrder
    discount_total?: SortOrder
    subtotal?: SortOrder
    total?: SortOrder
    iva_total?: SortOrder
    estimated_date?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type ordersMinOrderByAggregateInput = {
    id?: SortOrder
    retailer_id?: SortOrder
    wholesaler_id?: SortOrder
    status?: SortOrder
    payment_method?: SortOrder
    shipping_address?: SortOrder
    notes?: SortOrder
    discount_total?: SortOrder
    subtotal?: SortOrder
    total?: SortOrder
    iva_total?: SortOrder
    estimated_date?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type ordersSumOrderByAggregateInput = {
    id?: SortOrder
    status?: SortOrder
    payment_method?: SortOrder
    shipping_address?: SortOrder
    discount_total?: SortOrder
    subtotal?: SortOrder
    total?: SortOrder
    iva_total?: SortOrder
  }

  export type CategoriesScalarRelationFilter = {
    is?: categoriesWhereInput
    isNot?: categoriesWhereInput
  }

  export type Variant_productsListRelationFilter = {
    every?: variant_productsWhereInput
    some?: variant_productsWhereInput
    none?: variant_productsWhereInput
  }

  export type variant_productsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type productsCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    name?: SortOrder
    title?: SortOrder
    description?: SortOrder
    iva?: SortOrder
    category_id?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    product_code?: SortOrder
  }

  export type productsAvgOrderByAggregateInput = {
    id?: SortOrder
    iva?: SortOrder
    category_id?: SortOrder
    status?: SortOrder
  }

  export type productsMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    name?: SortOrder
    title?: SortOrder
    description?: SortOrder
    iva?: SortOrder
    category_id?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    product_code?: SortOrder
  }

  export type productsMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    name?: SortOrder
    title?: SortOrder
    description?: SortOrder
    iva?: SortOrder
    category_id?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    product_code?: SortOrder
  }

  export type productsSumOrderByAggregateInput = {
    id?: SortOrder
    iva?: SortOrder
    category_id?: SortOrder
    status?: SortOrder
  }

  export type ProductsScalarRelationFilter = {
    is?: productsWhereInput
    isNot?: productsWhereInput
  }

  export type products_filesCountOrderByAggregateInput = {
    id?: SortOrder
    product_id?: SortOrder
    file_id?: SortOrder
    sort?: SortOrder
  }

  export type products_filesAvgOrderByAggregateInput = {
    id?: SortOrder
    product_id?: SortOrder
    file_id?: SortOrder
    sort?: SortOrder
  }

  export type products_filesMaxOrderByAggregateInput = {
    id?: SortOrder
    product_id?: SortOrder
    file_id?: SortOrder
    sort?: SortOrder
  }

  export type products_filesMinOrderByAggregateInput = {
    id?: SortOrder
    product_id?: SortOrder
    file_id?: SortOrder
    sort?: SortOrder
  }

  export type products_filesSumOrderByAggregateInput = {
    id?: SortOrder
    product_id?: SortOrder
    file_id?: SortOrder
    sort?: SortOrder
  }

  export type user_sessionsUser_idDevice_fingerCompoundUniqueInput = {
    user_id: string
    device_finger: string
  }

  export type user_sessionsCountOrderByAggregateInput = {
    session_id?: SortOrder
    user_id?: SortOrder
    device_name?: SortOrder
    device_finger?: SortOrder
    user_agent?: SortOrder
    revoked?: SortOrder
    last_ip?: SortOrder
    access_token?: SortOrder
    refresh_token?: SortOrder
    created_at?: SortOrder
    last_active?: SortOrder
  }

  export type user_sessionsMaxOrderByAggregateInput = {
    session_id?: SortOrder
    user_id?: SortOrder
    device_name?: SortOrder
    device_finger?: SortOrder
    user_agent?: SortOrder
    revoked?: SortOrder
    last_ip?: SortOrder
    access_token?: SortOrder
    refresh_token?: SortOrder
    created_at?: SortOrder
    last_active?: SortOrder
  }

  export type user_sessionsMinOrderByAggregateInput = {
    session_id?: SortOrder
    user_id?: SortOrder
    device_name?: SortOrder
    device_finger?: SortOrder
    user_agent?: SortOrder
    revoked?: SortOrder
    last_ip?: SortOrder
    access_token?: SortOrder
    refresh_token?: SortOrder
    created_at?: SortOrder
    last_active?: SortOrder
  }

  export type EnumUserStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.UserStatus | EnumUserStatusFieldRefInput<$PrismaModel>
    in?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumUserStatusFilter<$PrismaModel> | $Enums.UserStatus
  }
  export type JsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type EnumUserRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.UserRole | EnumUserRoleFieldRefInput<$PrismaModel>
    in?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumUserRoleFilter<$PrismaModel> | $Enums.UserRole
  }

  export type CartsListRelationFilter = {
    every?: cartsWhereInput
    some?: cartsWhereInput
    none?: cartsWhereInput
  }

  export type ConfigurationsListRelationFilter = {
    every?: configurationsWhereInput
    some?: configurationsWhereInput
    none?: configurationsWhereInput
  }

  export type DeliveriesListRelationFilter = {
    every?: deliveriesWhereInput
    some?: deliveriesWhereInput
    none?: deliveriesWhereInput
  }

  export type DirectionListRelationFilter = {
    every?: directionWhereInput
    some?: directionWhereInput
    none?: directionWhereInput
  }

  export type DiscountsListRelationFilter = {
    every?: discountsWhereInput
    some?: discountsWhereInput
    none?: discountsWhereInput
  }

  export type NotificationsListRelationFilter = {
    every?: notificationsWhereInput
    some?: notificationsWhereInput
    none?: notificationsWhereInput
  }

  export type OrdersListRelationFilter = {
    every?: ordersWhereInput
    some?: ordersWhereInput
    none?: ordersWhereInput
  }

  export type User_sessionsListRelationFilter = {
    every?: user_sessionsWhereInput
    some?: user_sessionsWhereInput
    none?: user_sessionsWhereInput
  }

  export type cartsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type configurationsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type deliveriesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type directionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type discountsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type notificationsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ordersOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type user_sessionsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type usersCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    username?: SortOrder
    password?: SortOrder
    email?: SortOrder
    telephone?: SortOrder
    status?: SortOrder
    profile?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    role?: SortOrder
    cif?: SortOrder
  }

  export type usersMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    username?: SortOrder
    password?: SortOrder
    email?: SortOrder
    telephone?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    role?: SortOrder
    cif?: SortOrder
  }

  export type usersMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    username?: SortOrder
    password?: SortOrder
    email?: SortOrder
    telephone?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    role?: SortOrder
    cif?: SortOrder
  }

  export type EnumUserStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.UserStatus | EnumUserStatusFieldRefInput<$PrismaModel>
    in?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumUserStatusWithAggregatesFilter<$PrismaModel> | $Enums.UserStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumUserStatusFilter<$PrismaModel>
    _max?: NestedEnumUserStatusFilter<$PrismaModel>
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type EnumUserRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.UserRole | EnumUserRoleFieldRefInput<$PrismaModel>
    in?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumUserRoleWithAggregatesFilter<$PrismaModel> | $Enums.UserRole
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumUserRoleFilter<$PrismaModel>
    _max?: NestedEnumUserRoleFilter<$PrismaModel>
  }

  export type variant_productsCountOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    product_id?: SortOrder
    type_sale?: SortOrder
    price?: SortOrder
    price_iva?: SortOrder
    stock?: SortOrder
    sort?: SortOrder
    attributes?: SortOrder
    status?: SortOrder
    iva?: SortOrder
    product_code?: SortOrder
  }

  export type variant_productsAvgOrderByAggregateInput = {
    id?: SortOrder
    product_id?: SortOrder
    type_sale?: SortOrder
    price?: SortOrder
    price_iva?: SortOrder
    stock?: SortOrder
    sort?: SortOrder
    status?: SortOrder
    iva?: SortOrder
  }

  export type variant_productsMaxOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    product_id?: SortOrder
    type_sale?: SortOrder
    price?: SortOrder
    price_iva?: SortOrder
    stock?: SortOrder
    sort?: SortOrder
    status?: SortOrder
    iva?: SortOrder
    product_code?: SortOrder
  }

  export type variant_productsMinOrderByAggregateInput = {
    id?: SortOrder
    created_at?: SortOrder
    product_id?: SortOrder
    type_sale?: SortOrder
    price?: SortOrder
    price_iva?: SortOrder
    stock?: SortOrder
    sort?: SortOrder
    status?: SortOrder
    iva?: SortOrder
    product_code?: SortOrder
  }

  export type variant_productsSumOrderByAggregateInput = {
    id?: SortOrder
    product_id?: SortOrder
    type_sale?: SortOrder
    price?: SortOrder
    price_iva?: SortOrder
    stock?: SortOrder
    sort?: SortOrder
    status?: SortOrder
    iva?: SortOrder
  }

  export type EnumAddressTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.AddressType | EnumAddressTypeFieldRefInput<$PrismaModel>
    in?: $Enums.AddressType[] | ListEnumAddressTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.AddressType[] | ListEnumAddressTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumAddressTypeFilter<$PrismaModel> | $Enums.AddressType
  }

  export type directionCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    type?: SortOrder
    direction?: SortOrder
    city?: SortOrder
    province?: SortOrder
    zip_code?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type directionAvgOrderByAggregateInput = {
    id?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
  }

  export type directionMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    type?: SortOrder
    direction?: SortOrder
    city?: SortOrder
    province?: SortOrder
    zip_code?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type directionMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    type?: SortOrder
    direction?: SortOrder
    city?: SortOrder
    province?: SortOrder
    zip_code?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type directionSumOrderByAggregateInput = {
    id?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
  }

  export type EnumAddressTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AddressType | EnumAddressTypeFieldRefInput<$PrismaModel>
    in?: $Enums.AddressType[] | ListEnumAddressTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.AddressType[] | ListEnumAddressTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumAddressTypeWithAggregatesFilter<$PrismaModel> | $Enums.AddressType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAddressTypeFilter<$PrismaModel>
    _max?: NestedEnumAddressTypeFilter<$PrismaModel>
  }

  export type cartsCreateNestedOneWithoutCart_detailsInput = {
    create?: XOR<cartsCreateWithoutCart_detailsInput, cartsUncheckedCreateWithoutCart_detailsInput>
    connectOrCreate?: cartsCreateOrConnectWithoutCart_detailsInput
    connect?: cartsWhereUniqueInput
  }

  export type variant_productsCreateNestedOneWithoutCart_detailsInput = {
    create?: XOR<variant_productsCreateWithoutCart_detailsInput, variant_productsUncheckedCreateWithoutCart_detailsInput>
    connectOrCreate?: variant_productsCreateOrConnectWithoutCart_detailsInput
    connect?: variant_productsWhereUniqueInput
  }

  export type BigIntFieldUpdateOperationsInput = {
    set?: bigint | number
    increment?: bigint | number
    decrement?: bigint | number
    multiply?: bigint | number
    divide?: bigint | number
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type cartsUpdateOneRequiredWithoutCart_detailsNestedInput = {
    create?: XOR<cartsCreateWithoutCart_detailsInput, cartsUncheckedCreateWithoutCart_detailsInput>
    connectOrCreate?: cartsCreateOrConnectWithoutCart_detailsInput
    upsert?: cartsUpsertWithoutCart_detailsInput
    connect?: cartsWhereUniqueInput
    update?: XOR<XOR<cartsUpdateToOneWithWhereWithoutCart_detailsInput, cartsUpdateWithoutCart_detailsInput>, cartsUncheckedUpdateWithoutCart_detailsInput>
  }

  export type variant_productsUpdateOneWithoutCart_detailsNestedInput = {
    create?: XOR<variant_productsCreateWithoutCart_detailsInput, variant_productsUncheckedCreateWithoutCart_detailsInput>
    connectOrCreate?: variant_productsCreateOrConnectWithoutCart_detailsInput
    upsert?: variant_productsUpsertWithoutCart_detailsInput
    disconnect?: variant_productsWhereInput | boolean
    delete?: variant_productsWhereInput | boolean
    connect?: variant_productsWhereUniqueInput
    update?: XOR<XOR<variant_productsUpdateToOneWithWhereWithoutCart_detailsInput, variant_productsUpdateWithoutCart_detailsInput>, variant_productsUncheckedUpdateWithoutCart_detailsInput>
  }

  export type NullableBigIntFieldUpdateOperationsInput = {
    set?: bigint | number | null
    increment?: bigint | number
    decrement?: bigint | number
    multiply?: bigint | number
    divide?: bigint | number
  }

  export type cart_detailsCreateNestedManyWithoutCartsInput = {
    create?: XOR<cart_detailsCreateWithoutCartsInput, cart_detailsUncheckedCreateWithoutCartsInput> | cart_detailsCreateWithoutCartsInput[] | cart_detailsUncheckedCreateWithoutCartsInput[]
    connectOrCreate?: cart_detailsCreateOrConnectWithoutCartsInput | cart_detailsCreateOrConnectWithoutCartsInput[]
    createMany?: cart_detailsCreateManyCartsInputEnvelope
    connect?: cart_detailsWhereUniqueInput | cart_detailsWhereUniqueInput[]
  }

  export type usersCreateNestedOneWithoutCartsInput = {
    create?: XOR<usersCreateWithoutCartsInput, usersUncheckedCreateWithoutCartsInput>
    connectOrCreate?: usersCreateOrConnectWithoutCartsInput
    connect?: usersWhereUniqueInput
  }

  export type cart_detailsUncheckedCreateNestedManyWithoutCartsInput = {
    create?: XOR<cart_detailsCreateWithoutCartsInput, cart_detailsUncheckedCreateWithoutCartsInput> | cart_detailsCreateWithoutCartsInput[] | cart_detailsUncheckedCreateWithoutCartsInput[]
    connectOrCreate?: cart_detailsCreateOrConnectWithoutCartsInput | cart_detailsCreateOrConnectWithoutCartsInput[]
    createMany?: cart_detailsCreateManyCartsInputEnvelope
    connect?: cart_detailsWhereUniqueInput | cart_detailsWhereUniqueInput[]
  }

  export type cart_detailsUpdateManyWithoutCartsNestedInput = {
    create?: XOR<cart_detailsCreateWithoutCartsInput, cart_detailsUncheckedCreateWithoutCartsInput> | cart_detailsCreateWithoutCartsInput[] | cart_detailsUncheckedCreateWithoutCartsInput[]
    connectOrCreate?: cart_detailsCreateOrConnectWithoutCartsInput | cart_detailsCreateOrConnectWithoutCartsInput[]
    upsert?: cart_detailsUpsertWithWhereUniqueWithoutCartsInput | cart_detailsUpsertWithWhereUniqueWithoutCartsInput[]
    createMany?: cart_detailsCreateManyCartsInputEnvelope
    set?: cart_detailsWhereUniqueInput | cart_detailsWhereUniqueInput[]
    disconnect?: cart_detailsWhereUniqueInput | cart_detailsWhereUniqueInput[]
    delete?: cart_detailsWhereUniqueInput | cart_detailsWhereUniqueInput[]
    connect?: cart_detailsWhereUniqueInput | cart_detailsWhereUniqueInput[]
    update?: cart_detailsUpdateWithWhereUniqueWithoutCartsInput | cart_detailsUpdateWithWhereUniqueWithoutCartsInput[]
    updateMany?: cart_detailsUpdateManyWithWhereWithoutCartsInput | cart_detailsUpdateManyWithWhereWithoutCartsInput[]
    deleteMany?: cart_detailsScalarWhereInput | cart_detailsScalarWhereInput[]
  }

  export type usersUpdateOneRequiredWithoutCartsNestedInput = {
    create?: XOR<usersCreateWithoutCartsInput, usersUncheckedCreateWithoutCartsInput>
    connectOrCreate?: usersCreateOrConnectWithoutCartsInput
    upsert?: usersUpsertWithoutCartsInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutCartsInput, usersUpdateWithoutCartsInput>, usersUncheckedUpdateWithoutCartsInput>
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type cart_detailsUncheckedUpdateManyWithoutCartsNestedInput = {
    create?: XOR<cart_detailsCreateWithoutCartsInput, cart_detailsUncheckedCreateWithoutCartsInput> | cart_detailsCreateWithoutCartsInput[] | cart_detailsUncheckedCreateWithoutCartsInput[]
    connectOrCreate?: cart_detailsCreateOrConnectWithoutCartsInput | cart_detailsCreateOrConnectWithoutCartsInput[]
    upsert?: cart_detailsUpsertWithWhereUniqueWithoutCartsInput | cart_detailsUpsertWithWhereUniqueWithoutCartsInput[]
    createMany?: cart_detailsCreateManyCartsInputEnvelope
    set?: cart_detailsWhereUniqueInput | cart_detailsWhereUniqueInput[]
    disconnect?: cart_detailsWhereUniqueInput | cart_detailsWhereUniqueInput[]
    delete?: cart_detailsWhereUniqueInput | cart_detailsWhereUniqueInput[]
    connect?: cart_detailsWhereUniqueInput | cart_detailsWhereUniqueInput[]
    update?: cart_detailsUpdateWithWhereUniqueWithoutCartsInput | cart_detailsUpdateWithWhereUniqueWithoutCartsInput[]
    updateMany?: cart_detailsUpdateManyWithWhereWithoutCartsInput | cart_detailsUpdateManyWithWhereWithoutCartsInput[]
    deleteMany?: cart_detailsScalarWhereInput | cart_detailsScalarWhereInput[]
  }

  export type categoriesCreateNestedOneWithoutOther_categoriesInput = {
    create?: XOR<categoriesCreateWithoutOther_categoriesInput, categoriesUncheckedCreateWithoutOther_categoriesInput>
    connectOrCreate?: categoriesCreateOrConnectWithoutOther_categoriesInput
    connect?: categoriesWhereUniqueInput
  }

  export type categoriesCreateNestedManyWithoutCategoriesInput = {
    create?: XOR<categoriesCreateWithoutCategoriesInput, categoriesUncheckedCreateWithoutCategoriesInput> | categoriesCreateWithoutCategoriesInput[] | categoriesUncheckedCreateWithoutCategoriesInput[]
    connectOrCreate?: categoriesCreateOrConnectWithoutCategoriesInput | categoriesCreateOrConnectWithoutCategoriesInput[]
    createMany?: categoriesCreateManyCategoriesInputEnvelope
    connect?: categoriesWhereUniqueInput | categoriesWhereUniqueInput[]
  }

  export type usersCreateNestedOneWithoutCategoriesInput = {
    create?: XOR<usersCreateWithoutCategoriesInput, usersUncheckedCreateWithoutCategoriesInput>
    connectOrCreate?: usersCreateOrConnectWithoutCategoriesInput
    connect?: usersWhereUniqueInput
  }

  export type productsCreateNestedManyWithoutCategoriesInput = {
    create?: XOR<productsCreateWithoutCategoriesInput, productsUncheckedCreateWithoutCategoriesInput> | productsCreateWithoutCategoriesInput[] | productsUncheckedCreateWithoutCategoriesInput[]
    connectOrCreate?: productsCreateOrConnectWithoutCategoriesInput | productsCreateOrConnectWithoutCategoriesInput[]
    createMany?: productsCreateManyCategoriesInputEnvelope
    connect?: productsWhereUniqueInput | productsWhereUniqueInput[]
  }

  export type categoriesUncheckedCreateNestedManyWithoutCategoriesInput = {
    create?: XOR<categoriesCreateWithoutCategoriesInput, categoriesUncheckedCreateWithoutCategoriesInput> | categoriesCreateWithoutCategoriesInput[] | categoriesUncheckedCreateWithoutCategoriesInput[]
    connectOrCreate?: categoriesCreateOrConnectWithoutCategoriesInput | categoriesCreateOrConnectWithoutCategoriesInput[]
    createMany?: categoriesCreateManyCategoriesInputEnvelope
    connect?: categoriesWhereUniqueInput | categoriesWhereUniqueInput[]
  }

  export type productsUncheckedCreateNestedManyWithoutCategoriesInput = {
    create?: XOR<productsCreateWithoutCategoriesInput, productsUncheckedCreateWithoutCategoriesInput> | productsCreateWithoutCategoriesInput[] | productsUncheckedCreateWithoutCategoriesInput[]
    connectOrCreate?: productsCreateOrConnectWithoutCategoriesInput | productsCreateOrConnectWithoutCategoriesInput[]
    createMany?: productsCreateManyCategoriesInputEnvelope
    connect?: productsWhereUniqueInput | productsWhereUniqueInput[]
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type categoriesUpdateOneWithoutOther_categoriesNestedInput = {
    create?: XOR<categoriesCreateWithoutOther_categoriesInput, categoriesUncheckedCreateWithoutOther_categoriesInput>
    connectOrCreate?: categoriesCreateOrConnectWithoutOther_categoriesInput
    upsert?: categoriesUpsertWithoutOther_categoriesInput
    disconnect?: categoriesWhereInput | boolean
    delete?: categoriesWhereInput | boolean
    connect?: categoriesWhereUniqueInput
    update?: XOR<XOR<categoriesUpdateToOneWithWhereWithoutOther_categoriesInput, categoriesUpdateWithoutOther_categoriesInput>, categoriesUncheckedUpdateWithoutOther_categoriesInput>
  }

  export type categoriesUpdateManyWithoutCategoriesNestedInput = {
    create?: XOR<categoriesCreateWithoutCategoriesInput, categoriesUncheckedCreateWithoutCategoriesInput> | categoriesCreateWithoutCategoriesInput[] | categoriesUncheckedCreateWithoutCategoriesInput[]
    connectOrCreate?: categoriesCreateOrConnectWithoutCategoriesInput | categoriesCreateOrConnectWithoutCategoriesInput[]
    upsert?: categoriesUpsertWithWhereUniqueWithoutCategoriesInput | categoriesUpsertWithWhereUniqueWithoutCategoriesInput[]
    createMany?: categoriesCreateManyCategoriesInputEnvelope
    set?: categoriesWhereUniqueInput | categoriesWhereUniqueInput[]
    disconnect?: categoriesWhereUniqueInput | categoriesWhereUniqueInput[]
    delete?: categoriesWhereUniqueInput | categoriesWhereUniqueInput[]
    connect?: categoriesWhereUniqueInput | categoriesWhereUniqueInput[]
    update?: categoriesUpdateWithWhereUniqueWithoutCategoriesInput | categoriesUpdateWithWhereUniqueWithoutCategoriesInput[]
    updateMany?: categoriesUpdateManyWithWhereWithoutCategoriesInput | categoriesUpdateManyWithWhereWithoutCategoriesInput[]
    deleteMany?: categoriesScalarWhereInput | categoriesScalarWhereInput[]
  }

  export type usersUpdateOneWithoutCategoriesNestedInput = {
    create?: XOR<usersCreateWithoutCategoriesInput, usersUncheckedCreateWithoutCategoriesInput>
    connectOrCreate?: usersCreateOrConnectWithoutCategoriesInput
    upsert?: usersUpsertWithoutCategoriesInput
    disconnect?: usersWhereInput | boolean
    delete?: usersWhereInput | boolean
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutCategoriesInput, usersUpdateWithoutCategoriesInput>, usersUncheckedUpdateWithoutCategoriesInput>
  }

  export type productsUpdateManyWithoutCategoriesNestedInput = {
    create?: XOR<productsCreateWithoutCategoriesInput, productsUncheckedCreateWithoutCategoriesInput> | productsCreateWithoutCategoriesInput[] | productsUncheckedCreateWithoutCategoriesInput[]
    connectOrCreate?: productsCreateOrConnectWithoutCategoriesInput | productsCreateOrConnectWithoutCategoriesInput[]
    upsert?: productsUpsertWithWhereUniqueWithoutCategoriesInput | productsUpsertWithWhereUniqueWithoutCategoriesInput[]
    createMany?: productsCreateManyCategoriesInputEnvelope
    set?: productsWhereUniqueInput | productsWhereUniqueInput[]
    disconnect?: productsWhereUniqueInput | productsWhereUniqueInput[]
    delete?: productsWhereUniqueInput | productsWhereUniqueInput[]
    connect?: productsWhereUniqueInput | productsWhereUniqueInput[]
    update?: productsUpdateWithWhereUniqueWithoutCategoriesInput | productsUpdateWithWhereUniqueWithoutCategoriesInput[]
    updateMany?: productsUpdateManyWithWhereWithoutCategoriesInput | productsUpdateManyWithWhereWithoutCategoriesInput[]
    deleteMany?: productsScalarWhereInput | productsScalarWhereInput[]
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type categoriesUncheckedUpdateManyWithoutCategoriesNestedInput = {
    create?: XOR<categoriesCreateWithoutCategoriesInput, categoriesUncheckedCreateWithoutCategoriesInput> | categoriesCreateWithoutCategoriesInput[] | categoriesUncheckedCreateWithoutCategoriesInput[]
    connectOrCreate?: categoriesCreateOrConnectWithoutCategoriesInput | categoriesCreateOrConnectWithoutCategoriesInput[]
    upsert?: categoriesUpsertWithWhereUniqueWithoutCategoriesInput | categoriesUpsertWithWhereUniqueWithoutCategoriesInput[]
    createMany?: categoriesCreateManyCategoriesInputEnvelope
    set?: categoriesWhereUniqueInput | categoriesWhereUniqueInput[]
    disconnect?: categoriesWhereUniqueInput | categoriesWhereUniqueInput[]
    delete?: categoriesWhereUniqueInput | categoriesWhereUniqueInput[]
    connect?: categoriesWhereUniqueInput | categoriesWhereUniqueInput[]
    update?: categoriesUpdateWithWhereUniqueWithoutCategoriesInput | categoriesUpdateWithWhereUniqueWithoutCategoriesInput[]
    updateMany?: categoriesUpdateManyWithWhereWithoutCategoriesInput | categoriesUpdateManyWithWhereWithoutCategoriesInput[]
    deleteMany?: categoriesScalarWhereInput | categoriesScalarWhereInput[]
  }

  export type productsUncheckedUpdateManyWithoutCategoriesNestedInput = {
    create?: XOR<productsCreateWithoutCategoriesInput, productsUncheckedCreateWithoutCategoriesInput> | productsCreateWithoutCategoriesInput[] | productsUncheckedCreateWithoutCategoriesInput[]
    connectOrCreate?: productsCreateOrConnectWithoutCategoriesInput | productsCreateOrConnectWithoutCategoriesInput[]
    upsert?: productsUpsertWithWhereUniqueWithoutCategoriesInput | productsUpsertWithWhereUniqueWithoutCategoriesInput[]
    createMany?: productsCreateManyCategoriesInputEnvelope
    set?: productsWhereUniqueInput | productsWhereUniqueInput[]
    disconnect?: productsWhereUniqueInput | productsWhereUniqueInput[]
    delete?: productsWhereUniqueInput | productsWhereUniqueInput[]
    connect?: productsWhereUniqueInput | productsWhereUniqueInput[]
    update?: productsUpdateWithWhereUniqueWithoutCategoriesInput | productsUpdateWithWhereUniqueWithoutCategoriesInput[]
    updateMany?: productsUpdateManyWithWhereWithoutCategoriesInput | productsUpdateManyWithWhereWithoutCategoriesInput[]
    deleteMany?: productsScalarWhereInput | productsScalarWhereInput[]
  }

  export type chat_participantsCreateNestedManyWithoutChat_panelsInput = {
    create?: XOR<chat_participantsCreateWithoutChat_panelsInput, chat_participantsUncheckedCreateWithoutChat_panelsInput> | chat_participantsCreateWithoutChat_panelsInput[] | chat_participantsUncheckedCreateWithoutChat_panelsInput[]
    connectOrCreate?: chat_participantsCreateOrConnectWithoutChat_panelsInput | chat_participantsCreateOrConnectWithoutChat_panelsInput[]
    createMany?: chat_participantsCreateManyChat_panelsInputEnvelope
    connect?: chat_participantsWhereUniqueInput | chat_participantsWhereUniqueInput[]
  }

  export type messagesCreateNestedManyWithoutChat_panelsInput = {
    create?: XOR<messagesCreateWithoutChat_panelsInput, messagesUncheckedCreateWithoutChat_panelsInput> | messagesCreateWithoutChat_panelsInput[] | messagesUncheckedCreateWithoutChat_panelsInput[]
    connectOrCreate?: messagesCreateOrConnectWithoutChat_panelsInput | messagesCreateOrConnectWithoutChat_panelsInput[]
    createMany?: messagesCreateManyChat_panelsInputEnvelope
    connect?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
  }

  export type chat_participantsUncheckedCreateNestedManyWithoutChat_panelsInput = {
    create?: XOR<chat_participantsCreateWithoutChat_panelsInput, chat_participantsUncheckedCreateWithoutChat_panelsInput> | chat_participantsCreateWithoutChat_panelsInput[] | chat_participantsUncheckedCreateWithoutChat_panelsInput[]
    connectOrCreate?: chat_participantsCreateOrConnectWithoutChat_panelsInput | chat_participantsCreateOrConnectWithoutChat_panelsInput[]
    createMany?: chat_participantsCreateManyChat_panelsInputEnvelope
    connect?: chat_participantsWhereUniqueInput | chat_participantsWhereUniqueInput[]
  }

  export type messagesUncheckedCreateNestedManyWithoutChat_panelsInput = {
    create?: XOR<messagesCreateWithoutChat_panelsInput, messagesUncheckedCreateWithoutChat_panelsInput> | messagesCreateWithoutChat_panelsInput[] | messagesUncheckedCreateWithoutChat_panelsInput[]
    connectOrCreate?: messagesCreateOrConnectWithoutChat_panelsInput | messagesCreateOrConnectWithoutChat_panelsInput[]
    createMany?: messagesCreateManyChat_panelsInputEnvelope
    connect?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
  }

  export type chat_participantsUpdateManyWithoutChat_panelsNestedInput = {
    create?: XOR<chat_participantsCreateWithoutChat_panelsInput, chat_participantsUncheckedCreateWithoutChat_panelsInput> | chat_participantsCreateWithoutChat_panelsInput[] | chat_participantsUncheckedCreateWithoutChat_panelsInput[]
    connectOrCreate?: chat_participantsCreateOrConnectWithoutChat_panelsInput | chat_participantsCreateOrConnectWithoutChat_panelsInput[]
    upsert?: chat_participantsUpsertWithWhereUniqueWithoutChat_panelsInput | chat_participantsUpsertWithWhereUniqueWithoutChat_panelsInput[]
    createMany?: chat_participantsCreateManyChat_panelsInputEnvelope
    set?: chat_participantsWhereUniqueInput | chat_participantsWhereUniqueInput[]
    disconnect?: chat_participantsWhereUniqueInput | chat_participantsWhereUniqueInput[]
    delete?: chat_participantsWhereUniqueInput | chat_participantsWhereUniqueInput[]
    connect?: chat_participantsWhereUniqueInput | chat_participantsWhereUniqueInput[]
    update?: chat_participantsUpdateWithWhereUniqueWithoutChat_panelsInput | chat_participantsUpdateWithWhereUniqueWithoutChat_panelsInput[]
    updateMany?: chat_participantsUpdateManyWithWhereWithoutChat_panelsInput | chat_participantsUpdateManyWithWhereWithoutChat_panelsInput[]
    deleteMany?: chat_participantsScalarWhereInput | chat_participantsScalarWhereInput[]
  }

  export type messagesUpdateManyWithoutChat_panelsNestedInput = {
    create?: XOR<messagesCreateWithoutChat_panelsInput, messagesUncheckedCreateWithoutChat_panelsInput> | messagesCreateWithoutChat_panelsInput[] | messagesUncheckedCreateWithoutChat_panelsInput[]
    connectOrCreate?: messagesCreateOrConnectWithoutChat_panelsInput | messagesCreateOrConnectWithoutChat_panelsInput[]
    upsert?: messagesUpsertWithWhereUniqueWithoutChat_panelsInput | messagesUpsertWithWhereUniqueWithoutChat_panelsInput[]
    createMany?: messagesCreateManyChat_panelsInputEnvelope
    set?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    disconnect?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    delete?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    connect?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    update?: messagesUpdateWithWhereUniqueWithoutChat_panelsInput | messagesUpdateWithWhereUniqueWithoutChat_panelsInput[]
    updateMany?: messagesUpdateManyWithWhereWithoutChat_panelsInput | messagesUpdateManyWithWhereWithoutChat_panelsInput[]
    deleteMany?: messagesScalarWhereInput | messagesScalarWhereInput[]
  }

  export type chat_participantsUncheckedUpdateManyWithoutChat_panelsNestedInput = {
    create?: XOR<chat_participantsCreateWithoutChat_panelsInput, chat_participantsUncheckedCreateWithoutChat_panelsInput> | chat_participantsCreateWithoutChat_panelsInput[] | chat_participantsUncheckedCreateWithoutChat_panelsInput[]
    connectOrCreate?: chat_participantsCreateOrConnectWithoutChat_panelsInput | chat_participantsCreateOrConnectWithoutChat_panelsInput[]
    upsert?: chat_participantsUpsertWithWhereUniqueWithoutChat_panelsInput | chat_participantsUpsertWithWhereUniqueWithoutChat_panelsInput[]
    createMany?: chat_participantsCreateManyChat_panelsInputEnvelope
    set?: chat_participantsWhereUniqueInput | chat_participantsWhereUniqueInput[]
    disconnect?: chat_participantsWhereUniqueInput | chat_participantsWhereUniqueInput[]
    delete?: chat_participantsWhereUniqueInput | chat_participantsWhereUniqueInput[]
    connect?: chat_participantsWhereUniqueInput | chat_participantsWhereUniqueInput[]
    update?: chat_participantsUpdateWithWhereUniqueWithoutChat_panelsInput | chat_participantsUpdateWithWhereUniqueWithoutChat_panelsInput[]
    updateMany?: chat_participantsUpdateManyWithWhereWithoutChat_panelsInput | chat_participantsUpdateManyWithWhereWithoutChat_panelsInput[]
    deleteMany?: chat_participantsScalarWhereInput | chat_participantsScalarWhereInput[]
  }

  export type messagesUncheckedUpdateManyWithoutChat_panelsNestedInput = {
    create?: XOR<messagesCreateWithoutChat_panelsInput, messagesUncheckedCreateWithoutChat_panelsInput> | messagesCreateWithoutChat_panelsInput[] | messagesUncheckedCreateWithoutChat_panelsInput[]
    connectOrCreate?: messagesCreateOrConnectWithoutChat_panelsInput | messagesCreateOrConnectWithoutChat_panelsInput[]
    upsert?: messagesUpsertWithWhereUniqueWithoutChat_panelsInput | messagesUpsertWithWhereUniqueWithoutChat_panelsInput[]
    createMany?: messagesCreateManyChat_panelsInputEnvelope
    set?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    disconnect?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    delete?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    connect?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    update?: messagesUpdateWithWhereUniqueWithoutChat_panelsInput | messagesUpdateWithWhereUniqueWithoutChat_panelsInput[]
    updateMany?: messagesUpdateManyWithWhereWithoutChat_panelsInput | messagesUpdateManyWithWhereWithoutChat_panelsInput[]
    deleteMany?: messagesScalarWhereInput | messagesScalarWhereInput[]
  }

  export type chat_panelsCreateNestedOneWithoutChat_participantsInput = {
    create?: XOR<chat_panelsCreateWithoutChat_participantsInput, chat_panelsUncheckedCreateWithoutChat_participantsInput>
    connectOrCreate?: chat_panelsCreateOrConnectWithoutChat_participantsInput
    connect?: chat_panelsWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutChat_participantsInput = {
    create?: XOR<usersCreateWithoutChat_participantsInput, usersUncheckedCreateWithoutChat_participantsInput>
    connectOrCreate?: usersCreateOrConnectWithoutChat_participantsInput
    connect?: usersWhereUniqueInput
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type chat_panelsUpdateOneRequiredWithoutChat_participantsNestedInput = {
    create?: XOR<chat_panelsCreateWithoutChat_participantsInput, chat_panelsUncheckedCreateWithoutChat_participantsInput>
    connectOrCreate?: chat_panelsCreateOrConnectWithoutChat_participantsInput
    upsert?: chat_panelsUpsertWithoutChat_participantsInput
    connect?: chat_panelsWhereUniqueInput
    update?: XOR<XOR<chat_panelsUpdateToOneWithWhereWithoutChat_participantsInput, chat_panelsUpdateWithoutChat_participantsInput>, chat_panelsUncheckedUpdateWithoutChat_participantsInput>
  }

  export type usersUpdateOneRequiredWithoutChat_participantsNestedInput = {
    create?: XOR<usersCreateWithoutChat_participantsInput, usersUncheckedCreateWithoutChat_participantsInput>
    connectOrCreate?: usersCreateOrConnectWithoutChat_participantsInput
    upsert?: usersUpsertWithoutChat_participantsInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutChat_participantsInput, usersUpdateWithoutChat_participantsInput>, usersUncheckedUpdateWithoutChat_participantsInput>
  }

  export type usersCreateNestedOneWithoutConfigurationsInput = {
    create?: XOR<usersCreateWithoutConfigurationsInput, usersUncheckedCreateWithoutConfigurationsInput>
    connectOrCreate?: usersCreateOrConnectWithoutConfigurationsInput
    connect?: usersWhereUniqueInput
  }

  export type usersUpdateOneRequiredWithoutConfigurationsNestedInput = {
    create?: XOR<usersCreateWithoutConfigurationsInput, usersUncheckedCreateWithoutConfigurationsInput>
    connectOrCreate?: usersCreateOrConnectWithoutConfigurationsInput
    upsert?: usersUpsertWithoutConfigurationsInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutConfigurationsInput, usersUpdateWithoutConfigurationsInput>, usersUncheckedUpdateWithoutConfigurationsInput>
  }

  export type usersCreateNestedOneWithoutDeliveriesInput = {
    create?: XOR<usersCreateWithoutDeliveriesInput, usersUncheckedCreateWithoutDeliveriesInput>
    connectOrCreate?: usersCreateOrConnectWithoutDeliveriesInput
    connect?: usersWhereUniqueInput
  }

  export type delivery_timelineCreateNestedManyWithoutDeliveriesInput = {
    create?: XOR<delivery_timelineCreateWithoutDeliveriesInput, delivery_timelineUncheckedCreateWithoutDeliveriesInput> | delivery_timelineCreateWithoutDeliveriesInput[] | delivery_timelineUncheckedCreateWithoutDeliveriesInput[]
    connectOrCreate?: delivery_timelineCreateOrConnectWithoutDeliveriesInput | delivery_timelineCreateOrConnectWithoutDeliveriesInput[]
    createMany?: delivery_timelineCreateManyDeliveriesInputEnvelope
    connect?: delivery_timelineWhereUniqueInput | delivery_timelineWhereUniqueInput[]
  }

  export type delivery_timelineUncheckedCreateNestedManyWithoutDeliveriesInput = {
    create?: XOR<delivery_timelineCreateWithoutDeliveriesInput, delivery_timelineUncheckedCreateWithoutDeliveriesInput> | delivery_timelineCreateWithoutDeliveriesInput[] | delivery_timelineUncheckedCreateWithoutDeliveriesInput[]
    connectOrCreate?: delivery_timelineCreateOrConnectWithoutDeliveriesInput | delivery_timelineCreateOrConnectWithoutDeliveriesInput[]
    createMany?: delivery_timelineCreateManyDeliveriesInputEnvelope
    connect?: delivery_timelineWhereUniqueInput | delivery_timelineWhereUniqueInput[]
  }

  export type EnumDeliveryStatusFieldUpdateOperationsInput = {
    set?: $Enums.DeliveryStatus
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type usersUpdateOneRequiredWithoutDeliveriesNestedInput = {
    create?: XOR<usersCreateWithoutDeliveriesInput, usersUncheckedCreateWithoutDeliveriesInput>
    connectOrCreate?: usersCreateOrConnectWithoutDeliveriesInput
    upsert?: usersUpsertWithoutDeliveriesInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutDeliveriesInput, usersUpdateWithoutDeliveriesInput>, usersUncheckedUpdateWithoutDeliveriesInput>
  }

  export type delivery_timelineUpdateManyWithoutDeliveriesNestedInput = {
    create?: XOR<delivery_timelineCreateWithoutDeliveriesInput, delivery_timelineUncheckedCreateWithoutDeliveriesInput> | delivery_timelineCreateWithoutDeliveriesInput[] | delivery_timelineUncheckedCreateWithoutDeliveriesInput[]
    connectOrCreate?: delivery_timelineCreateOrConnectWithoutDeliveriesInput | delivery_timelineCreateOrConnectWithoutDeliveriesInput[]
    upsert?: delivery_timelineUpsertWithWhereUniqueWithoutDeliveriesInput | delivery_timelineUpsertWithWhereUniqueWithoutDeliveriesInput[]
    createMany?: delivery_timelineCreateManyDeliveriesInputEnvelope
    set?: delivery_timelineWhereUniqueInput | delivery_timelineWhereUniqueInput[]
    disconnect?: delivery_timelineWhereUniqueInput | delivery_timelineWhereUniqueInput[]
    delete?: delivery_timelineWhereUniqueInput | delivery_timelineWhereUniqueInput[]
    connect?: delivery_timelineWhereUniqueInput | delivery_timelineWhereUniqueInput[]
    update?: delivery_timelineUpdateWithWhereUniqueWithoutDeliveriesInput | delivery_timelineUpdateWithWhereUniqueWithoutDeliveriesInput[]
    updateMany?: delivery_timelineUpdateManyWithWhereWithoutDeliveriesInput | delivery_timelineUpdateManyWithWhereWithoutDeliveriesInput[]
    deleteMany?: delivery_timelineScalarWhereInput | delivery_timelineScalarWhereInput[]
  }

  export type delivery_timelineUncheckedUpdateManyWithoutDeliveriesNestedInput = {
    create?: XOR<delivery_timelineCreateWithoutDeliveriesInput, delivery_timelineUncheckedCreateWithoutDeliveriesInput> | delivery_timelineCreateWithoutDeliveriesInput[] | delivery_timelineUncheckedCreateWithoutDeliveriesInput[]
    connectOrCreate?: delivery_timelineCreateOrConnectWithoutDeliveriesInput | delivery_timelineCreateOrConnectWithoutDeliveriesInput[]
    upsert?: delivery_timelineUpsertWithWhereUniqueWithoutDeliveriesInput | delivery_timelineUpsertWithWhereUniqueWithoutDeliveriesInput[]
    createMany?: delivery_timelineCreateManyDeliveriesInputEnvelope
    set?: delivery_timelineWhereUniqueInput | delivery_timelineWhereUniqueInput[]
    disconnect?: delivery_timelineWhereUniqueInput | delivery_timelineWhereUniqueInput[]
    delete?: delivery_timelineWhereUniqueInput | delivery_timelineWhereUniqueInput[]
    connect?: delivery_timelineWhereUniqueInput | delivery_timelineWhereUniqueInput[]
    update?: delivery_timelineUpdateWithWhereUniqueWithoutDeliveriesInput | delivery_timelineUpdateWithWhereUniqueWithoutDeliveriesInput[]
    updateMany?: delivery_timelineUpdateManyWithWhereWithoutDeliveriesInput | delivery_timelineUpdateManyWithWhereWithoutDeliveriesInput[]
    deleteMany?: delivery_timelineScalarWhereInput | delivery_timelineScalarWhereInput[]
  }

  export type deliveriesCreateNestedOneWithoutDelivery_timelineInput = {
    create?: XOR<deliveriesCreateWithoutDelivery_timelineInput, deliveriesUncheckedCreateWithoutDelivery_timelineInput>
    connectOrCreate?: deliveriesCreateOrConnectWithoutDelivery_timelineInput
    connect?: deliveriesWhereUniqueInput
  }

  export type deliveriesUpdateOneWithoutDelivery_timelineNestedInput = {
    create?: XOR<deliveriesCreateWithoutDelivery_timelineInput, deliveriesUncheckedCreateWithoutDelivery_timelineInput>
    connectOrCreate?: deliveriesCreateOrConnectWithoutDelivery_timelineInput
    upsert?: deliveriesUpsertWithoutDelivery_timelineInput
    disconnect?: deliveriesWhereInput | boolean
    delete?: deliveriesWhereInput | boolean
    connect?: deliveriesWhereUniqueInput
    update?: XOR<XOR<deliveriesUpdateToOneWithWhereWithoutDelivery_timelineInput, deliveriesUpdateWithoutDelivery_timelineInput>, deliveriesUncheckedUpdateWithoutDelivery_timelineInput>
  }

  export type usersCreateNestedOneWithoutDiscountsInput = {
    create?: XOR<usersCreateWithoutDiscountsInput, usersUncheckedCreateWithoutDiscountsInput>
    connectOrCreate?: usersCreateOrConnectWithoutDiscountsInput
    connect?: usersWhereUniqueInput
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type usersUpdateOneRequiredWithoutDiscountsNestedInput = {
    create?: XOR<usersCreateWithoutDiscountsInput, usersUncheckedCreateWithoutDiscountsInput>
    connectOrCreate?: usersCreateOrConnectWithoutDiscountsInput
    upsert?: usersUpsertWithoutDiscountsInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutDiscountsInput, usersUpdateWithoutDiscountsInput>, usersUncheckedUpdateWithoutDiscountsInput>
  }

  export type message_filesCreateNestedManyWithoutFilesInput = {
    create?: XOR<message_filesCreateWithoutFilesInput, message_filesUncheckedCreateWithoutFilesInput> | message_filesCreateWithoutFilesInput[] | message_filesUncheckedCreateWithoutFilesInput[]
    connectOrCreate?: message_filesCreateOrConnectWithoutFilesInput | message_filesCreateOrConnectWithoutFilesInput[]
    createMany?: message_filesCreateManyFilesInputEnvelope
    connect?: message_filesWhereUniqueInput | message_filesWhereUniqueInput[]
  }

  export type products_filesCreateNestedManyWithoutFilesInput = {
    create?: XOR<products_filesCreateWithoutFilesInput, products_filesUncheckedCreateWithoutFilesInput> | products_filesCreateWithoutFilesInput[] | products_filesUncheckedCreateWithoutFilesInput[]
    connectOrCreate?: products_filesCreateOrConnectWithoutFilesInput | products_filesCreateOrConnectWithoutFilesInput[]
    createMany?: products_filesCreateManyFilesInputEnvelope
    connect?: products_filesWhereUniqueInput | products_filesWhereUniqueInput[]
  }

  export type message_filesUncheckedCreateNestedManyWithoutFilesInput = {
    create?: XOR<message_filesCreateWithoutFilesInput, message_filesUncheckedCreateWithoutFilesInput> | message_filesCreateWithoutFilesInput[] | message_filesUncheckedCreateWithoutFilesInput[]
    connectOrCreate?: message_filesCreateOrConnectWithoutFilesInput | message_filesCreateOrConnectWithoutFilesInput[]
    createMany?: message_filesCreateManyFilesInputEnvelope
    connect?: message_filesWhereUniqueInput | message_filesWhereUniqueInput[]
  }

  export type products_filesUncheckedCreateNestedManyWithoutFilesInput = {
    create?: XOR<products_filesCreateWithoutFilesInput, products_filesUncheckedCreateWithoutFilesInput> | products_filesCreateWithoutFilesInput[] | products_filesUncheckedCreateWithoutFilesInput[]
    connectOrCreate?: products_filesCreateOrConnectWithoutFilesInput | products_filesCreateOrConnectWithoutFilesInput[]
    createMany?: products_filesCreateManyFilesInputEnvelope
    connect?: products_filesWhereUniqueInput | products_filesWhereUniqueInput[]
  }

  export type message_filesUpdateManyWithoutFilesNestedInput = {
    create?: XOR<message_filesCreateWithoutFilesInput, message_filesUncheckedCreateWithoutFilesInput> | message_filesCreateWithoutFilesInput[] | message_filesUncheckedCreateWithoutFilesInput[]
    connectOrCreate?: message_filesCreateOrConnectWithoutFilesInput | message_filesCreateOrConnectWithoutFilesInput[]
    upsert?: message_filesUpsertWithWhereUniqueWithoutFilesInput | message_filesUpsertWithWhereUniqueWithoutFilesInput[]
    createMany?: message_filesCreateManyFilesInputEnvelope
    set?: message_filesWhereUniqueInput | message_filesWhereUniqueInput[]
    disconnect?: message_filesWhereUniqueInput | message_filesWhereUniqueInput[]
    delete?: message_filesWhereUniqueInput | message_filesWhereUniqueInput[]
    connect?: message_filesWhereUniqueInput | message_filesWhereUniqueInput[]
    update?: message_filesUpdateWithWhereUniqueWithoutFilesInput | message_filesUpdateWithWhereUniqueWithoutFilesInput[]
    updateMany?: message_filesUpdateManyWithWhereWithoutFilesInput | message_filesUpdateManyWithWhereWithoutFilesInput[]
    deleteMany?: message_filesScalarWhereInput | message_filesScalarWhereInput[]
  }

  export type products_filesUpdateManyWithoutFilesNestedInput = {
    create?: XOR<products_filesCreateWithoutFilesInput, products_filesUncheckedCreateWithoutFilesInput> | products_filesCreateWithoutFilesInput[] | products_filesUncheckedCreateWithoutFilesInput[]
    connectOrCreate?: products_filesCreateOrConnectWithoutFilesInput | products_filesCreateOrConnectWithoutFilesInput[]
    upsert?: products_filesUpsertWithWhereUniqueWithoutFilesInput | products_filesUpsertWithWhereUniqueWithoutFilesInput[]
    createMany?: products_filesCreateManyFilesInputEnvelope
    set?: products_filesWhereUniqueInput | products_filesWhereUniqueInput[]
    disconnect?: products_filesWhereUniqueInput | products_filesWhereUniqueInput[]
    delete?: products_filesWhereUniqueInput | products_filesWhereUniqueInput[]
    connect?: products_filesWhereUniqueInput | products_filesWhereUniqueInput[]
    update?: products_filesUpdateWithWhereUniqueWithoutFilesInput | products_filesUpdateWithWhereUniqueWithoutFilesInput[]
    updateMany?: products_filesUpdateManyWithWhereWithoutFilesInput | products_filesUpdateManyWithWhereWithoutFilesInput[]
    deleteMany?: products_filesScalarWhereInput | products_filesScalarWhereInput[]
  }

  export type message_filesUncheckedUpdateManyWithoutFilesNestedInput = {
    create?: XOR<message_filesCreateWithoutFilesInput, message_filesUncheckedCreateWithoutFilesInput> | message_filesCreateWithoutFilesInput[] | message_filesUncheckedCreateWithoutFilesInput[]
    connectOrCreate?: message_filesCreateOrConnectWithoutFilesInput | message_filesCreateOrConnectWithoutFilesInput[]
    upsert?: message_filesUpsertWithWhereUniqueWithoutFilesInput | message_filesUpsertWithWhereUniqueWithoutFilesInput[]
    createMany?: message_filesCreateManyFilesInputEnvelope
    set?: message_filesWhereUniqueInput | message_filesWhereUniqueInput[]
    disconnect?: message_filesWhereUniqueInput | message_filesWhereUniqueInput[]
    delete?: message_filesWhereUniqueInput | message_filesWhereUniqueInput[]
    connect?: message_filesWhereUniqueInput | message_filesWhereUniqueInput[]
    update?: message_filesUpdateWithWhereUniqueWithoutFilesInput | message_filesUpdateWithWhereUniqueWithoutFilesInput[]
    updateMany?: message_filesUpdateManyWithWhereWithoutFilesInput | message_filesUpdateManyWithWhereWithoutFilesInput[]
    deleteMany?: message_filesScalarWhereInput | message_filesScalarWhereInput[]
  }

  export type products_filesUncheckedUpdateManyWithoutFilesNestedInput = {
    create?: XOR<products_filesCreateWithoutFilesInput, products_filesUncheckedCreateWithoutFilesInput> | products_filesCreateWithoutFilesInput[] | products_filesUncheckedCreateWithoutFilesInput[]
    connectOrCreate?: products_filesCreateOrConnectWithoutFilesInput | products_filesCreateOrConnectWithoutFilesInput[]
    upsert?: products_filesUpsertWithWhereUniqueWithoutFilesInput | products_filesUpsertWithWhereUniqueWithoutFilesInput[]
    createMany?: products_filesCreateManyFilesInputEnvelope
    set?: products_filesWhereUniqueInput | products_filesWhereUniqueInput[]
    disconnect?: products_filesWhereUniqueInput | products_filesWhereUniqueInput[]
    delete?: products_filesWhereUniqueInput | products_filesWhereUniqueInput[]
    connect?: products_filesWhereUniqueInput | products_filesWhereUniqueInput[]
    update?: products_filesUpdateWithWhereUniqueWithoutFilesInput | products_filesUpdateWithWhereUniqueWithoutFilesInput[]
    updateMany?: products_filesUpdateManyWithWhereWithoutFilesInput | products_filesUpdateManyWithWhereWithoutFilesInput[]
    deleteMany?: products_filesScalarWhereInput | products_filesScalarWhereInput[]
  }

  export type filesCreateNestedOneWithoutMessage_filesInput = {
    create?: XOR<filesCreateWithoutMessage_filesInput, filesUncheckedCreateWithoutMessage_filesInput>
    connectOrCreate?: filesCreateOrConnectWithoutMessage_filesInput
    connect?: filesWhereUniqueInput
  }

  export type messagesCreateNestedOneWithoutMessage_filesInput = {
    create?: XOR<messagesCreateWithoutMessage_filesInput, messagesUncheckedCreateWithoutMessage_filesInput>
    connectOrCreate?: messagesCreateOrConnectWithoutMessage_filesInput
    connect?: messagesWhereUniqueInput
  }

  export type filesUpdateOneRequiredWithoutMessage_filesNestedInput = {
    create?: XOR<filesCreateWithoutMessage_filesInput, filesUncheckedCreateWithoutMessage_filesInput>
    connectOrCreate?: filesCreateOrConnectWithoutMessage_filesInput
    upsert?: filesUpsertWithoutMessage_filesInput
    connect?: filesWhereUniqueInput
    update?: XOR<XOR<filesUpdateToOneWithWhereWithoutMessage_filesInput, filesUpdateWithoutMessage_filesInput>, filesUncheckedUpdateWithoutMessage_filesInput>
  }

  export type messagesUpdateOneRequiredWithoutMessage_filesNestedInput = {
    create?: XOR<messagesCreateWithoutMessage_filesInput, messagesUncheckedCreateWithoutMessage_filesInput>
    connectOrCreate?: messagesCreateOrConnectWithoutMessage_filesInput
    upsert?: messagesUpsertWithoutMessage_filesInput
    connect?: messagesWhereUniqueInput
    update?: XOR<XOR<messagesUpdateToOneWithWhereWithoutMessage_filesInput, messagesUpdateWithoutMessage_filesInput>, messagesUncheckedUpdateWithoutMessage_filesInput>
  }

  export type message_filesCreateNestedManyWithoutMessagesInput = {
    create?: XOR<message_filesCreateWithoutMessagesInput, message_filesUncheckedCreateWithoutMessagesInput> | message_filesCreateWithoutMessagesInput[] | message_filesUncheckedCreateWithoutMessagesInput[]
    connectOrCreate?: message_filesCreateOrConnectWithoutMessagesInput | message_filesCreateOrConnectWithoutMessagesInput[]
    createMany?: message_filesCreateManyMessagesInputEnvelope
    connect?: message_filesWhereUniqueInput | message_filesWhereUniqueInput[]
  }

  export type chat_panelsCreateNestedOneWithoutMessagesInput = {
    create?: XOR<chat_panelsCreateWithoutMessagesInput, chat_panelsUncheckedCreateWithoutMessagesInput>
    connectOrCreate?: chat_panelsCreateOrConnectWithoutMessagesInput
    connect?: chat_panelsWhereUniqueInput
  }

  export type messagesCreateNestedOneWithoutOther_messagesInput = {
    create?: XOR<messagesCreateWithoutOther_messagesInput, messagesUncheckedCreateWithoutOther_messagesInput>
    connectOrCreate?: messagesCreateOrConnectWithoutOther_messagesInput
    connect?: messagesWhereUniqueInput
  }

  export type messagesCreateNestedManyWithoutMessagesInput = {
    create?: XOR<messagesCreateWithoutMessagesInput, messagesUncheckedCreateWithoutMessagesInput> | messagesCreateWithoutMessagesInput[] | messagesUncheckedCreateWithoutMessagesInput[]
    connectOrCreate?: messagesCreateOrConnectWithoutMessagesInput | messagesCreateOrConnectWithoutMessagesInput[]
    createMany?: messagesCreateManyMessagesInputEnvelope
    connect?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
  }

  export type usersCreateNestedOneWithoutMessagesInput = {
    create?: XOR<usersCreateWithoutMessagesInput, usersUncheckedCreateWithoutMessagesInput>
    connectOrCreate?: usersCreateOrConnectWithoutMessagesInput
    connect?: usersWhereUniqueInput
  }

  export type message_filesUncheckedCreateNestedManyWithoutMessagesInput = {
    create?: XOR<message_filesCreateWithoutMessagesInput, message_filesUncheckedCreateWithoutMessagesInput> | message_filesCreateWithoutMessagesInput[] | message_filesUncheckedCreateWithoutMessagesInput[]
    connectOrCreate?: message_filesCreateOrConnectWithoutMessagesInput | message_filesCreateOrConnectWithoutMessagesInput[]
    createMany?: message_filesCreateManyMessagesInputEnvelope
    connect?: message_filesWhereUniqueInput | message_filesWhereUniqueInput[]
  }

  export type messagesUncheckedCreateNestedManyWithoutMessagesInput = {
    create?: XOR<messagesCreateWithoutMessagesInput, messagesUncheckedCreateWithoutMessagesInput> | messagesCreateWithoutMessagesInput[] | messagesUncheckedCreateWithoutMessagesInput[]
    connectOrCreate?: messagesCreateOrConnectWithoutMessagesInput | messagesCreateOrConnectWithoutMessagesInput[]
    createMany?: messagesCreateManyMessagesInputEnvelope
    connect?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
  }

  export type message_filesUpdateManyWithoutMessagesNestedInput = {
    create?: XOR<message_filesCreateWithoutMessagesInput, message_filesUncheckedCreateWithoutMessagesInput> | message_filesCreateWithoutMessagesInput[] | message_filesUncheckedCreateWithoutMessagesInput[]
    connectOrCreate?: message_filesCreateOrConnectWithoutMessagesInput | message_filesCreateOrConnectWithoutMessagesInput[]
    upsert?: message_filesUpsertWithWhereUniqueWithoutMessagesInput | message_filesUpsertWithWhereUniqueWithoutMessagesInput[]
    createMany?: message_filesCreateManyMessagesInputEnvelope
    set?: message_filesWhereUniqueInput | message_filesWhereUniqueInput[]
    disconnect?: message_filesWhereUniqueInput | message_filesWhereUniqueInput[]
    delete?: message_filesWhereUniqueInput | message_filesWhereUniqueInput[]
    connect?: message_filesWhereUniqueInput | message_filesWhereUniqueInput[]
    update?: message_filesUpdateWithWhereUniqueWithoutMessagesInput | message_filesUpdateWithWhereUniqueWithoutMessagesInput[]
    updateMany?: message_filesUpdateManyWithWhereWithoutMessagesInput | message_filesUpdateManyWithWhereWithoutMessagesInput[]
    deleteMany?: message_filesScalarWhereInput | message_filesScalarWhereInput[]
  }

  export type chat_panelsUpdateOneRequiredWithoutMessagesNestedInput = {
    create?: XOR<chat_panelsCreateWithoutMessagesInput, chat_panelsUncheckedCreateWithoutMessagesInput>
    connectOrCreate?: chat_panelsCreateOrConnectWithoutMessagesInput
    upsert?: chat_panelsUpsertWithoutMessagesInput
    connect?: chat_panelsWhereUniqueInput
    update?: XOR<XOR<chat_panelsUpdateToOneWithWhereWithoutMessagesInput, chat_panelsUpdateWithoutMessagesInput>, chat_panelsUncheckedUpdateWithoutMessagesInput>
  }

  export type messagesUpdateOneWithoutOther_messagesNestedInput = {
    create?: XOR<messagesCreateWithoutOther_messagesInput, messagesUncheckedCreateWithoutOther_messagesInput>
    connectOrCreate?: messagesCreateOrConnectWithoutOther_messagesInput
    upsert?: messagesUpsertWithoutOther_messagesInput
    disconnect?: messagesWhereInput | boolean
    delete?: messagesWhereInput | boolean
    connect?: messagesWhereUniqueInput
    update?: XOR<XOR<messagesUpdateToOneWithWhereWithoutOther_messagesInput, messagesUpdateWithoutOther_messagesInput>, messagesUncheckedUpdateWithoutOther_messagesInput>
  }

  export type messagesUpdateManyWithoutMessagesNestedInput = {
    create?: XOR<messagesCreateWithoutMessagesInput, messagesUncheckedCreateWithoutMessagesInput> | messagesCreateWithoutMessagesInput[] | messagesUncheckedCreateWithoutMessagesInput[]
    connectOrCreate?: messagesCreateOrConnectWithoutMessagesInput | messagesCreateOrConnectWithoutMessagesInput[]
    upsert?: messagesUpsertWithWhereUniqueWithoutMessagesInput | messagesUpsertWithWhereUniqueWithoutMessagesInput[]
    createMany?: messagesCreateManyMessagesInputEnvelope
    set?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    disconnect?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    delete?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    connect?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    update?: messagesUpdateWithWhereUniqueWithoutMessagesInput | messagesUpdateWithWhereUniqueWithoutMessagesInput[]
    updateMany?: messagesUpdateManyWithWhereWithoutMessagesInput | messagesUpdateManyWithWhereWithoutMessagesInput[]
    deleteMany?: messagesScalarWhereInput | messagesScalarWhereInput[]
  }

  export type usersUpdateOneWithoutMessagesNestedInput = {
    create?: XOR<usersCreateWithoutMessagesInput, usersUncheckedCreateWithoutMessagesInput>
    connectOrCreate?: usersCreateOrConnectWithoutMessagesInput
    upsert?: usersUpsertWithoutMessagesInput
    disconnect?: usersWhereInput | boolean
    delete?: usersWhereInput | boolean
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutMessagesInput, usersUpdateWithoutMessagesInput>, usersUncheckedUpdateWithoutMessagesInput>
  }

  export type message_filesUncheckedUpdateManyWithoutMessagesNestedInput = {
    create?: XOR<message_filesCreateWithoutMessagesInput, message_filesUncheckedCreateWithoutMessagesInput> | message_filesCreateWithoutMessagesInput[] | message_filesUncheckedCreateWithoutMessagesInput[]
    connectOrCreate?: message_filesCreateOrConnectWithoutMessagesInput | message_filesCreateOrConnectWithoutMessagesInput[]
    upsert?: message_filesUpsertWithWhereUniqueWithoutMessagesInput | message_filesUpsertWithWhereUniqueWithoutMessagesInput[]
    createMany?: message_filesCreateManyMessagesInputEnvelope
    set?: message_filesWhereUniqueInput | message_filesWhereUniqueInput[]
    disconnect?: message_filesWhereUniqueInput | message_filesWhereUniqueInput[]
    delete?: message_filesWhereUniqueInput | message_filesWhereUniqueInput[]
    connect?: message_filesWhereUniqueInput | message_filesWhereUniqueInput[]
    update?: message_filesUpdateWithWhereUniqueWithoutMessagesInput | message_filesUpdateWithWhereUniqueWithoutMessagesInput[]
    updateMany?: message_filesUpdateManyWithWhereWithoutMessagesInput | message_filesUpdateManyWithWhereWithoutMessagesInput[]
    deleteMany?: message_filesScalarWhereInput | message_filesScalarWhereInput[]
  }

  export type messagesUncheckedUpdateManyWithoutMessagesNestedInput = {
    create?: XOR<messagesCreateWithoutMessagesInput, messagesUncheckedCreateWithoutMessagesInput> | messagesCreateWithoutMessagesInput[] | messagesUncheckedCreateWithoutMessagesInput[]
    connectOrCreate?: messagesCreateOrConnectWithoutMessagesInput | messagesCreateOrConnectWithoutMessagesInput[]
    upsert?: messagesUpsertWithWhereUniqueWithoutMessagesInput | messagesUpsertWithWhereUniqueWithoutMessagesInput[]
    createMany?: messagesCreateManyMessagesInputEnvelope
    set?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    disconnect?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    delete?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    connect?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    update?: messagesUpdateWithWhereUniqueWithoutMessagesInput | messagesUpdateWithWhereUniqueWithoutMessagesInput[]
    updateMany?: messagesUpdateManyWithWhereWithoutMessagesInput | messagesUpdateManyWithWhereWithoutMessagesInput[]
    deleteMany?: messagesScalarWhereInput | messagesScalarWhereInput[]
  }

  export type usersCreateNestedOneWithoutNotificationsInput = {
    create?: XOR<usersCreateWithoutNotificationsInput, usersUncheckedCreateWithoutNotificationsInput>
    connectOrCreate?: usersCreateOrConnectWithoutNotificationsInput
    connect?: usersWhereUniqueInput
  }

  export type usersUpdateOneRequiredWithoutNotificationsNestedInput = {
    create?: XOR<usersCreateWithoutNotificationsInput, usersUncheckedCreateWithoutNotificationsInput>
    connectOrCreate?: usersCreateOrConnectWithoutNotificationsInput
    upsert?: usersUpsertWithoutNotificationsInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutNotificationsInput, usersUpdateWithoutNotificationsInput>, usersUncheckedUpdateWithoutNotificationsInput>
  }

  export type ordersCreateNestedOneWithoutOrder_detailsInput = {
    create?: XOR<ordersCreateWithoutOrder_detailsInput, ordersUncheckedCreateWithoutOrder_detailsInput>
    connectOrCreate?: ordersCreateOrConnectWithoutOrder_detailsInput
    connect?: ordersWhereUniqueInput
  }

  export type variant_productsCreateNestedOneWithoutOrder_detailsInput = {
    create?: XOR<variant_productsCreateWithoutOrder_detailsInput, variant_productsUncheckedCreateWithoutOrder_detailsInput>
    connectOrCreate?: variant_productsCreateOrConnectWithoutOrder_detailsInput
    connect?: variant_productsWhereUniqueInput
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type ordersUpdateOneRequiredWithoutOrder_detailsNestedInput = {
    create?: XOR<ordersCreateWithoutOrder_detailsInput, ordersUncheckedCreateWithoutOrder_detailsInput>
    connectOrCreate?: ordersCreateOrConnectWithoutOrder_detailsInput
    upsert?: ordersUpsertWithoutOrder_detailsInput
    connect?: ordersWhereUniqueInput
    update?: XOR<XOR<ordersUpdateToOneWithWhereWithoutOrder_detailsInput, ordersUpdateWithoutOrder_detailsInput>, ordersUncheckedUpdateWithoutOrder_detailsInput>
  }

  export type variant_productsUpdateOneRequiredWithoutOrder_detailsNestedInput = {
    create?: XOR<variant_productsCreateWithoutOrder_detailsInput, variant_productsUncheckedCreateWithoutOrder_detailsInput>
    connectOrCreate?: variant_productsCreateOrConnectWithoutOrder_detailsInput
    upsert?: variant_productsUpsertWithoutOrder_detailsInput
    connect?: variant_productsWhereUniqueInput
    update?: XOR<XOR<variant_productsUpdateToOneWithWhereWithoutOrder_detailsInput, variant_productsUpdateWithoutOrder_detailsInput>, variant_productsUncheckedUpdateWithoutOrder_detailsInput>
  }

  export type order_detailsCreateNestedManyWithoutOrdersInput = {
    create?: XOR<order_detailsCreateWithoutOrdersInput, order_detailsUncheckedCreateWithoutOrdersInput> | order_detailsCreateWithoutOrdersInput[] | order_detailsUncheckedCreateWithoutOrdersInput[]
    connectOrCreate?: order_detailsCreateOrConnectWithoutOrdersInput | order_detailsCreateOrConnectWithoutOrdersInput[]
    createMany?: order_detailsCreateManyOrdersInputEnvelope
    connect?: order_detailsWhereUniqueInput | order_detailsWhereUniqueInput[]
  }

  export type usersCreateNestedOneWithoutOrders_orders_retailer_idTousersInput = {
    create?: XOR<usersCreateWithoutOrders_orders_retailer_idTousersInput, usersUncheckedCreateWithoutOrders_orders_retailer_idTousersInput>
    connectOrCreate?: usersCreateOrConnectWithoutOrders_orders_retailer_idTousersInput
    connect?: usersWhereUniqueInput
  }

  export type directionCreateNestedOneWithoutOrdersInput = {
    create?: XOR<directionCreateWithoutOrdersInput, directionUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: directionCreateOrConnectWithoutOrdersInput
    connect?: directionWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutOrders_orders_wholesaler_idTousersInput = {
    create?: XOR<usersCreateWithoutOrders_orders_wholesaler_idTousersInput, usersUncheckedCreateWithoutOrders_orders_wholesaler_idTousersInput>
    connectOrCreate?: usersCreateOrConnectWithoutOrders_orders_wholesaler_idTousersInput
    connect?: usersWhereUniqueInput
  }

  export type order_detailsUncheckedCreateNestedManyWithoutOrdersInput = {
    create?: XOR<order_detailsCreateWithoutOrdersInput, order_detailsUncheckedCreateWithoutOrdersInput> | order_detailsCreateWithoutOrdersInput[] | order_detailsUncheckedCreateWithoutOrdersInput[]
    connectOrCreate?: order_detailsCreateOrConnectWithoutOrdersInput | order_detailsCreateOrConnectWithoutOrdersInput[]
    createMany?: order_detailsCreateManyOrdersInputEnvelope
    connect?: order_detailsWhereUniqueInput | order_detailsWhereUniqueInput[]
  }

  export type order_detailsUpdateManyWithoutOrdersNestedInput = {
    create?: XOR<order_detailsCreateWithoutOrdersInput, order_detailsUncheckedCreateWithoutOrdersInput> | order_detailsCreateWithoutOrdersInput[] | order_detailsUncheckedCreateWithoutOrdersInput[]
    connectOrCreate?: order_detailsCreateOrConnectWithoutOrdersInput | order_detailsCreateOrConnectWithoutOrdersInput[]
    upsert?: order_detailsUpsertWithWhereUniqueWithoutOrdersInput | order_detailsUpsertWithWhereUniqueWithoutOrdersInput[]
    createMany?: order_detailsCreateManyOrdersInputEnvelope
    set?: order_detailsWhereUniqueInput | order_detailsWhereUniqueInput[]
    disconnect?: order_detailsWhereUniqueInput | order_detailsWhereUniqueInput[]
    delete?: order_detailsWhereUniqueInput | order_detailsWhereUniqueInput[]
    connect?: order_detailsWhereUniqueInput | order_detailsWhereUniqueInput[]
    update?: order_detailsUpdateWithWhereUniqueWithoutOrdersInput | order_detailsUpdateWithWhereUniqueWithoutOrdersInput[]
    updateMany?: order_detailsUpdateManyWithWhereWithoutOrdersInput | order_detailsUpdateManyWithWhereWithoutOrdersInput[]
    deleteMany?: order_detailsScalarWhereInput | order_detailsScalarWhereInput[]
  }

  export type usersUpdateOneWithoutOrders_orders_retailer_idTousersNestedInput = {
    create?: XOR<usersCreateWithoutOrders_orders_retailer_idTousersInput, usersUncheckedCreateWithoutOrders_orders_retailer_idTousersInput>
    connectOrCreate?: usersCreateOrConnectWithoutOrders_orders_retailer_idTousersInput
    upsert?: usersUpsertWithoutOrders_orders_retailer_idTousersInput
    disconnect?: usersWhereInput | boolean
    delete?: usersWhereInput | boolean
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutOrders_orders_retailer_idTousersInput, usersUpdateWithoutOrders_orders_retailer_idTousersInput>, usersUncheckedUpdateWithoutOrders_orders_retailer_idTousersInput>
  }

  export type directionUpdateOneWithoutOrdersNestedInput = {
    create?: XOR<directionCreateWithoutOrdersInput, directionUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: directionCreateOrConnectWithoutOrdersInput
    upsert?: directionUpsertWithoutOrdersInput
    disconnect?: directionWhereInput | boolean
    delete?: directionWhereInput | boolean
    connect?: directionWhereUniqueInput
    update?: XOR<XOR<directionUpdateToOneWithWhereWithoutOrdersInput, directionUpdateWithoutOrdersInput>, directionUncheckedUpdateWithoutOrdersInput>
  }

  export type usersUpdateOneWithoutOrders_orders_wholesaler_idTousersNestedInput = {
    create?: XOR<usersCreateWithoutOrders_orders_wholesaler_idTousersInput, usersUncheckedCreateWithoutOrders_orders_wholesaler_idTousersInput>
    connectOrCreate?: usersCreateOrConnectWithoutOrders_orders_wholesaler_idTousersInput
    upsert?: usersUpsertWithoutOrders_orders_wholesaler_idTousersInput
    disconnect?: usersWhereInput | boolean
    delete?: usersWhereInput | boolean
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutOrders_orders_wholesaler_idTousersInput, usersUpdateWithoutOrders_orders_wholesaler_idTousersInput>, usersUncheckedUpdateWithoutOrders_orders_wholesaler_idTousersInput>
  }

  export type order_detailsUncheckedUpdateManyWithoutOrdersNestedInput = {
    create?: XOR<order_detailsCreateWithoutOrdersInput, order_detailsUncheckedCreateWithoutOrdersInput> | order_detailsCreateWithoutOrdersInput[] | order_detailsUncheckedCreateWithoutOrdersInput[]
    connectOrCreate?: order_detailsCreateOrConnectWithoutOrdersInput | order_detailsCreateOrConnectWithoutOrdersInput[]
    upsert?: order_detailsUpsertWithWhereUniqueWithoutOrdersInput | order_detailsUpsertWithWhereUniqueWithoutOrdersInput[]
    createMany?: order_detailsCreateManyOrdersInputEnvelope
    set?: order_detailsWhereUniqueInput | order_detailsWhereUniqueInput[]
    disconnect?: order_detailsWhereUniqueInput | order_detailsWhereUniqueInput[]
    delete?: order_detailsWhereUniqueInput | order_detailsWhereUniqueInput[]
    connect?: order_detailsWhereUniqueInput | order_detailsWhereUniqueInput[]
    update?: order_detailsUpdateWithWhereUniqueWithoutOrdersInput | order_detailsUpdateWithWhereUniqueWithoutOrdersInput[]
    updateMany?: order_detailsUpdateManyWithWhereWithoutOrdersInput | order_detailsUpdateManyWithWhereWithoutOrdersInput[]
    deleteMany?: order_detailsScalarWhereInput | order_detailsScalarWhereInput[]
  }

  export type categoriesCreateNestedOneWithoutProductsInput = {
    create?: XOR<categoriesCreateWithoutProductsInput, categoriesUncheckedCreateWithoutProductsInput>
    connectOrCreate?: categoriesCreateOrConnectWithoutProductsInput
    connect?: categoriesWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutProductsInput = {
    create?: XOR<usersCreateWithoutProductsInput, usersUncheckedCreateWithoutProductsInput>
    connectOrCreate?: usersCreateOrConnectWithoutProductsInput
    connect?: usersWhereUniqueInput
  }

  export type products_filesCreateNestedManyWithoutProductsInput = {
    create?: XOR<products_filesCreateWithoutProductsInput, products_filesUncheckedCreateWithoutProductsInput> | products_filesCreateWithoutProductsInput[] | products_filesUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: products_filesCreateOrConnectWithoutProductsInput | products_filesCreateOrConnectWithoutProductsInput[]
    createMany?: products_filesCreateManyProductsInputEnvelope
    connect?: products_filesWhereUniqueInput | products_filesWhereUniqueInput[]
  }

  export type variant_productsCreateNestedManyWithoutProductsInput = {
    create?: XOR<variant_productsCreateWithoutProductsInput, variant_productsUncheckedCreateWithoutProductsInput> | variant_productsCreateWithoutProductsInput[] | variant_productsUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: variant_productsCreateOrConnectWithoutProductsInput | variant_productsCreateOrConnectWithoutProductsInput[]
    createMany?: variant_productsCreateManyProductsInputEnvelope
    connect?: variant_productsWhereUniqueInput | variant_productsWhereUniqueInput[]
  }

  export type products_filesUncheckedCreateNestedManyWithoutProductsInput = {
    create?: XOR<products_filesCreateWithoutProductsInput, products_filesUncheckedCreateWithoutProductsInput> | products_filesCreateWithoutProductsInput[] | products_filesUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: products_filesCreateOrConnectWithoutProductsInput | products_filesCreateOrConnectWithoutProductsInput[]
    createMany?: products_filesCreateManyProductsInputEnvelope
    connect?: products_filesWhereUniqueInput | products_filesWhereUniqueInput[]
  }

  export type variant_productsUncheckedCreateNestedManyWithoutProductsInput = {
    create?: XOR<variant_productsCreateWithoutProductsInput, variant_productsUncheckedCreateWithoutProductsInput> | variant_productsCreateWithoutProductsInput[] | variant_productsUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: variant_productsCreateOrConnectWithoutProductsInput | variant_productsCreateOrConnectWithoutProductsInput[]
    createMany?: variant_productsCreateManyProductsInputEnvelope
    connect?: variant_productsWhereUniqueInput | variant_productsWhereUniqueInput[]
  }

  export type categoriesUpdateOneRequiredWithoutProductsNestedInput = {
    create?: XOR<categoriesCreateWithoutProductsInput, categoriesUncheckedCreateWithoutProductsInput>
    connectOrCreate?: categoriesCreateOrConnectWithoutProductsInput
    upsert?: categoriesUpsertWithoutProductsInput
    connect?: categoriesWhereUniqueInput
    update?: XOR<XOR<categoriesUpdateToOneWithWhereWithoutProductsInput, categoriesUpdateWithoutProductsInput>, categoriesUncheckedUpdateWithoutProductsInput>
  }

  export type usersUpdateOneRequiredWithoutProductsNestedInput = {
    create?: XOR<usersCreateWithoutProductsInput, usersUncheckedCreateWithoutProductsInput>
    connectOrCreate?: usersCreateOrConnectWithoutProductsInput
    upsert?: usersUpsertWithoutProductsInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutProductsInput, usersUpdateWithoutProductsInput>, usersUncheckedUpdateWithoutProductsInput>
  }

  export type products_filesUpdateManyWithoutProductsNestedInput = {
    create?: XOR<products_filesCreateWithoutProductsInput, products_filesUncheckedCreateWithoutProductsInput> | products_filesCreateWithoutProductsInput[] | products_filesUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: products_filesCreateOrConnectWithoutProductsInput | products_filesCreateOrConnectWithoutProductsInput[]
    upsert?: products_filesUpsertWithWhereUniqueWithoutProductsInput | products_filesUpsertWithWhereUniqueWithoutProductsInput[]
    createMany?: products_filesCreateManyProductsInputEnvelope
    set?: products_filesWhereUniqueInput | products_filesWhereUniqueInput[]
    disconnect?: products_filesWhereUniqueInput | products_filesWhereUniqueInput[]
    delete?: products_filesWhereUniqueInput | products_filesWhereUniqueInput[]
    connect?: products_filesWhereUniqueInput | products_filesWhereUniqueInput[]
    update?: products_filesUpdateWithWhereUniqueWithoutProductsInput | products_filesUpdateWithWhereUniqueWithoutProductsInput[]
    updateMany?: products_filesUpdateManyWithWhereWithoutProductsInput | products_filesUpdateManyWithWhereWithoutProductsInput[]
    deleteMany?: products_filesScalarWhereInput | products_filesScalarWhereInput[]
  }

  export type variant_productsUpdateManyWithoutProductsNestedInput = {
    create?: XOR<variant_productsCreateWithoutProductsInput, variant_productsUncheckedCreateWithoutProductsInput> | variant_productsCreateWithoutProductsInput[] | variant_productsUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: variant_productsCreateOrConnectWithoutProductsInput | variant_productsCreateOrConnectWithoutProductsInput[]
    upsert?: variant_productsUpsertWithWhereUniqueWithoutProductsInput | variant_productsUpsertWithWhereUniqueWithoutProductsInput[]
    createMany?: variant_productsCreateManyProductsInputEnvelope
    set?: variant_productsWhereUniqueInput | variant_productsWhereUniqueInput[]
    disconnect?: variant_productsWhereUniqueInput | variant_productsWhereUniqueInput[]
    delete?: variant_productsWhereUniqueInput | variant_productsWhereUniqueInput[]
    connect?: variant_productsWhereUniqueInput | variant_productsWhereUniqueInput[]
    update?: variant_productsUpdateWithWhereUniqueWithoutProductsInput | variant_productsUpdateWithWhereUniqueWithoutProductsInput[]
    updateMany?: variant_productsUpdateManyWithWhereWithoutProductsInput | variant_productsUpdateManyWithWhereWithoutProductsInput[]
    deleteMany?: variant_productsScalarWhereInput | variant_productsScalarWhereInput[]
  }

  export type products_filesUncheckedUpdateManyWithoutProductsNestedInput = {
    create?: XOR<products_filesCreateWithoutProductsInput, products_filesUncheckedCreateWithoutProductsInput> | products_filesCreateWithoutProductsInput[] | products_filesUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: products_filesCreateOrConnectWithoutProductsInput | products_filesCreateOrConnectWithoutProductsInput[]
    upsert?: products_filesUpsertWithWhereUniqueWithoutProductsInput | products_filesUpsertWithWhereUniqueWithoutProductsInput[]
    createMany?: products_filesCreateManyProductsInputEnvelope
    set?: products_filesWhereUniqueInput | products_filesWhereUniqueInput[]
    disconnect?: products_filesWhereUniqueInput | products_filesWhereUniqueInput[]
    delete?: products_filesWhereUniqueInput | products_filesWhereUniqueInput[]
    connect?: products_filesWhereUniqueInput | products_filesWhereUniqueInput[]
    update?: products_filesUpdateWithWhereUniqueWithoutProductsInput | products_filesUpdateWithWhereUniqueWithoutProductsInput[]
    updateMany?: products_filesUpdateManyWithWhereWithoutProductsInput | products_filesUpdateManyWithWhereWithoutProductsInput[]
    deleteMany?: products_filesScalarWhereInput | products_filesScalarWhereInput[]
  }

  export type variant_productsUncheckedUpdateManyWithoutProductsNestedInput = {
    create?: XOR<variant_productsCreateWithoutProductsInput, variant_productsUncheckedCreateWithoutProductsInput> | variant_productsCreateWithoutProductsInput[] | variant_productsUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: variant_productsCreateOrConnectWithoutProductsInput | variant_productsCreateOrConnectWithoutProductsInput[]
    upsert?: variant_productsUpsertWithWhereUniqueWithoutProductsInput | variant_productsUpsertWithWhereUniqueWithoutProductsInput[]
    createMany?: variant_productsCreateManyProductsInputEnvelope
    set?: variant_productsWhereUniqueInput | variant_productsWhereUniqueInput[]
    disconnect?: variant_productsWhereUniqueInput | variant_productsWhereUniqueInput[]
    delete?: variant_productsWhereUniqueInput | variant_productsWhereUniqueInput[]
    connect?: variant_productsWhereUniqueInput | variant_productsWhereUniqueInput[]
    update?: variant_productsUpdateWithWhereUniqueWithoutProductsInput | variant_productsUpdateWithWhereUniqueWithoutProductsInput[]
    updateMany?: variant_productsUpdateManyWithWhereWithoutProductsInput | variant_productsUpdateManyWithWhereWithoutProductsInput[]
    deleteMany?: variant_productsScalarWhereInput | variant_productsScalarWhereInput[]
  }

  export type filesCreateNestedOneWithoutProducts_filesInput = {
    create?: XOR<filesCreateWithoutProducts_filesInput, filesUncheckedCreateWithoutProducts_filesInput>
    connectOrCreate?: filesCreateOrConnectWithoutProducts_filesInput
    connect?: filesWhereUniqueInput
  }

  export type productsCreateNestedOneWithoutProducts_filesInput = {
    create?: XOR<productsCreateWithoutProducts_filesInput, productsUncheckedCreateWithoutProducts_filesInput>
    connectOrCreate?: productsCreateOrConnectWithoutProducts_filesInput
    connect?: productsWhereUniqueInput
  }

  export type filesUpdateOneRequiredWithoutProducts_filesNestedInput = {
    create?: XOR<filesCreateWithoutProducts_filesInput, filesUncheckedCreateWithoutProducts_filesInput>
    connectOrCreate?: filesCreateOrConnectWithoutProducts_filesInput
    upsert?: filesUpsertWithoutProducts_filesInput
    connect?: filesWhereUniqueInput
    update?: XOR<XOR<filesUpdateToOneWithWhereWithoutProducts_filesInput, filesUpdateWithoutProducts_filesInput>, filesUncheckedUpdateWithoutProducts_filesInput>
  }

  export type productsUpdateOneRequiredWithoutProducts_filesNestedInput = {
    create?: XOR<productsCreateWithoutProducts_filesInput, productsUncheckedCreateWithoutProducts_filesInput>
    connectOrCreate?: productsCreateOrConnectWithoutProducts_filesInput
    upsert?: productsUpsertWithoutProducts_filesInput
    connect?: productsWhereUniqueInput
    update?: XOR<XOR<productsUpdateToOneWithWhereWithoutProducts_filesInput, productsUpdateWithoutProducts_filesInput>, productsUncheckedUpdateWithoutProducts_filesInput>
  }

  export type usersCreateNestedOneWithoutUser_sessionsInput = {
    create?: XOR<usersCreateWithoutUser_sessionsInput, usersUncheckedCreateWithoutUser_sessionsInput>
    connectOrCreate?: usersCreateOrConnectWithoutUser_sessionsInput
    connect?: usersWhereUniqueInput
  }

  export type usersUpdateOneRequiredWithoutUser_sessionsNestedInput = {
    create?: XOR<usersCreateWithoutUser_sessionsInput, usersUncheckedCreateWithoutUser_sessionsInput>
    connectOrCreate?: usersCreateOrConnectWithoutUser_sessionsInput
    upsert?: usersUpsertWithoutUser_sessionsInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutUser_sessionsInput, usersUpdateWithoutUser_sessionsInput>, usersUncheckedUpdateWithoutUser_sessionsInput>
  }

  export type cartsCreateNestedManyWithoutUsersInput = {
    create?: XOR<cartsCreateWithoutUsersInput, cartsUncheckedCreateWithoutUsersInput> | cartsCreateWithoutUsersInput[] | cartsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: cartsCreateOrConnectWithoutUsersInput | cartsCreateOrConnectWithoutUsersInput[]
    createMany?: cartsCreateManyUsersInputEnvelope
    connect?: cartsWhereUniqueInput | cartsWhereUniqueInput[]
  }

  export type categoriesCreateNestedManyWithoutUsersInput = {
    create?: XOR<categoriesCreateWithoutUsersInput, categoriesUncheckedCreateWithoutUsersInput> | categoriesCreateWithoutUsersInput[] | categoriesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: categoriesCreateOrConnectWithoutUsersInput | categoriesCreateOrConnectWithoutUsersInput[]
    createMany?: categoriesCreateManyUsersInputEnvelope
    connect?: categoriesWhereUniqueInput | categoriesWhereUniqueInput[]
  }

  export type chat_participantsCreateNestedManyWithoutUsersInput = {
    create?: XOR<chat_participantsCreateWithoutUsersInput, chat_participantsUncheckedCreateWithoutUsersInput> | chat_participantsCreateWithoutUsersInput[] | chat_participantsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: chat_participantsCreateOrConnectWithoutUsersInput | chat_participantsCreateOrConnectWithoutUsersInput[]
    createMany?: chat_participantsCreateManyUsersInputEnvelope
    connect?: chat_participantsWhereUniqueInput | chat_participantsWhereUniqueInput[]
  }

  export type configurationsCreateNestedManyWithoutUsersInput = {
    create?: XOR<configurationsCreateWithoutUsersInput, configurationsUncheckedCreateWithoutUsersInput> | configurationsCreateWithoutUsersInput[] | configurationsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: configurationsCreateOrConnectWithoutUsersInput | configurationsCreateOrConnectWithoutUsersInput[]
    createMany?: configurationsCreateManyUsersInputEnvelope
    connect?: configurationsWhereUniqueInput | configurationsWhereUniqueInput[]
  }

  export type deliveriesCreateNestedManyWithoutUsersInput = {
    create?: XOR<deliveriesCreateWithoutUsersInput, deliveriesUncheckedCreateWithoutUsersInput> | deliveriesCreateWithoutUsersInput[] | deliveriesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: deliveriesCreateOrConnectWithoutUsersInput | deliveriesCreateOrConnectWithoutUsersInput[]
    createMany?: deliveriesCreateManyUsersInputEnvelope
    connect?: deliveriesWhereUniqueInput | deliveriesWhereUniqueInput[]
  }

  export type directionCreateNestedManyWithoutUsersInput = {
    create?: XOR<directionCreateWithoutUsersInput, directionUncheckedCreateWithoutUsersInput> | directionCreateWithoutUsersInput[] | directionUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: directionCreateOrConnectWithoutUsersInput | directionCreateOrConnectWithoutUsersInput[]
    createMany?: directionCreateManyUsersInputEnvelope
    connect?: directionWhereUniqueInput | directionWhereUniqueInput[]
  }

  export type discountsCreateNestedManyWithoutUsersInput = {
    create?: XOR<discountsCreateWithoutUsersInput, discountsUncheckedCreateWithoutUsersInput> | discountsCreateWithoutUsersInput[] | discountsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: discountsCreateOrConnectWithoutUsersInput | discountsCreateOrConnectWithoutUsersInput[]
    createMany?: discountsCreateManyUsersInputEnvelope
    connect?: discountsWhereUniqueInput | discountsWhereUniqueInput[]
  }

  export type messagesCreateNestedManyWithoutUsersInput = {
    create?: XOR<messagesCreateWithoutUsersInput, messagesUncheckedCreateWithoutUsersInput> | messagesCreateWithoutUsersInput[] | messagesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: messagesCreateOrConnectWithoutUsersInput | messagesCreateOrConnectWithoutUsersInput[]
    createMany?: messagesCreateManyUsersInputEnvelope
    connect?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
  }

  export type notificationsCreateNestedManyWithoutUsersInput = {
    create?: XOR<notificationsCreateWithoutUsersInput, notificationsUncheckedCreateWithoutUsersInput> | notificationsCreateWithoutUsersInput[] | notificationsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: notificationsCreateOrConnectWithoutUsersInput | notificationsCreateOrConnectWithoutUsersInput[]
    createMany?: notificationsCreateManyUsersInputEnvelope
    connect?: notificationsWhereUniqueInput | notificationsWhereUniqueInput[]
  }

  export type ordersCreateNestedManyWithoutUsers_orders_retailer_idTousersInput = {
    create?: XOR<ordersCreateWithoutUsers_orders_retailer_idTousersInput, ordersUncheckedCreateWithoutUsers_orders_retailer_idTousersInput> | ordersCreateWithoutUsers_orders_retailer_idTousersInput[] | ordersUncheckedCreateWithoutUsers_orders_retailer_idTousersInput[]
    connectOrCreate?: ordersCreateOrConnectWithoutUsers_orders_retailer_idTousersInput | ordersCreateOrConnectWithoutUsers_orders_retailer_idTousersInput[]
    createMany?: ordersCreateManyUsers_orders_retailer_idTousersInputEnvelope
    connect?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
  }

  export type ordersCreateNestedManyWithoutUsers_orders_wholesaler_idTousersInput = {
    create?: XOR<ordersCreateWithoutUsers_orders_wholesaler_idTousersInput, ordersUncheckedCreateWithoutUsers_orders_wholesaler_idTousersInput> | ordersCreateWithoutUsers_orders_wholesaler_idTousersInput[] | ordersUncheckedCreateWithoutUsers_orders_wholesaler_idTousersInput[]
    connectOrCreate?: ordersCreateOrConnectWithoutUsers_orders_wholesaler_idTousersInput | ordersCreateOrConnectWithoutUsers_orders_wholesaler_idTousersInput[]
    createMany?: ordersCreateManyUsers_orders_wholesaler_idTousersInputEnvelope
    connect?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
  }

  export type productsCreateNestedManyWithoutUsersInput = {
    create?: XOR<productsCreateWithoutUsersInput, productsUncheckedCreateWithoutUsersInput> | productsCreateWithoutUsersInput[] | productsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: productsCreateOrConnectWithoutUsersInput | productsCreateOrConnectWithoutUsersInput[]
    createMany?: productsCreateManyUsersInputEnvelope
    connect?: productsWhereUniqueInput | productsWhereUniqueInput[]
  }

  export type user_sessionsCreateNestedManyWithoutUsersInput = {
    create?: XOR<user_sessionsCreateWithoutUsersInput, user_sessionsUncheckedCreateWithoutUsersInput> | user_sessionsCreateWithoutUsersInput[] | user_sessionsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: user_sessionsCreateOrConnectWithoutUsersInput | user_sessionsCreateOrConnectWithoutUsersInput[]
    createMany?: user_sessionsCreateManyUsersInputEnvelope
    connect?: user_sessionsWhereUniqueInput | user_sessionsWhereUniqueInput[]
  }

  export type cartsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<cartsCreateWithoutUsersInput, cartsUncheckedCreateWithoutUsersInput> | cartsCreateWithoutUsersInput[] | cartsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: cartsCreateOrConnectWithoutUsersInput | cartsCreateOrConnectWithoutUsersInput[]
    createMany?: cartsCreateManyUsersInputEnvelope
    connect?: cartsWhereUniqueInput | cartsWhereUniqueInput[]
  }

  export type categoriesUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<categoriesCreateWithoutUsersInput, categoriesUncheckedCreateWithoutUsersInput> | categoriesCreateWithoutUsersInput[] | categoriesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: categoriesCreateOrConnectWithoutUsersInput | categoriesCreateOrConnectWithoutUsersInput[]
    createMany?: categoriesCreateManyUsersInputEnvelope
    connect?: categoriesWhereUniqueInput | categoriesWhereUniqueInput[]
  }

  export type chat_participantsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<chat_participantsCreateWithoutUsersInput, chat_participantsUncheckedCreateWithoutUsersInput> | chat_participantsCreateWithoutUsersInput[] | chat_participantsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: chat_participantsCreateOrConnectWithoutUsersInput | chat_participantsCreateOrConnectWithoutUsersInput[]
    createMany?: chat_participantsCreateManyUsersInputEnvelope
    connect?: chat_participantsWhereUniqueInput | chat_participantsWhereUniqueInput[]
  }

  export type configurationsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<configurationsCreateWithoutUsersInput, configurationsUncheckedCreateWithoutUsersInput> | configurationsCreateWithoutUsersInput[] | configurationsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: configurationsCreateOrConnectWithoutUsersInput | configurationsCreateOrConnectWithoutUsersInput[]
    createMany?: configurationsCreateManyUsersInputEnvelope
    connect?: configurationsWhereUniqueInput | configurationsWhereUniqueInput[]
  }

  export type deliveriesUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<deliveriesCreateWithoutUsersInput, deliveriesUncheckedCreateWithoutUsersInput> | deliveriesCreateWithoutUsersInput[] | deliveriesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: deliveriesCreateOrConnectWithoutUsersInput | deliveriesCreateOrConnectWithoutUsersInput[]
    createMany?: deliveriesCreateManyUsersInputEnvelope
    connect?: deliveriesWhereUniqueInput | deliveriesWhereUniqueInput[]
  }

  export type directionUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<directionCreateWithoutUsersInput, directionUncheckedCreateWithoutUsersInput> | directionCreateWithoutUsersInput[] | directionUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: directionCreateOrConnectWithoutUsersInput | directionCreateOrConnectWithoutUsersInput[]
    createMany?: directionCreateManyUsersInputEnvelope
    connect?: directionWhereUniqueInput | directionWhereUniqueInput[]
  }

  export type discountsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<discountsCreateWithoutUsersInput, discountsUncheckedCreateWithoutUsersInput> | discountsCreateWithoutUsersInput[] | discountsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: discountsCreateOrConnectWithoutUsersInput | discountsCreateOrConnectWithoutUsersInput[]
    createMany?: discountsCreateManyUsersInputEnvelope
    connect?: discountsWhereUniqueInput | discountsWhereUniqueInput[]
  }

  export type messagesUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<messagesCreateWithoutUsersInput, messagesUncheckedCreateWithoutUsersInput> | messagesCreateWithoutUsersInput[] | messagesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: messagesCreateOrConnectWithoutUsersInput | messagesCreateOrConnectWithoutUsersInput[]
    createMany?: messagesCreateManyUsersInputEnvelope
    connect?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
  }

  export type notificationsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<notificationsCreateWithoutUsersInput, notificationsUncheckedCreateWithoutUsersInput> | notificationsCreateWithoutUsersInput[] | notificationsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: notificationsCreateOrConnectWithoutUsersInput | notificationsCreateOrConnectWithoutUsersInput[]
    createMany?: notificationsCreateManyUsersInputEnvelope
    connect?: notificationsWhereUniqueInput | notificationsWhereUniqueInput[]
  }

  export type ordersUncheckedCreateNestedManyWithoutUsers_orders_retailer_idTousersInput = {
    create?: XOR<ordersCreateWithoutUsers_orders_retailer_idTousersInput, ordersUncheckedCreateWithoutUsers_orders_retailer_idTousersInput> | ordersCreateWithoutUsers_orders_retailer_idTousersInput[] | ordersUncheckedCreateWithoutUsers_orders_retailer_idTousersInput[]
    connectOrCreate?: ordersCreateOrConnectWithoutUsers_orders_retailer_idTousersInput | ordersCreateOrConnectWithoutUsers_orders_retailer_idTousersInput[]
    createMany?: ordersCreateManyUsers_orders_retailer_idTousersInputEnvelope
    connect?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
  }

  export type ordersUncheckedCreateNestedManyWithoutUsers_orders_wholesaler_idTousersInput = {
    create?: XOR<ordersCreateWithoutUsers_orders_wholesaler_idTousersInput, ordersUncheckedCreateWithoutUsers_orders_wholesaler_idTousersInput> | ordersCreateWithoutUsers_orders_wholesaler_idTousersInput[] | ordersUncheckedCreateWithoutUsers_orders_wholesaler_idTousersInput[]
    connectOrCreate?: ordersCreateOrConnectWithoutUsers_orders_wholesaler_idTousersInput | ordersCreateOrConnectWithoutUsers_orders_wholesaler_idTousersInput[]
    createMany?: ordersCreateManyUsers_orders_wholesaler_idTousersInputEnvelope
    connect?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
  }

  export type productsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<productsCreateWithoutUsersInput, productsUncheckedCreateWithoutUsersInput> | productsCreateWithoutUsersInput[] | productsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: productsCreateOrConnectWithoutUsersInput | productsCreateOrConnectWithoutUsersInput[]
    createMany?: productsCreateManyUsersInputEnvelope
    connect?: productsWhereUniqueInput | productsWhereUniqueInput[]
  }

  export type user_sessionsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<user_sessionsCreateWithoutUsersInput, user_sessionsUncheckedCreateWithoutUsersInput> | user_sessionsCreateWithoutUsersInput[] | user_sessionsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: user_sessionsCreateOrConnectWithoutUsersInput | user_sessionsCreateOrConnectWithoutUsersInput[]
    createMany?: user_sessionsCreateManyUsersInputEnvelope
    connect?: user_sessionsWhereUniqueInput | user_sessionsWhereUniqueInput[]
  }

  export type EnumUserStatusFieldUpdateOperationsInput = {
    set?: $Enums.UserStatus
  }

  export type EnumUserRoleFieldUpdateOperationsInput = {
    set?: $Enums.UserRole
  }

  export type cartsUpdateManyWithoutUsersNestedInput = {
    create?: XOR<cartsCreateWithoutUsersInput, cartsUncheckedCreateWithoutUsersInput> | cartsCreateWithoutUsersInput[] | cartsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: cartsCreateOrConnectWithoutUsersInput | cartsCreateOrConnectWithoutUsersInput[]
    upsert?: cartsUpsertWithWhereUniqueWithoutUsersInput | cartsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: cartsCreateManyUsersInputEnvelope
    set?: cartsWhereUniqueInput | cartsWhereUniqueInput[]
    disconnect?: cartsWhereUniqueInput | cartsWhereUniqueInput[]
    delete?: cartsWhereUniqueInput | cartsWhereUniqueInput[]
    connect?: cartsWhereUniqueInput | cartsWhereUniqueInput[]
    update?: cartsUpdateWithWhereUniqueWithoutUsersInput | cartsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: cartsUpdateManyWithWhereWithoutUsersInput | cartsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: cartsScalarWhereInput | cartsScalarWhereInput[]
  }

  export type categoriesUpdateManyWithoutUsersNestedInput = {
    create?: XOR<categoriesCreateWithoutUsersInput, categoriesUncheckedCreateWithoutUsersInput> | categoriesCreateWithoutUsersInput[] | categoriesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: categoriesCreateOrConnectWithoutUsersInput | categoriesCreateOrConnectWithoutUsersInput[]
    upsert?: categoriesUpsertWithWhereUniqueWithoutUsersInput | categoriesUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: categoriesCreateManyUsersInputEnvelope
    set?: categoriesWhereUniqueInput | categoriesWhereUniqueInput[]
    disconnect?: categoriesWhereUniqueInput | categoriesWhereUniqueInput[]
    delete?: categoriesWhereUniqueInput | categoriesWhereUniqueInput[]
    connect?: categoriesWhereUniqueInput | categoriesWhereUniqueInput[]
    update?: categoriesUpdateWithWhereUniqueWithoutUsersInput | categoriesUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: categoriesUpdateManyWithWhereWithoutUsersInput | categoriesUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: categoriesScalarWhereInput | categoriesScalarWhereInput[]
  }

  export type chat_participantsUpdateManyWithoutUsersNestedInput = {
    create?: XOR<chat_participantsCreateWithoutUsersInput, chat_participantsUncheckedCreateWithoutUsersInput> | chat_participantsCreateWithoutUsersInput[] | chat_participantsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: chat_participantsCreateOrConnectWithoutUsersInput | chat_participantsCreateOrConnectWithoutUsersInput[]
    upsert?: chat_participantsUpsertWithWhereUniqueWithoutUsersInput | chat_participantsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: chat_participantsCreateManyUsersInputEnvelope
    set?: chat_participantsWhereUniqueInput | chat_participantsWhereUniqueInput[]
    disconnect?: chat_participantsWhereUniqueInput | chat_participantsWhereUniqueInput[]
    delete?: chat_participantsWhereUniqueInput | chat_participantsWhereUniqueInput[]
    connect?: chat_participantsWhereUniqueInput | chat_participantsWhereUniqueInput[]
    update?: chat_participantsUpdateWithWhereUniqueWithoutUsersInput | chat_participantsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: chat_participantsUpdateManyWithWhereWithoutUsersInput | chat_participantsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: chat_participantsScalarWhereInput | chat_participantsScalarWhereInput[]
  }

  export type configurationsUpdateManyWithoutUsersNestedInput = {
    create?: XOR<configurationsCreateWithoutUsersInput, configurationsUncheckedCreateWithoutUsersInput> | configurationsCreateWithoutUsersInput[] | configurationsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: configurationsCreateOrConnectWithoutUsersInput | configurationsCreateOrConnectWithoutUsersInput[]
    upsert?: configurationsUpsertWithWhereUniqueWithoutUsersInput | configurationsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: configurationsCreateManyUsersInputEnvelope
    set?: configurationsWhereUniqueInput | configurationsWhereUniqueInput[]
    disconnect?: configurationsWhereUniqueInput | configurationsWhereUniqueInput[]
    delete?: configurationsWhereUniqueInput | configurationsWhereUniqueInput[]
    connect?: configurationsWhereUniqueInput | configurationsWhereUniqueInput[]
    update?: configurationsUpdateWithWhereUniqueWithoutUsersInput | configurationsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: configurationsUpdateManyWithWhereWithoutUsersInput | configurationsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: configurationsScalarWhereInput | configurationsScalarWhereInput[]
  }

  export type deliveriesUpdateManyWithoutUsersNestedInput = {
    create?: XOR<deliveriesCreateWithoutUsersInput, deliveriesUncheckedCreateWithoutUsersInput> | deliveriesCreateWithoutUsersInput[] | deliveriesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: deliveriesCreateOrConnectWithoutUsersInput | deliveriesCreateOrConnectWithoutUsersInput[]
    upsert?: deliveriesUpsertWithWhereUniqueWithoutUsersInput | deliveriesUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: deliveriesCreateManyUsersInputEnvelope
    set?: deliveriesWhereUniqueInput | deliveriesWhereUniqueInput[]
    disconnect?: deliveriesWhereUniqueInput | deliveriesWhereUniqueInput[]
    delete?: deliveriesWhereUniqueInput | deliveriesWhereUniqueInput[]
    connect?: deliveriesWhereUniqueInput | deliveriesWhereUniqueInput[]
    update?: deliveriesUpdateWithWhereUniqueWithoutUsersInput | deliveriesUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: deliveriesUpdateManyWithWhereWithoutUsersInput | deliveriesUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: deliveriesScalarWhereInput | deliveriesScalarWhereInput[]
  }

  export type directionUpdateManyWithoutUsersNestedInput = {
    create?: XOR<directionCreateWithoutUsersInput, directionUncheckedCreateWithoutUsersInput> | directionCreateWithoutUsersInput[] | directionUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: directionCreateOrConnectWithoutUsersInput | directionCreateOrConnectWithoutUsersInput[]
    upsert?: directionUpsertWithWhereUniqueWithoutUsersInput | directionUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: directionCreateManyUsersInputEnvelope
    set?: directionWhereUniqueInput | directionWhereUniqueInput[]
    disconnect?: directionWhereUniqueInput | directionWhereUniqueInput[]
    delete?: directionWhereUniqueInput | directionWhereUniqueInput[]
    connect?: directionWhereUniqueInput | directionWhereUniqueInput[]
    update?: directionUpdateWithWhereUniqueWithoutUsersInput | directionUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: directionUpdateManyWithWhereWithoutUsersInput | directionUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: directionScalarWhereInput | directionScalarWhereInput[]
  }

  export type discountsUpdateManyWithoutUsersNestedInput = {
    create?: XOR<discountsCreateWithoutUsersInput, discountsUncheckedCreateWithoutUsersInput> | discountsCreateWithoutUsersInput[] | discountsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: discountsCreateOrConnectWithoutUsersInput | discountsCreateOrConnectWithoutUsersInput[]
    upsert?: discountsUpsertWithWhereUniqueWithoutUsersInput | discountsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: discountsCreateManyUsersInputEnvelope
    set?: discountsWhereUniqueInput | discountsWhereUniqueInput[]
    disconnect?: discountsWhereUniqueInput | discountsWhereUniqueInput[]
    delete?: discountsWhereUniqueInput | discountsWhereUniqueInput[]
    connect?: discountsWhereUniqueInput | discountsWhereUniqueInput[]
    update?: discountsUpdateWithWhereUniqueWithoutUsersInput | discountsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: discountsUpdateManyWithWhereWithoutUsersInput | discountsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: discountsScalarWhereInput | discountsScalarWhereInput[]
  }

  export type messagesUpdateManyWithoutUsersNestedInput = {
    create?: XOR<messagesCreateWithoutUsersInput, messagesUncheckedCreateWithoutUsersInput> | messagesCreateWithoutUsersInput[] | messagesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: messagesCreateOrConnectWithoutUsersInput | messagesCreateOrConnectWithoutUsersInput[]
    upsert?: messagesUpsertWithWhereUniqueWithoutUsersInput | messagesUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: messagesCreateManyUsersInputEnvelope
    set?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    disconnect?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    delete?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    connect?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    update?: messagesUpdateWithWhereUniqueWithoutUsersInput | messagesUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: messagesUpdateManyWithWhereWithoutUsersInput | messagesUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: messagesScalarWhereInput | messagesScalarWhereInput[]
  }

  export type notificationsUpdateManyWithoutUsersNestedInput = {
    create?: XOR<notificationsCreateWithoutUsersInput, notificationsUncheckedCreateWithoutUsersInput> | notificationsCreateWithoutUsersInput[] | notificationsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: notificationsCreateOrConnectWithoutUsersInput | notificationsCreateOrConnectWithoutUsersInput[]
    upsert?: notificationsUpsertWithWhereUniqueWithoutUsersInput | notificationsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: notificationsCreateManyUsersInputEnvelope
    set?: notificationsWhereUniqueInput | notificationsWhereUniqueInput[]
    disconnect?: notificationsWhereUniqueInput | notificationsWhereUniqueInput[]
    delete?: notificationsWhereUniqueInput | notificationsWhereUniqueInput[]
    connect?: notificationsWhereUniqueInput | notificationsWhereUniqueInput[]
    update?: notificationsUpdateWithWhereUniqueWithoutUsersInput | notificationsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: notificationsUpdateManyWithWhereWithoutUsersInput | notificationsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: notificationsScalarWhereInput | notificationsScalarWhereInput[]
  }

  export type ordersUpdateManyWithoutUsers_orders_retailer_idTousersNestedInput = {
    create?: XOR<ordersCreateWithoutUsers_orders_retailer_idTousersInput, ordersUncheckedCreateWithoutUsers_orders_retailer_idTousersInput> | ordersCreateWithoutUsers_orders_retailer_idTousersInput[] | ordersUncheckedCreateWithoutUsers_orders_retailer_idTousersInput[]
    connectOrCreate?: ordersCreateOrConnectWithoutUsers_orders_retailer_idTousersInput | ordersCreateOrConnectWithoutUsers_orders_retailer_idTousersInput[]
    upsert?: ordersUpsertWithWhereUniqueWithoutUsers_orders_retailer_idTousersInput | ordersUpsertWithWhereUniqueWithoutUsers_orders_retailer_idTousersInput[]
    createMany?: ordersCreateManyUsers_orders_retailer_idTousersInputEnvelope
    set?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    disconnect?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    delete?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    connect?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    update?: ordersUpdateWithWhereUniqueWithoutUsers_orders_retailer_idTousersInput | ordersUpdateWithWhereUniqueWithoutUsers_orders_retailer_idTousersInput[]
    updateMany?: ordersUpdateManyWithWhereWithoutUsers_orders_retailer_idTousersInput | ordersUpdateManyWithWhereWithoutUsers_orders_retailer_idTousersInput[]
    deleteMany?: ordersScalarWhereInput | ordersScalarWhereInput[]
  }

  export type ordersUpdateManyWithoutUsers_orders_wholesaler_idTousersNestedInput = {
    create?: XOR<ordersCreateWithoutUsers_orders_wholesaler_idTousersInput, ordersUncheckedCreateWithoutUsers_orders_wholesaler_idTousersInput> | ordersCreateWithoutUsers_orders_wholesaler_idTousersInput[] | ordersUncheckedCreateWithoutUsers_orders_wholesaler_idTousersInput[]
    connectOrCreate?: ordersCreateOrConnectWithoutUsers_orders_wholesaler_idTousersInput | ordersCreateOrConnectWithoutUsers_orders_wholesaler_idTousersInput[]
    upsert?: ordersUpsertWithWhereUniqueWithoutUsers_orders_wholesaler_idTousersInput | ordersUpsertWithWhereUniqueWithoutUsers_orders_wholesaler_idTousersInput[]
    createMany?: ordersCreateManyUsers_orders_wholesaler_idTousersInputEnvelope
    set?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    disconnect?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    delete?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    connect?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    update?: ordersUpdateWithWhereUniqueWithoutUsers_orders_wholesaler_idTousersInput | ordersUpdateWithWhereUniqueWithoutUsers_orders_wholesaler_idTousersInput[]
    updateMany?: ordersUpdateManyWithWhereWithoutUsers_orders_wholesaler_idTousersInput | ordersUpdateManyWithWhereWithoutUsers_orders_wholesaler_idTousersInput[]
    deleteMany?: ordersScalarWhereInput | ordersScalarWhereInput[]
  }

  export type productsUpdateManyWithoutUsersNestedInput = {
    create?: XOR<productsCreateWithoutUsersInput, productsUncheckedCreateWithoutUsersInput> | productsCreateWithoutUsersInput[] | productsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: productsCreateOrConnectWithoutUsersInput | productsCreateOrConnectWithoutUsersInput[]
    upsert?: productsUpsertWithWhereUniqueWithoutUsersInput | productsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: productsCreateManyUsersInputEnvelope
    set?: productsWhereUniqueInput | productsWhereUniqueInput[]
    disconnect?: productsWhereUniqueInput | productsWhereUniqueInput[]
    delete?: productsWhereUniqueInput | productsWhereUniqueInput[]
    connect?: productsWhereUniqueInput | productsWhereUniqueInput[]
    update?: productsUpdateWithWhereUniqueWithoutUsersInput | productsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: productsUpdateManyWithWhereWithoutUsersInput | productsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: productsScalarWhereInput | productsScalarWhereInput[]
  }

  export type user_sessionsUpdateManyWithoutUsersNestedInput = {
    create?: XOR<user_sessionsCreateWithoutUsersInput, user_sessionsUncheckedCreateWithoutUsersInput> | user_sessionsCreateWithoutUsersInput[] | user_sessionsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: user_sessionsCreateOrConnectWithoutUsersInput | user_sessionsCreateOrConnectWithoutUsersInput[]
    upsert?: user_sessionsUpsertWithWhereUniqueWithoutUsersInput | user_sessionsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: user_sessionsCreateManyUsersInputEnvelope
    set?: user_sessionsWhereUniqueInput | user_sessionsWhereUniqueInput[]
    disconnect?: user_sessionsWhereUniqueInput | user_sessionsWhereUniqueInput[]
    delete?: user_sessionsWhereUniqueInput | user_sessionsWhereUniqueInput[]
    connect?: user_sessionsWhereUniqueInput | user_sessionsWhereUniqueInput[]
    update?: user_sessionsUpdateWithWhereUniqueWithoutUsersInput | user_sessionsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: user_sessionsUpdateManyWithWhereWithoutUsersInput | user_sessionsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: user_sessionsScalarWhereInput | user_sessionsScalarWhereInput[]
  }

  export type cartsUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<cartsCreateWithoutUsersInput, cartsUncheckedCreateWithoutUsersInput> | cartsCreateWithoutUsersInput[] | cartsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: cartsCreateOrConnectWithoutUsersInput | cartsCreateOrConnectWithoutUsersInput[]
    upsert?: cartsUpsertWithWhereUniqueWithoutUsersInput | cartsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: cartsCreateManyUsersInputEnvelope
    set?: cartsWhereUniqueInput | cartsWhereUniqueInput[]
    disconnect?: cartsWhereUniqueInput | cartsWhereUniqueInput[]
    delete?: cartsWhereUniqueInput | cartsWhereUniqueInput[]
    connect?: cartsWhereUniqueInput | cartsWhereUniqueInput[]
    update?: cartsUpdateWithWhereUniqueWithoutUsersInput | cartsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: cartsUpdateManyWithWhereWithoutUsersInput | cartsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: cartsScalarWhereInput | cartsScalarWhereInput[]
  }

  export type categoriesUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<categoriesCreateWithoutUsersInput, categoriesUncheckedCreateWithoutUsersInput> | categoriesCreateWithoutUsersInput[] | categoriesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: categoriesCreateOrConnectWithoutUsersInput | categoriesCreateOrConnectWithoutUsersInput[]
    upsert?: categoriesUpsertWithWhereUniqueWithoutUsersInput | categoriesUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: categoriesCreateManyUsersInputEnvelope
    set?: categoriesWhereUniqueInput | categoriesWhereUniqueInput[]
    disconnect?: categoriesWhereUniqueInput | categoriesWhereUniqueInput[]
    delete?: categoriesWhereUniqueInput | categoriesWhereUniqueInput[]
    connect?: categoriesWhereUniqueInput | categoriesWhereUniqueInput[]
    update?: categoriesUpdateWithWhereUniqueWithoutUsersInput | categoriesUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: categoriesUpdateManyWithWhereWithoutUsersInput | categoriesUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: categoriesScalarWhereInput | categoriesScalarWhereInput[]
  }

  export type chat_participantsUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<chat_participantsCreateWithoutUsersInput, chat_participantsUncheckedCreateWithoutUsersInput> | chat_participantsCreateWithoutUsersInput[] | chat_participantsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: chat_participantsCreateOrConnectWithoutUsersInput | chat_participantsCreateOrConnectWithoutUsersInput[]
    upsert?: chat_participantsUpsertWithWhereUniqueWithoutUsersInput | chat_participantsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: chat_participantsCreateManyUsersInputEnvelope
    set?: chat_participantsWhereUniqueInput | chat_participantsWhereUniqueInput[]
    disconnect?: chat_participantsWhereUniqueInput | chat_participantsWhereUniqueInput[]
    delete?: chat_participantsWhereUniqueInput | chat_participantsWhereUniqueInput[]
    connect?: chat_participantsWhereUniqueInput | chat_participantsWhereUniqueInput[]
    update?: chat_participantsUpdateWithWhereUniqueWithoutUsersInput | chat_participantsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: chat_participantsUpdateManyWithWhereWithoutUsersInput | chat_participantsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: chat_participantsScalarWhereInput | chat_participantsScalarWhereInput[]
  }

  export type configurationsUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<configurationsCreateWithoutUsersInput, configurationsUncheckedCreateWithoutUsersInput> | configurationsCreateWithoutUsersInput[] | configurationsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: configurationsCreateOrConnectWithoutUsersInput | configurationsCreateOrConnectWithoutUsersInput[]
    upsert?: configurationsUpsertWithWhereUniqueWithoutUsersInput | configurationsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: configurationsCreateManyUsersInputEnvelope
    set?: configurationsWhereUniqueInput | configurationsWhereUniqueInput[]
    disconnect?: configurationsWhereUniqueInput | configurationsWhereUniqueInput[]
    delete?: configurationsWhereUniqueInput | configurationsWhereUniqueInput[]
    connect?: configurationsWhereUniqueInput | configurationsWhereUniqueInput[]
    update?: configurationsUpdateWithWhereUniqueWithoutUsersInput | configurationsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: configurationsUpdateManyWithWhereWithoutUsersInput | configurationsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: configurationsScalarWhereInput | configurationsScalarWhereInput[]
  }

  export type deliveriesUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<deliveriesCreateWithoutUsersInput, deliveriesUncheckedCreateWithoutUsersInput> | deliveriesCreateWithoutUsersInput[] | deliveriesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: deliveriesCreateOrConnectWithoutUsersInput | deliveriesCreateOrConnectWithoutUsersInput[]
    upsert?: deliveriesUpsertWithWhereUniqueWithoutUsersInput | deliveriesUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: deliveriesCreateManyUsersInputEnvelope
    set?: deliveriesWhereUniqueInput | deliveriesWhereUniqueInput[]
    disconnect?: deliveriesWhereUniqueInput | deliveriesWhereUniqueInput[]
    delete?: deliveriesWhereUniqueInput | deliveriesWhereUniqueInput[]
    connect?: deliveriesWhereUniqueInput | deliveriesWhereUniqueInput[]
    update?: deliveriesUpdateWithWhereUniqueWithoutUsersInput | deliveriesUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: deliveriesUpdateManyWithWhereWithoutUsersInput | deliveriesUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: deliveriesScalarWhereInput | deliveriesScalarWhereInput[]
  }

  export type directionUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<directionCreateWithoutUsersInput, directionUncheckedCreateWithoutUsersInput> | directionCreateWithoutUsersInput[] | directionUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: directionCreateOrConnectWithoutUsersInput | directionCreateOrConnectWithoutUsersInput[]
    upsert?: directionUpsertWithWhereUniqueWithoutUsersInput | directionUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: directionCreateManyUsersInputEnvelope
    set?: directionWhereUniqueInput | directionWhereUniqueInput[]
    disconnect?: directionWhereUniqueInput | directionWhereUniqueInput[]
    delete?: directionWhereUniqueInput | directionWhereUniqueInput[]
    connect?: directionWhereUniqueInput | directionWhereUniqueInput[]
    update?: directionUpdateWithWhereUniqueWithoutUsersInput | directionUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: directionUpdateManyWithWhereWithoutUsersInput | directionUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: directionScalarWhereInput | directionScalarWhereInput[]
  }

  export type discountsUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<discountsCreateWithoutUsersInput, discountsUncheckedCreateWithoutUsersInput> | discountsCreateWithoutUsersInput[] | discountsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: discountsCreateOrConnectWithoutUsersInput | discountsCreateOrConnectWithoutUsersInput[]
    upsert?: discountsUpsertWithWhereUniqueWithoutUsersInput | discountsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: discountsCreateManyUsersInputEnvelope
    set?: discountsWhereUniqueInput | discountsWhereUniqueInput[]
    disconnect?: discountsWhereUniqueInput | discountsWhereUniqueInput[]
    delete?: discountsWhereUniqueInput | discountsWhereUniqueInput[]
    connect?: discountsWhereUniqueInput | discountsWhereUniqueInput[]
    update?: discountsUpdateWithWhereUniqueWithoutUsersInput | discountsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: discountsUpdateManyWithWhereWithoutUsersInput | discountsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: discountsScalarWhereInput | discountsScalarWhereInput[]
  }

  export type messagesUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<messagesCreateWithoutUsersInput, messagesUncheckedCreateWithoutUsersInput> | messagesCreateWithoutUsersInput[] | messagesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: messagesCreateOrConnectWithoutUsersInput | messagesCreateOrConnectWithoutUsersInput[]
    upsert?: messagesUpsertWithWhereUniqueWithoutUsersInput | messagesUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: messagesCreateManyUsersInputEnvelope
    set?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    disconnect?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    delete?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    connect?: messagesWhereUniqueInput | messagesWhereUniqueInput[]
    update?: messagesUpdateWithWhereUniqueWithoutUsersInput | messagesUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: messagesUpdateManyWithWhereWithoutUsersInput | messagesUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: messagesScalarWhereInput | messagesScalarWhereInput[]
  }

  export type notificationsUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<notificationsCreateWithoutUsersInput, notificationsUncheckedCreateWithoutUsersInput> | notificationsCreateWithoutUsersInput[] | notificationsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: notificationsCreateOrConnectWithoutUsersInput | notificationsCreateOrConnectWithoutUsersInput[]
    upsert?: notificationsUpsertWithWhereUniqueWithoutUsersInput | notificationsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: notificationsCreateManyUsersInputEnvelope
    set?: notificationsWhereUniqueInput | notificationsWhereUniqueInput[]
    disconnect?: notificationsWhereUniqueInput | notificationsWhereUniqueInput[]
    delete?: notificationsWhereUniqueInput | notificationsWhereUniqueInput[]
    connect?: notificationsWhereUniqueInput | notificationsWhereUniqueInput[]
    update?: notificationsUpdateWithWhereUniqueWithoutUsersInput | notificationsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: notificationsUpdateManyWithWhereWithoutUsersInput | notificationsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: notificationsScalarWhereInput | notificationsScalarWhereInput[]
  }

  export type ordersUncheckedUpdateManyWithoutUsers_orders_retailer_idTousersNestedInput = {
    create?: XOR<ordersCreateWithoutUsers_orders_retailer_idTousersInput, ordersUncheckedCreateWithoutUsers_orders_retailer_idTousersInput> | ordersCreateWithoutUsers_orders_retailer_idTousersInput[] | ordersUncheckedCreateWithoutUsers_orders_retailer_idTousersInput[]
    connectOrCreate?: ordersCreateOrConnectWithoutUsers_orders_retailer_idTousersInput | ordersCreateOrConnectWithoutUsers_orders_retailer_idTousersInput[]
    upsert?: ordersUpsertWithWhereUniqueWithoutUsers_orders_retailer_idTousersInput | ordersUpsertWithWhereUniqueWithoutUsers_orders_retailer_idTousersInput[]
    createMany?: ordersCreateManyUsers_orders_retailer_idTousersInputEnvelope
    set?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    disconnect?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    delete?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    connect?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    update?: ordersUpdateWithWhereUniqueWithoutUsers_orders_retailer_idTousersInput | ordersUpdateWithWhereUniqueWithoutUsers_orders_retailer_idTousersInput[]
    updateMany?: ordersUpdateManyWithWhereWithoutUsers_orders_retailer_idTousersInput | ordersUpdateManyWithWhereWithoutUsers_orders_retailer_idTousersInput[]
    deleteMany?: ordersScalarWhereInput | ordersScalarWhereInput[]
  }

  export type ordersUncheckedUpdateManyWithoutUsers_orders_wholesaler_idTousersNestedInput = {
    create?: XOR<ordersCreateWithoutUsers_orders_wholesaler_idTousersInput, ordersUncheckedCreateWithoutUsers_orders_wholesaler_idTousersInput> | ordersCreateWithoutUsers_orders_wholesaler_idTousersInput[] | ordersUncheckedCreateWithoutUsers_orders_wholesaler_idTousersInput[]
    connectOrCreate?: ordersCreateOrConnectWithoutUsers_orders_wholesaler_idTousersInput | ordersCreateOrConnectWithoutUsers_orders_wholesaler_idTousersInput[]
    upsert?: ordersUpsertWithWhereUniqueWithoutUsers_orders_wholesaler_idTousersInput | ordersUpsertWithWhereUniqueWithoutUsers_orders_wholesaler_idTousersInput[]
    createMany?: ordersCreateManyUsers_orders_wholesaler_idTousersInputEnvelope
    set?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    disconnect?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    delete?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    connect?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    update?: ordersUpdateWithWhereUniqueWithoutUsers_orders_wholesaler_idTousersInput | ordersUpdateWithWhereUniqueWithoutUsers_orders_wholesaler_idTousersInput[]
    updateMany?: ordersUpdateManyWithWhereWithoutUsers_orders_wholesaler_idTousersInput | ordersUpdateManyWithWhereWithoutUsers_orders_wholesaler_idTousersInput[]
    deleteMany?: ordersScalarWhereInput | ordersScalarWhereInput[]
  }

  export type productsUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<productsCreateWithoutUsersInput, productsUncheckedCreateWithoutUsersInput> | productsCreateWithoutUsersInput[] | productsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: productsCreateOrConnectWithoutUsersInput | productsCreateOrConnectWithoutUsersInput[]
    upsert?: productsUpsertWithWhereUniqueWithoutUsersInput | productsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: productsCreateManyUsersInputEnvelope
    set?: productsWhereUniqueInput | productsWhereUniqueInput[]
    disconnect?: productsWhereUniqueInput | productsWhereUniqueInput[]
    delete?: productsWhereUniqueInput | productsWhereUniqueInput[]
    connect?: productsWhereUniqueInput | productsWhereUniqueInput[]
    update?: productsUpdateWithWhereUniqueWithoutUsersInput | productsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: productsUpdateManyWithWhereWithoutUsersInput | productsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: productsScalarWhereInput | productsScalarWhereInput[]
  }

  export type user_sessionsUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<user_sessionsCreateWithoutUsersInput, user_sessionsUncheckedCreateWithoutUsersInput> | user_sessionsCreateWithoutUsersInput[] | user_sessionsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: user_sessionsCreateOrConnectWithoutUsersInput | user_sessionsCreateOrConnectWithoutUsersInput[]
    upsert?: user_sessionsUpsertWithWhereUniqueWithoutUsersInput | user_sessionsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: user_sessionsCreateManyUsersInputEnvelope
    set?: user_sessionsWhereUniqueInput | user_sessionsWhereUniqueInput[]
    disconnect?: user_sessionsWhereUniqueInput | user_sessionsWhereUniqueInput[]
    delete?: user_sessionsWhereUniqueInput | user_sessionsWhereUniqueInput[]
    connect?: user_sessionsWhereUniqueInput | user_sessionsWhereUniqueInput[]
    update?: user_sessionsUpdateWithWhereUniqueWithoutUsersInput | user_sessionsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: user_sessionsUpdateManyWithWhereWithoutUsersInput | user_sessionsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: user_sessionsScalarWhereInput | user_sessionsScalarWhereInput[]
  }

  export type cart_detailsCreateNestedManyWithoutVariant_productsInput = {
    create?: XOR<cart_detailsCreateWithoutVariant_productsInput, cart_detailsUncheckedCreateWithoutVariant_productsInput> | cart_detailsCreateWithoutVariant_productsInput[] | cart_detailsUncheckedCreateWithoutVariant_productsInput[]
    connectOrCreate?: cart_detailsCreateOrConnectWithoutVariant_productsInput | cart_detailsCreateOrConnectWithoutVariant_productsInput[]
    createMany?: cart_detailsCreateManyVariant_productsInputEnvelope
    connect?: cart_detailsWhereUniqueInput | cart_detailsWhereUniqueInput[]
  }

  export type order_detailsCreateNestedManyWithoutVariant_productsInput = {
    create?: XOR<order_detailsCreateWithoutVariant_productsInput, order_detailsUncheckedCreateWithoutVariant_productsInput> | order_detailsCreateWithoutVariant_productsInput[] | order_detailsUncheckedCreateWithoutVariant_productsInput[]
    connectOrCreate?: order_detailsCreateOrConnectWithoutVariant_productsInput | order_detailsCreateOrConnectWithoutVariant_productsInput[]
    createMany?: order_detailsCreateManyVariant_productsInputEnvelope
    connect?: order_detailsWhereUniqueInput | order_detailsWhereUniqueInput[]
  }

  export type productsCreateNestedOneWithoutVariant_productsInput = {
    create?: XOR<productsCreateWithoutVariant_productsInput, productsUncheckedCreateWithoutVariant_productsInput>
    connectOrCreate?: productsCreateOrConnectWithoutVariant_productsInput
    connect?: productsWhereUniqueInput
  }

  export type cart_detailsUncheckedCreateNestedManyWithoutVariant_productsInput = {
    create?: XOR<cart_detailsCreateWithoutVariant_productsInput, cart_detailsUncheckedCreateWithoutVariant_productsInput> | cart_detailsCreateWithoutVariant_productsInput[] | cart_detailsUncheckedCreateWithoutVariant_productsInput[]
    connectOrCreate?: cart_detailsCreateOrConnectWithoutVariant_productsInput | cart_detailsCreateOrConnectWithoutVariant_productsInput[]
    createMany?: cart_detailsCreateManyVariant_productsInputEnvelope
    connect?: cart_detailsWhereUniqueInput | cart_detailsWhereUniqueInput[]
  }

  export type order_detailsUncheckedCreateNestedManyWithoutVariant_productsInput = {
    create?: XOR<order_detailsCreateWithoutVariant_productsInput, order_detailsUncheckedCreateWithoutVariant_productsInput> | order_detailsCreateWithoutVariant_productsInput[] | order_detailsUncheckedCreateWithoutVariant_productsInput[]
    connectOrCreate?: order_detailsCreateOrConnectWithoutVariant_productsInput | order_detailsCreateOrConnectWithoutVariant_productsInput[]
    createMany?: order_detailsCreateManyVariant_productsInputEnvelope
    connect?: order_detailsWhereUniqueInput | order_detailsWhereUniqueInput[]
  }

  export type cart_detailsUpdateManyWithoutVariant_productsNestedInput = {
    create?: XOR<cart_detailsCreateWithoutVariant_productsInput, cart_detailsUncheckedCreateWithoutVariant_productsInput> | cart_detailsCreateWithoutVariant_productsInput[] | cart_detailsUncheckedCreateWithoutVariant_productsInput[]
    connectOrCreate?: cart_detailsCreateOrConnectWithoutVariant_productsInput | cart_detailsCreateOrConnectWithoutVariant_productsInput[]
    upsert?: cart_detailsUpsertWithWhereUniqueWithoutVariant_productsInput | cart_detailsUpsertWithWhereUniqueWithoutVariant_productsInput[]
    createMany?: cart_detailsCreateManyVariant_productsInputEnvelope
    set?: cart_detailsWhereUniqueInput | cart_detailsWhereUniqueInput[]
    disconnect?: cart_detailsWhereUniqueInput | cart_detailsWhereUniqueInput[]
    delete?: cart_detailsWhereUniqueInput | cart_detailsWhereUniqueInput[]
    connect?: cart_detailsWhereUniqueInput | cart_detailsWhereUniqueInput[]
    update?: cart_detailsUpdateWithWhereUniqueWithoutVariant_productsInput | cart_detailsUpdateWithWhereUniqueWithoutVariant_productsInput[]
    updateMany?: cart_detailsUpdateManyWithWhereWithoutVariant_productsInput | cart_detailsUpdateManyWithWhereWithoutVariant_productsInput[]
    deleteMany?: cart_detailsScalarWhereInput | cart_detailsScalarWhereInput[]
  }

  export type order_detailsUpdateManyWithoutVariant_productsNestedInput = {
    create?: XOR<order_detailsCreateWithoutVariant_productsInput, order_detailsUncheckedCreateWithoutVariant_productsInput> | order_detailsCreateWithoutVariant_productsInput[] | order_detailsUncheckedCreateWithoutVariant_productsInput[]
    connectOrCreate?: order_detailsCreateOrConnectWithoutVariant_productsInput | order_detailsCreateOrConnectWithoutVariant_productsInput[]
    upsert?: order_detailsUpsertWithWhereUniqueWithoutVariant_productsInput | order_detailsUpsertWithWhereUniqueWithoutVariant_productsInput[]
    createMany?: order_detailsCreateManyVariant_productsInputEnvelope
    set?: order_detailsWhereUniqueInput | order_detailsWhereUniqueInput[]
    disconnect?: order_detailsWhereUniqueInput | order_detailsWhereUniqueInput[]
    delete?: order_detailsWhereUniqueInput | order_detailsWhereUniqueInput[]
    connect?: order_detailsWhereUniqueInput | order_detailsWhereUniqueInput[]
    update?: order_detailsUpdateWithWhereUniqueWithoutVariant_productsInput | order_detailsUpdateWithWhereUniqueWithoutVariant_productsInput[]
    updateMany?: order_detailsUpdateManyWithWhereWithoutVariant_productsInput | order_detailsUpdateManyWithWhereWithoutVariant_productsInput[]
    deleteMany?: order_detailsScalarWhereInput | order_detailsScalarWhereInput[]
  }

  export type productsUpdateOneRequiredWithoutVariant_productsNestedInput = {
    create?: XOR<productsCreateWithoutVariant_productsInput, productsUncheckedCreateWithoutVariant_productsInput>
    connectOrCreate?: productsCreateOrConnectWithoutVariant_productsInput
    upsert?: productsUpsertWithoutVariant_productsInput
    connect?: productsWhereUniqueInput
    update?: XOR<XOR<productsUpdateToOneWithWhereWithoutVariant_productsInput, productsUpdateWithoutVariant_productsInput>, productsUncheckedUpdateWithoutVariant_productsInput>
  }

  export type cart_detailsUncheckedUpdateManyWithoutVariant_productsNestedInput = {
    create?: XOR<cart_detailsCreateWithoutVariant_productsInput, cart_detailsUncheckedCreateWithoutVariant_productsInput> | cart_detailsCreateWithoutVariant_productsInput[] | cart_detailsUncheckedCreateWithoutVariant_productsInput[]
    connectOrCreate?: cart_detailsCreateOrConnectWithoutVariant_productsInput | cart_detailsCreateOrConnectWithoutVariant_productsInput[]
    upsert?: cart_detailsUpsertWithWhereUniqueWithoutVariant_productsInput | cart_detailsUpsertWithWhereUniqueWithoutVariant_productsInput[]
    createMany?: cart_detailsCreateManyVariant_productsInputEnvelope
    set?: cart_detailsWhereUniqueInput | cart_detailsWhereUniqueInput[]
    disconnect?: cart_detailsWhereUniqueInput | cart_detailsWhereUniqueInput[]
    delete?: cart_detailsWhereUniqueInput | cart_detailsWhereUniqueInput[]
    connect?: cart_detailsWhereUniqueInput | cart_detailsWhereUniqueInput[]
    update?: cart_detailsUpdateWithWhereUniqueWithoutVariant_productsInput | cart_detailsUpdateWithWhereUniqueWithoutVariant_productsInput[]
    updateMany?: cart_detailsUpdateManyWithWhereWithoutVariant_productsInput | cart_detailsUpdateManyWithWhereWithoutVariant_productsInput[]
    deleteMany?: cart_detailsScalarWhereInput | cart_detailsScalarWhereInput[]
  }

  export type order_detailsUncheckedUpdateManyWithoutVariant_productsNestedInput = {
    create?: XOR<order_detailsCreateWithoutVariant_productsInput, order_detailsUncheckedCreateWithoutVariant_productsInput> | order_detailsCreateWithoutVariant_productsInput[] | order_detailsUncheckedCreateWithoutVariant_productsInput[]
    connectOrCreate?: order_detailsCreateOrConnectWithoutVariant_productsInput | order_detailsCreateOrConnectWithoutVariant_productsInput[]
    upsert?: order_detailsUpsertWithWhereUniqueWithoutVariant_productsInput | order_detailsUpsertWithWhereUniqueWithoutVariant_productsInput[]
    createMany?: order_detailsCreateManyVariant_productsInputEnvelope
    set?: order_detailsWhereUniqueInput | order_detailsWhereUniqueInput[]
    disconnect?: order_detailsWhereUniqueInput | order_detailsWhereUniqueInput[]
    delete?: order_detailsWhereUniqueInput | order_detailsWhereUniqueInput[]
    connect?: order_detailsWhereUniqueInput | order_detailsWhereUniqueInput[]
    update?: order_detailsUpdateWithWhereUniqueWithoutVariant_productsInput | order_detailsUpdateWithWhereUniqueWithoutVariant_productsInput[]
    updateMany?: order_detailsUpdateManyWithWhereWithoutVariant_productsInput | order_detailsUpdateManyWithWhereWithoutVariant_productsInput[]
    deleteMany?: order_detailsScalarWhereInput | order_detailsScalarWhereInput[]
  }

  export type usersCreateNestedOneWithoutDirectionInput = {
    create?: XOR<usersCreateWithoutDirectionInput, usersUncheckedCreateWithoutDirectionInput>
    connectOrCreate?: usersCreateOrConnectWithoutDirectionInput
    connect?: usersWhereUniqueInput
  }

  export type ordersCreateNestedManyWithoutDirecctionInput = {
    create?: XOR<ordersCreateWithoutDirecctionInput, ordersUncheckedCreateWithoutDirecctionInput> | ordersCreateWithoutDirecctionInput[] | ordersUncheckedCreateWithoutDirecctionInput[]
    connectOrCreate?: ordersCreateOrConnectWithoutDirecctionInput | ordersCreateOrConnectWithoutDirecctionInput[]
    createMany?: ordersCreateManyDirecctionInputEnvelope
    connect?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
  }

  export type ordersUncheckedCreateNestedManyWithoutDirecctionInput = {
    create?: XOR<ordersCreateWithoutDirecctionInput, ordersUncheckedCreateWithoutDirecctionInput> | ordersCreateWithoutDirecctionInput[] | ordersUncheckedCreateWithoutDirecctionInput[]
    connectOrCreate?: ordersCreateOrConnectWithoutDirecctionInput | ordersCreateOrConnectWithoutDirecctionInput[]
    createMany?: ordersCreateManyDirecctionInputEnvelope
    connect?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
  }

  export type EnumAddressTypeFieldUpdateOperationsInput = {
    set?: $Enums.AddressType
  }

  export type usersUpdateOneRequiredWithoutDirectionNestedInput = {
    create?: XOR<usersCreateWithoutDirectionInput, usersUncheckedCreateWithoutDirectionInput>
    connectOrCreate?: usersCreateOrConnectWithoutDirectionInput
    upsert?: usersUpsertWithoutDirectionInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutDirectionInput, usersUpdateWithoutDirectionInput>, usersUncheckedUpdateWithoutDirectionInput>
  }

  export type ordersUpdateManyWithoutDirecctionNestedInput = {
    create?: XOR<ordersCreateWithoutDirecctionInput, ordersUncheckedCreateWithoutDirecctionInput> | ordersCreateWithoutDirecctionInput[] | ordersUncheckedCreateWithoutDirecctionInput[]
    connectOrCreate?: ordersCreateOrConnectWithoutDirecctionInput | ordersCreateOrConnectWithoutDirecctionInput[]
    upsert?: ordersUpsertWithWhereUniqueWithoutDirecctionInput | ordersUpsertWithWhereUniqueWithoutDirecctionInput[]
    createMany?: ordersCreateManyDirecctionInputEnvelope
    set?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    disconnect?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    delete?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    connect?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    update?: ordersUpdateWithWhereUniqueWithoutDirecctionInput | ordersUpdateWithWhereUniqueWithoutDirecctionInput[]
    updateMany?: ordersUpdateManyWithWhereWithoutDirecctionInput | ordersUpdateManyWithWhereWithoutDirecctionInput[]
    deleteMany?: ordersScalarWhereInput | ordersScalarWhereInput[]
  }

  export type ordersUncheckedUpdateManyWithoutDirecctionNestedInput = {
    create?: XOR<ordersCreateWithoutDirecctionInput, ordersUncheckedCreateWithoutDirecctionInput> | ordersCreateWithoutDirecctionInput[] | ordersUncheckedCreateWithoutDirecctionInput[]
    connectOrCreate?: ordersCreateOrConnectWithoutDirecctionInput | ordersCreateOrConnectWithoutDirecctionInput[]
    upsert?: ordersUpsertWithWhereUniqueWithoutDirecctionInput | ordersUpsertWithWhereUniqueWithoutDirecctionInput[]
    createMany?: ordersCreateManyDirecctionInputEnvelope
    set?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    disconnect?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    delete?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    connect?: ordersWhereUniqueInput | ordersWhereUniqueInput[]
    update?: ordersUpdateWithWhereUniqueWithoutDirecctionInput | ordersUpdateWithWhereUniqueWithoutDirecctionInput[]
    updateMany?: ordersUpdateManyWithWhereWithoutDirecctionInput | ordersUpdateManyWithWhereWithoutDirecctionInput[]
    deleteMany?: ordersScalarWhereInput | ordersScalarWhereInput[]
  }

  export type NestedBigIntFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntFilter<$PrismaModel> | bigint | number
  }

  export type NestedBigIntNullableFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableFilter<$PrismaModel> | bigint | number | null
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedBigIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntWithAggregatesFilter<$PrismaModel> | bigint | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedBigIntFilter<$PrismaModel>
    _min?: NestedBigIntFilter<$PrismaModel>
    _max?: NestedBigIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedBigIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableWithAggregatesFilter<$PrismaModel> | bigint | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedBigIntNullableFilter<$PrismaModel>
    _min?: NestedBigIntNullableFilter<$PrismaModel>
    _max?: NestedBigIntNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedUuidFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidFilter<$PrismaModel> | string
  }

  export type NestedUuidWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedUuidNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedUuidNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedEnumDeliveryStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.DeliveryStatus | EnumDeliveryStatusFieldRefInput<$PrismaModel>
    in?: $Enums.DeliveryStatus[] | ListEnumDeliveryStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.DeliveryStatus[] | ListEnumDeliveryStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumDeliveryStatusFilter<$PrismaModel> | $Enums.DeliveryStatus
  }

  export type NestedEnumDeliveryStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DeliveryStatus | EnumDeliveryStatusFieldRefInput<$PrismaModel>
    in?: $Enums.DeliveryStatus[] | ListEnumDeliveryStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.DeliveryStatus[] | ListEnumDeliveryStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumDeliveryStatusWithAggregatesFilter<$PrismaModel> | $Enums.DeliveryStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumDeliveryStatusFilter<$PrismaModel>
    _max?: NestedEnumDeliveryStatusFilter<$PrismaModel>
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }
  export type NestedJsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel>
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedEnumUserStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.UserStatus | EnumUserStatusFieldRefInput<$PrismaModel>
    in?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumUserStatusFilter<$PrismaModel> | $Enums.UserStatus
  }

  export type NestedEnumUserRoleFilter<$PrismaModel = never> = {
    equals?: $Enums.UserRole | EnumUserRoleFieldRefInput<$PrismaModel>
    in?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumUserRoleFilter<$PrismaModel> | $Enums.UserRole
  }

  export type NestedEnumUserStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.UserStatus | EnumUserStatusFieldRefInput<$PrismaModel>
    in?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumUserStatusWithAggregatesFilter<$PrismaModel> | $Enums.UserStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumUserStatusFilter<$PrismaModel>
    _max?: NestedEnumUserStatusFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedEnumUserRoleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.UserRole | EnumUserRoleFieldRefInput<$PrismaModel>
    in?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserRole[] | ListEnumUserRoleFieldRefInput<$PrismaModel>
    not?: NestedEnumUserRoleWithAggregatesFilter<$PrismaModel> | $Enums.UserRole
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumUserRoleFilter<$PrismaModel>
    _max?: NestedEnumUserRoleFilter<$PrismaModel>
  }

  export type NestedEnumAddressTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.AddressType | EnumAddressTypeFieldRefInput<$PrismaModel>
    in?: $Enums.AddressType[] | ListEnumAddressTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.AddressType[] | ListEnumAddressTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumAddressTypeFilter<$PrismaModel> | $Enums.AddressType
  }

  export type NestedEnumAddressTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.AddressType | EnumAddressTypeFieldRefInput<$PrismaModel>
    in?: $Enums.AddressType[] | ListEnumAddressTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.AddressType[] | ListEnumAddressTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumAddressTypeWithAggregatesFilter<$PrismaModel> | $Enums.AddressType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumAddressTypeFilter<$PrismaModel>
    _max?: NestedEnumAddressTypeFilter<$PrismaModel>
  }

  export type cartsCreateWithoutCart_detailsInput = {
    id?: bigint | number
    created_at?: Date | string
    users: usersCreateNestedOneWithoutCartsInput
  }

  export type cartsUncheckedCreateWithoutCart_detailsInput = {
    id?: bigint | number
    user_id: string
    created_at?: Date | string
  }

  export type cartsCreateOrConnectWithoutCart_detailsInput = {
    where: cartsWhereUniqueInput
    create: XOR<cartsCreateWithoutCart_detailsInput, cartsUncheckedCreateWithoutCart_detailsInput>
  }

  export type variant_productsCreateWithoutCart_detailsInput = {
    id?: bigint | number
    created_at?: Date | string
    type_sale: number
    price: Decimal | DecimalJsLike | number | string
    price_iva: Decimal | DecimalJsLike | number | string
    stock: number
    sort: number
    attributes?: NullableJsonNullValueInput | InputJsonValue
    status: number
    iva: Decimal | DecimalJsLike | number | string
    product_code: string
    order_details?: order_detailsCreateNestedManyWithoutVariant_productsInput
    products: productsCreateNestedOneWithoutVariant_productsInput
  }

  export type variant_productsUncheckedCreateWithoutCart_detailsInput = {
    id?: bigint | number
    created_at?: Date | string
    product_id: bigint | number
    type_sale: number
    price: Decimal | DecimalJsLike | number | string
    price_iva: Decimal | DecimalJsLike | number | string
    stock: number
    sort: number
    attributes?: NullableJsonNullValueInput | InputJsonValue
    status: number
    iva: Decimal | DecimalJsLike | number | string
    product_code: string
    order_details?: order_detailsUncheckedCreateNestedManyWithoutVariant_productsInput
  }

  export type variant_productsCreateOrConnectWithoutCart_detailsInput = {
    where: variant_productsWhereUniqueInput
    create: XOR<variant_productsCreateWithoutCart_detailsInput, variant_productsUncheckedCreateWithoutCart_detailsInput>
  }

  export type cartsUpsertWithoutCart_detailsInput = {
    update: XOR<cartsUpdateWithoutCart_detailsInput, cartsUncheckedUpdateWithoutCart_detailsInput>
    create: XOR<cartsCreateWithoutCart_detailsInput, cartsUncheckedCreateWithoutCart_detailsInput>
    where?: cartsWhereInput
  }

  export type cartsUpdateToOneWithWhereWithoutCart_detailsInput = {
    where?: cartsWhereInput
    data: XOR<cartsUpdateWithoutCart_detailsInput, cartsUncheckedUpdateWithoutCart_detailsInput>
  }

  export type cartsUpdateWithoutCart_detailsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: usersUpdateOneRequiredWithoutCartsNestedInput
  }

  export type cartsUncheckedUpdateWithoutCart_detailsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type variant_productsUpsertWithoutCart_detailsInput = {
    update: XOR<variant_productsUpdateWithoutCart_detailsInput, variant_productsUncheckedUpdateWithoutCart_detailsInput>
    create: XOR<variant_productsCreateWithoutCart_detailsInput, variant_productsUncheckedCreateWithoutCart_detailsInput>
    where?: variant_productsWhereInput
  }

  export type variant_productsUpdateToOneWithWhereWithoutCart_detailsInput = {
    where?: variant_productsWhereInput
    data: XOR<variant_productsUpdateWithoutCart_detailsInput, variant_productsUncheckedUpdateWithoutCart_detailsInput>
  }

  export type variant_productsUpdateWithoutCart_detailsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    type_sale?: IntFieldUpdateOperationsInput | number
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    price_iva?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    sort?: IntFieldUpdateOperationsInput | number
    attributes?: NullableJsonNullValueInput | InputJsonValue
    status?: IntFieldUpdateOperationsInput | number
    iva?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    product_code?: StringFieldUpdateOperationsInput | string
    order_details?: order_detailsUpdateManyWithoutVariant_productsNestedInput
    products?: productsUpdateOneRequiredWithoutVariant_productsNestedInput
  }

  export type variant_productsUncheckedUpdateWithoutCart_detailsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    product_id?: BigIntFieldUpdateOperationsInput | bigint | number
    type_sale?: IntFieldUpdateOperationsInput | number
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    price_iva?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    sort?: IntFieldUpdateOperationsInput | number
    attributes?: NullableJsonNullValueInput | InputJsonValue
    status?: IntFieldUpdateOperationsInput | number
    iva?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    product_code?: StringFieldUpdateOperationsInput | string
    order_details?: order_detailsUncheckedUpdateManyWithoutVariant_productsNestedInput
  }

  export type cart_detailsCreateWithoutCartsInput = {
    id?: bigint | number
    quantity: number
    created_at?: Date | string
    variant_products?: variant_productsCreateNestedOneWithoutCart_detailsInput
  }

  export type cart_detailsUncheckedCreateWithoutCartsInput = {
    id?: bigint | number
    variant_products_id?: bigint | number | null
    quantity: number
    created_at?: Date | string
  }

  export type cart_detailsCreateOrConnectWithoutCartsInput = {
    where: cart_detailsWhereUniqueInput
    create: XOR<cart_detailsCreateWithoutCartsInput, cart_detailsUncheckedCreateWithoutCartsInput>
  }

  export type cart_detailsCreateManyCartsInputEnvelope = {
    data: cart_detailsCreateManyCartsInput | cart_detailsCreateManyCartsInput[]
    skipDuplicates?: boolean
  }

  export type usersCreateWithoutCartsInput = {
    id?: string
    user_id?: string | null
    first_name?: string | null
    last_name?: string | null
    username?: string | null
    password: string
    email?: string | null
    telephone?: string | null
    status?: $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    updated_at?: Date | string | null
    role: $Enums.UserRole
    cif?: string | null
    categories?: categoriesCreateNestedManyWithoutUsersInput
    chat_participants?: chat_participantsCreateNestedManyWithoutUsersInput
    configurations?: configurationsCreateNestedManyWithoutUsersInput
    deliveries?: deliveriesCreateNestedManyWithoutUsersInput
    direction?: directionCreateNestedManyWithoutUsersInput
    discounts?: discountsCreateNestedManyWithoutUsersInput
    messages?: messagesCreateNestedManyWithoutUsersInput
    notifications?: notificationsCreateNestedManyWithoutUsersInput
    orders_orders_retailer_idTousers?: ordersCreateNestedManyWithoutUsers_orders_retailer_idTousersInput
    orders_orders_wholesaler_idTousers?: ordersCreateNestedManyWithoutUsers_orders_wholesaler_idTousersInput
    products?: productsCreateNestedManyWithoutUsersInput
    user_sessions?: user_sessionsCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutCartsInput = {
    id?: string
    user_id?: string | null
    first_name?: string | null
    last_name?: string | null
    username?: string | null
    password: string
    email?: string | null
    telephone?: string | null
    status?: $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    updated_at?: Date | string | null
    role: $Enums.UserRole
    cif?: string | null
    categories?: categoriesUncheckedCreateNestedManyWithoutUsersInput
    chat_participants?: chat_participantsUncheckedCreateNestedManyWithoutUsersInput
    configurations?: configurationsUncheckedCreateNestedManyWithoutUsersInput
    deliveries?: deliveriesUncheckedCreateNestedManyWithoutUsersInput
    direction?: directionUncheckedCreateNestedManyWithoutUsersInput
    discounts?: discountsUncheckedCreateNestedManyWithoutUsersInput
    messages?: messagesUncheckedCreateNestedManyWithoutUsersInput
    notifications?: notificationsUncheckedCreateNestedManyWithoutUsersInput
    orders_orders_retailer_idTousers?: ordersUncheckedCreateNestedManyWithoutUsers_orders_retailer_idTousersInput
    orders_orders_wholesaler_idTousers?: ordersUncheckedCreateNestedManyWithoutUsers_orders_wholesaler_idTousersInput
    products?: productsUncheckedCreateNestedManyWithoutUsersInput
    user_sessions?: user_sessionsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutCartsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutCartsInput, usersUncheckedCreateWithoutCartsInput>
  }

  export type cart_detailsUpsertWithWhereUniqueWithoutCartsInput = {
    where: cart_detailsWhereUniqueInput
    update: XOR<cart_detailsUpdateWithoutCartsInput, cart_detailsUncheckedUpdateWithoutCartsInput>
    create: XOR<cart_detailsCreateWithoutCartsInput, cart_detailsUncheckedCreateWithoutCartsInput>
  }

  export type cart_detailsUpdateWithWhereUniqueWithoutCartsInput = {
    where: cart_detailsWhereUniqueInput
    data: XOR<cart_detailsUpdateWithoutCartsInput, cart_detailsUncheckedUpdateWithoutCartsInput>
  }

  export type cart_detailsUpdateManyWithWhereWithoutCartsInput = {
    where: cart_detailsScalarWhereInput
    data: XOR<cart_detailsUpdateManyMutationInput, cart_detailsUncheckedUpdateManyWithoutCartsInput>
  }

  export type cart_detailsScalarWhereInput = {
    AND?: cart_detailsScalarWhereInput | cart_detailsScalarWhereInput[]
    OR?: cart_detailsScalarWhereInput[]
    NOT?: cart_detailsScalarWhereInput | cart_detailsScalarWhereInput[]
    id?: BigIntFilter<"cart_details"> | bigint | number
    cart_id?: BigIntFilter<"cart_details"> | bigint | number
    variant_products_id?: BigIntNullableFilter<"cart_details"> | bigint | number | null
    quantity?: IntFilter<"cart_details"> | number
    created_at?: DateTimeFilter<"cart_details"> | Date | string
  }

  export type usersUpsertWithoutCartsInput = {
    update: XOR<usersUpdateWithoutCartsInput, usersUncheckedUpdateWithoutCartsInput>
    create: XOR<usersCreateWithoutCartsInput, usersUncheckedCreateWithoutCartsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutCartsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutCartsInput, usersUncheckedUpdateWithoutCartsInput>
  }

  export type usersUpdateWithoutCartsInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telephone?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    cif?: NullableStringFieldUpdateOperationsInput | string | null
    categories?: categoriesUpdateManyWithoutUsersNestedInput
    chat_participants?: chat_participantsUpdateManyWithoutUsersNestedInput
    configurations?: configurationsUpdateManyWithoutUsersNestedInput
    deliveries?: deliveriesUpdateManyWithoutUsersNestedInput
    direction?: directionUpdateManyWithoutUsersNestedInput
    discounts?: discountsUpdateManyWithoutUsersNestedInput
    messages?: messagesUpdateManyWithoutUsersNestedInput
    notifications?: notificationsUpdateManyWithoutUsersNestedInput
    orders_orders_retailer_idTousers?: ordersUpdateManyWithoutUsers_orders_retailer_idTousersNestedInput
    orders_orders_wholesaler_idTousers?: ordersUpdateManyWithoutUsers_orders_wholesaler_idTousersNestedInput
    products?: productsUpdateManyWithoutUsersNestedInput
    user_sessions?: user_sessionsUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutCartsInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telephone?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    cif?: NullableStringFieldUpdateOperationsInput | string | null
    categories?: categoriesUncheckedUpdateManyWithoutUsersNestedInput
    chat_participants?: chat_participantsUncheckedUpdateManyWithoutUsersNestedInput
    configurations?: configurationsUncheckedUpdateManyWithoutUsersNestedInput
    deliveries?: deliveriesUncheckedUpdateManyWithoutUsersNestedInput
    direction?: directionUncheckedUpdateManyWithoutUsersNestedInput
    discounts?: discountsUncheckedUpdateManyWithoutUsersNestedInput
    messages?: messagesUncheckedUpdateManyWithoutUsersNestedInput
    notifications?: notificationsUncheckedUpdateManyWithoutUsersNestedInput
    orders_orders_retailer_idTousers?: ordersUncheckedUpdateManyWithoutUsers_orders_retailer_idTousersNestedInput
    orders_orders_wholesaler_idTousers?: ordersUncheckedUpdateManyWithoutUsers_orders_wholesaler_idTousersNestedInput
    products?: productsUncheckedUpdateManyWithoutUsersNestedInput
    user_sessions?: user_sessionsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type categoriesCreateWithoutOther_categoriesInput = {
    id?: bigint | number
    name: string
    iva?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string
    categories?: categoriesCreateNestedOneWithoutOther_categoriesInput
    users?: usersCreateNestedOneWithoutCategoriesInput
    products?: productsCreateNestedManyWithoutCategoriesInput
  }

  export type categoriesUncheckedCreateWithoutOther_categoriesInput = {
    id?: bigint | number
    user_id?: string | null
    name: string
    iva?: Decimal | DecimalJsLike | number | string | null
    parent_id?: bigint | number | null
    created_at?: Date | string
    products?: productsUncheckedCreateNestedManyWithoutCategoriesInput
  }

  export type categoriesCreateOrConnectWithoutOther_categoriesInput = {
    where: categoriesWhereUniqueInput
    create: XOR<categoriesCreateWithoutOther_categoriesInput, categoriesUncheckedCreateWithoutOther_categoriesInput>
  }

  export type categoriesCreateWithoutCategoriesInput = {
    id?: bigint | number
    name: string
    iva?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string
    other_categories?: categoriesCreateNestedManyWithoutCategoriesInput
    users?: usersCreateNestedOneWithoutCategoriesInput
    products?: productsCreateNestedManyWithoutCategoriesInput
  }

  export type categoriesUncheckedCreateWithoutCategoriesInput = {
    id?: bigint | number
    user_id?: string | null
    name: string
    iva?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string
    other_categories?: categoriesUncheckedCreateNestedManyWithoutCategoriesInput
    products?: productsUncheckedCreateNestedManyWithoutCategoriesInput
  }

  export type categoriesCreateOrConnectWithoutCategoriesInput = {
    where: categoriesWhereUniqueInput
    create: XOR<categoriesCreateWithoutCategoriesInput, categoriesUncheckedCreateWithoutCategoriesInput>
  }

  export type categoriesCreateManyCategoriesInputEnvelope = {
    data: categoriesCreateManyCategoriesInput | categoriesCreateManyCategoriesInput[]
    skipDuplicates?: boolean
  }

  export type usersCreateWithoutCategoriesInput = {
    id?: string
    user_id?: string | null
    first_name?: string | null
    last_name?: string | null
    username?: string | null
    password: string
    email?: string | null
    telephone?: string | null
    status?: $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    updated_at?: Date | string | null
    role: $Enums.UserRole
    cif?: string | null
    carts?: cartsCreateNestedManyWithoutUsersInput
    chat_participants?: chat_participantsCreateNestedManyWithoutUsersInput
    configurations?: configurationsCreateNestedManyWithoutUsersInput
    deliveries?: deliveriesCreateNestedManyWithoutUsersInput
    direction?: directionCreateNestedManyWithoutUsersInput
    discounts?: discountsCreateNestedManyWithoutUsersInput
    messages?: messagesCreateNestedManyWithoutUsersInput
    notifications?: notificationsCreateNestedManyWithoutUsersInput
    orders_orders_retailer_idTousers?: ordersCreateNestedManyWithoutUsers_orders_retailer_idTousersInput
    orders_orders_wholesaler_idTousers?: ordersCreateNestedManyWithoutUsers_orders_wholesaler_idTousersInput
    products?: productsCreateNestedManyWithoutUsersInput
    user_sessions?: user_sessionsCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutCategoriesInput = {
    id?: string
    user_id?: string | null
    first_name?: string | null
    last_name?: string | null
    username?: string | null
    password: string
    email?: string | null
    telephone?: string | null
    status?: $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    updated_at?: Date | string | null
    role: $Enums.UserRole
    cif?: string | null
    carts?: cartsUncheckedCreateNestedManyWithoutUsersInput
    chat_participants?: chat_participantsUncheckedCreateNestedManyWithoutUsersInput
    configurations?: configurationsUncheckedCreateNestedManyWithoutUsersInput
    deliveries?: deliveriesUncheckedCreateNestedManyWithoutUsersInput
    direction?: directionUncheckedCreateNestedManyWithoutUsersInput
    discounts?: discountsUncheckedCreateNestedManyWithoutUsersInput
    messages?: messagesUncheckedCreateNestedManyWithoutUsersInput
    notifications?: notificationsUncheckedCreateNestedManyWithoutUsersInput
    orders_orders_retailer_idTousers?: ordersUncheckedCreateNestedManyWithoutUsers_orders_retailer_idTousersInput
    orders_orders_wholesaler_idTousers?: ordersUncheckedCreateNestedManyWithoutUsers_orders_wholesaler_idTousersInput
    products?: productsUncheckedCreateNestedManyWithoutUsersInput
    user_sessions?: user_sessionsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutCategoriesInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutCategoriesInput, usersUncheckedCreateWithoutCategoriesInput>
  }

  export type productsCreateWithoutCategoriesInput = {
    id?: bigint | number
    name: string
    title?: string | null
    description?: string | null
    iva: Decimal | DecimalJsLike | number | string
    status?: number
    created_at?: Date | string
    product_code: string
    users: usersCreateNestedOneWithoutProductsInput
    products_files?: products_filesCreateNestedManyWithoutProductsInput
    variant_products?: variant_productsCreateNestedManyWithoutProductsInput
  }

  export type productsUncheckedCreateWithoutCategoriesInput = {
    id?: bigint | number
    user_id: string
    name: string
    title?: string | null
    description?: string | null
    iva: Decimal | DecimalJsLike | number | string
    status?: number
    created_at?: Date | string
    product_code: string
    products_files?: products_filesUncheckedCreateNestedManyWithoutProductsInput
    variant_products?: variant_productsUncheckedCreateNestedManyWithoutProductsInput
  }

  export type productsCreateOrConnectWithoutCategoriesInput = {
    where: productsWhereUniqueInput
    create: XOR<productsCreateWithoutCategoriesInput, productsUncheckedCreateWithoutCategoriesInput>
  }

  export type productsCreateManyCategoriesInputEnvelope = {
    data: productsCreateManyCategoriesInput | productsCreateManyCategoriesInput[]
    skipDuplicates?: boolean
  }

  export type categoriesUpsertWithoutOther_categoriesInput = {
    update: XOR<categoriesUpdateWithoutOther_categoriesInput, categoriesUncheckedUpdateWithoutOther_categoriesInput>
    create: XOR<categoriesCreateWithoutOther_categoriesInput, categoriesUncheckedCreateWithoutOther_categoriesInput>
    where?: categoriesWhereInput
  }

  export type categoriesUpdateToOneWithWhereWithoutOther_categoriesInput = {
    where?: categoriesWhereInput
    data: XOR<categoriesUpdateWithoutOther_categoriesInput, categoriesUncheckedUpdateWithoutOther_categoriesInput>
  }

  export type categoriesUpdateWithoutOther_categoriesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    iva?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    categories?: categoriesUpdateOneWithoutOther_categoriesNestedInput
    users?: usersUpdateOneWithoutCategoriesNestedInput
    products?: productsUpdateManyWithoutCategoriesNestedInput
  }

  export type categoriesUncheckedUpdateWithoutOther_categoriesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    iva?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    parent_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    products?: productsUncheckedUpdateManyWithoutCategoriesNestedInput
  }

  export type categoriesUpsertWithWhereUniqueWithoutCategoriesInput = {
    where: categoriesWhereUniqueInput
    update: XOR<categoriesUpdateWithoutCategoriesInput, categoriesUncheckedUpdateWithoutCategoriesInput>
    create: XOR<categoriesCreateWithoutCategoriesInput, categoriesUncheckedCreateWithoutCategoriesInput>
  }

  export type categoriesUpdateWithWhereUniqueWithoutCategoriesInput = {
    where: categoriesWhereUniqueInput
    data: XOR<categoriesUpdateWithoutCategoriesInput, categoriesUncheckedUpdateWithoutCategoriesInput>
  }

  export type categoriesUpdateManyWithWhereWithoutCategoriesInput = {
    where: categoriesScalarWhereInput
    data: XOR<categoriesUpdateManyMutationInput, categoriesUncheckedUpdateManyWithoutCategoriesInput>
  }

  export type categoriesScalarWhereInput = {
    AND?: categoriesScalarWhereInput | categoriesScalarWhereInput[]
    OR?: categoriesScalarWhereInput[]
    NOT?: categoriesScalarWhereInput | categoriesScalarWhereInput[]
    id?: BigIntFilter<"categories"> | bigint | number
    user_id?: UuidNullableFilter<"categories"> | string | null
    name?: StringFilter<"categories"> | string
    iva?: DecimalNullableFilter<"categories"> | Decimal | DecimalJsLike | number | string | null
    parent_id?: BigIntNullableFilter<"categories"> | bigint | number | null
    created_at?: DateTimeFilter<"categories"> | Date | string
  }

  export type usersUpsertWithoutCategoriesInput = {
    update: XOR<usersUpdateWithoutCategoriesInput, usersUncheckedUpdateWithoutCategoriesInput>
    create: XOR<usersCreateWithoutCategoriesInput, usersUncheckedCreateWithoutCategoriesInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutCategoriesInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutCategoriesInput, usersUncheckedUpdateWithoutCategoriesInput>
  }

  export type usersUpdateWithoutCategoriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telephone?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    cif?: NullableStringFieldUpdateOperationsInput | string | null
    carts?: cartsUpdateManyWithoutUsersNestedInput
    chat_participants?: chat_participantsUpdateManyWithoutUsersNestedInput
    configurations?: configurationsUpdateManyWithoutUsersNestedInput
    deliveries?: deliveriesUpdateManyWithoutUsersNestedInput
    direction?: directionUpdateManyWithoutUsersNestedInput
    discounts?: discountsUpdateManyWithoutUsersNestedInput
    messages?: messagesUpdateManyWithoutUsersNestedInput
    notifications?: notificationsUpdateManyWithoutUsersNestedInput
    orders_orders_retailer_idTousers?: ordersUpdateManyWithoutUsers_orders_retailer_idTousersNestedInput
    orders_orders_wholesaler_idTousers?: ordersUpdateManyWithoutUsers_orders_wholesaler_idTousersNestedInput
    products?: productsUpdateManyWithoutUsersNestedInput
    user_sessions?: user_sessionsUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutCategoriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telephone?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    cif?: NullableStringFieldUpdateOperationsInput | string | null
    carts?: cartsUncheckedUpdateManyWithoutUsersNestedInput
    chat_participants?: chat_participantsUncheckedUpdateManyWithoutUsersNestedInput
    configurations?: configurationsUncheckedUpdateManyWithoutUsersNestedInput
    deliveries?: deliveriesUncheckedUpdateManyWithoutUsersNestedInput
    direction?: directionUncheckedUpdateManyWithoutUsersNestedInput
    discounts?: discountsUncheckedUpdateManyWithoutUsersNestedInput
    messages?: messagesUncheckedUpdateManyWithoutUsersNestedInput
    notifications?: notificationsUncheckedUpdateManyWithoutUsersNestedInput
    orders_orders_retailer_idTousers?: ordersUncheckedUpdateManyWithoutUsers_orders_retailer_idTousersNestedInput
    orders_orders_wholesaler_idTousers?: ordersUncheckedUpdateManyWithoutUsers_orders_wholesaler_idTousersNestedInput
    products?: productsUncheckedUpdateManyWithoutUsersNestedInput
    user_sessions?: user_sessionsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type productsUpsertWithWhereUniqueWithoutCategoriesInput = {
    where: productsWhereUniqueInput
    update: XOR<productsUpdateWithoutCategoriesInput, productsUncheckedUpdateWithoutCategoriesInput>
    create: XOR<productsCreateWithoutCategoriesInput, productsUncheckedCreateWithoutCategoriesInput>
  }

  export type productsUpdateWithWhereUniqueWithoutCategoriesInput = {
    where: productsWhereUniqueInput
    data: XOR<productsUpdateWithoutCategoriesInput, productsUncheckedUpdateWithoutCategoriesInput>
  }

  export type productsUpdateManyWithWhereWithoutCategoriesInput = {
    where: productsScalarWhereInput
    data: XOR<productsUpdateManyMutationInput, productsUncheckedUpdateManyWithoutCategoriesInput>
  }

  export type productsScalarWhereInput = {
    AND?: productsScalarWhereInput | productsScalarWhereInput[]
    OR?: productsScalarWhereInput[]
    NOT?: productsScalarWhereInput | productsScalarWhereInput[]
    id?: BigIntFilter<"products"> | bigint | number
    user_id?: UuidFilter<"products"> | string
    name?: StringFilter<"products"> | string
    title?: StringNullableFilter<"products"> | string | null
    description?: StringNullableFilter<"products"> | string | null
    iva?: DecimalFilter<"products"> | Decimal | DecimalJsLike | number | string
    category_id?: BigIntFilter<"products"> | bigint | number
    status?: IntFilter<"products"> | number
    created_at?: DateTimeFilter<"products"> | Date | string
    product_code?: StringFilter<"products"> | string
  }

  export type chat_participantsCreateWithoutChat_panelsInput = {
    created_at?: Date | string | null
    users: usersCreateNestedOneWithoutChat_participantsInput
  }

  export type chat_participantsUncheckedCreateWithoutChat_panelsInput = {
    user_id: string
    created_at?: Date | string | null
  }

  export type chat_participantsCreateOrConnectWithoutChat_panelsInput = {
    where: chat_participantsWhereUniqueInput
    create: XOR<chat_participantsCreateWithoutChat_panelsInput, chat_participantsUncheckedCreateWithoutChat_panelsInput>
  }

  export type chat_participantsCreateManyChat_panelsInputEnvelope = {
    data: chat_participantsCreateManyChat_panelsInput | chat_participantsCreateManyChat_panelsInput[]
    skipDuplicates?: boolean
  }

  export type messagesCreateWithoutChat_panelsInput = {
    id?: bigint | number
    content?: string | null
    created_at?: Date | string
    is_read?: boolean
    message_files?: message_filesCreateNestedManyWithoutMessagesInput
    messages?: messagesCreateNestedOneWithoutOther_messagesInput
    other_messages?: messagesCreateNestedManyWithoutMessagesInput
    users?: usersCreateNestedOneWithoutMessagesInput
  }

  export type messagesUncheckedCreateWithoutChat_panelsInput = {
    id?: bigint | number
    sender_id?: string | null
    reply_to?: bigint | number | null
    content?: string | null
    created_at?: Date | string
    is_read?: boolean
    message_files?: message_filesUncheckedCreateNestedManyWithoutMessagesInput
    other_messages?: messagesUncheckedCreateNestedManyWithoutMessagesInput
  }

  export type messagesCreateOrConnectWithoutChat_panelsInput = {
    where: messagesWhereUniqueInput
    create: XOR<messagesCreateWithoutChat_panelsInput, messagesUncheckedCreateWithoutChat_panelsInput>
  }

  export type messagesCreateManyChat_panelsInputEnvelope = {
    data: messagesCreateManyChat_panelsInput | messagesCreateManyChat_panelsInput[]
    skipDuplicates?: boolean
  }

  export type chat_participantsUpsertWithWhereUniqueWithoutChat_panelsInput = {
    where: chat_participantsWhereUniqueInput
    update: XOR<chat_participantsUpdateWithoutChat_panelsInput, chat_participantsUncheckedUpdateWithoutChat_panelsInput>
    create: XOR<chat_participantsCreateWithoutChat_panelsInput, chat_participantsUncheckedCreateWithoutChat_panelsInput>
  }

  export type chat_participantsUpdateWithWhereUniqueWithoutChat_panelsInput = {
    where: chat_participantsWhereUniqueInput
    data: XOR<chat_participantsUpdateWithoutChat_panelsInput, chat_participantsUncheckedUpdateWithoutChat_panelsInput>
  }

  export type chat_participantsUpdateManyWithWhereWithoutChat_panelsInput = {
    where: chat_participantsScalarWhereInput
    data: XOR<chat_participantsUpdateManyMutationInput, chat_participantsUncheckedUpdateManyWithoutChat_panelsInput>
  }

  export type chat_participantsScalarWhereInput = {
    AND?: chat_participantsScalarWhereInput | chat_participantsScalarWhereInput[]
    OR?: chat_participantsScalarWhereInput[]
    NOT?: chat_participantsScalarWhereInput | chat_participantsScalarWhereInput[]
    user_id?: UuidFilter<"chat_participants"> | string
    chat_panel_id?: BigIntFilter<"chat_participants"> | bigint | number
    created_at?: DateTimeNullableFilter<"chat_participants"> | Date | string | null
  }

  export type messagesUpsertWithWhereUniqueWithoutChat_panelsInput = {
    where: messagesWhereUniqueInput
    update: XOR<messagesUpdateWithoutChat_panelsInput, messagesUncheckedUpdateWithoutChat_panelsInput>
    create: XOR<messagesCreateWithoutChat_panelsInput, messagesUncheckedCreateWithoutChat_panelsInput>
  }

  export type messagesUpdateWithWhereUniqueWithoutChat_panelsInput = {
    where: messagesWhereUniqueInput
    data: XOR<messagesUpdateWithoutChat_panelsInput, messagesUncheckedUpdateWithoutChat_panelsInput>
  }

  export type messagesUpdateManyWithWhereWithoutChat_panelsInput = {
    where: messagesScalarWhereInput
    data: XOR<messagesUpdateManyMutationInput, messagesUncheckedUpdateManyWithoutChat_panelsInput>
  }

  export type messagesScalarWhereInput = {
    AND?: messagesScalarWhereInput | messagesScalarWhereInput[]
    OR?: messagesScalarWhereInput[]
    NOT?: messagesScalarWhereInput | messagesScalarWhereInput[]
    id?: BigIntFilter<"messages"> | bigint | number
    chat_panel_id?: BigIntFilter<"messages"> | bigint | number
    sender_id?: UuidNullableFilter<"messages"> | string | null
    reply_to?: BigIntNullableFilter<"messages"> | bigint | number | null
    content?: StringNullableFilter<"messages"> | string | null
    created_at?: DateTimeFilter<"messages"> | Date | string
    is_read?: BoolFilter<"messages"> | boolean
  }

  export type chat_panelsCreateWithoutChat_participantsInput = {
    id?: bigint | number
    name: string
    created_at?: Date | string
    messages?: messagesCreateNestedManyWithoutChat_panelsInput
  }

  export type chat_panelsUncheckedCreateWithoutChat_participantsInput = {
    id?: bigint | number
    name: string
    created_at?: Date | string
    messages?: messagesUncheckedCreateNestedManyWithoutChat_panelsInput
  }

  export type chat_panelsCreateOrConnectWithoutChat_participantsInput = {
    where: chat_panelsWhereUniqueInput
    create: XOR<chat_panelsCreateWithoutChat_participantsInput, chat_panelsUncheckedCreateWithoutChat_participantsInput>
  }

  export type usersCreateWithoutChat_participantsInput = {
    id?: string
    user_id?: string | null
    first_name?: string | null
    last_name?: string | null
    username?: string | null
    password: string
    email?: string | null
    telephone?: string | null
    status?: $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    updated_at?: Date | string | null
    role: $Enums.UserRole
    cif?: string | null
    carts?: cartsCreateNestedManyWithoutUsersInput
    categories?: categoriesCreateNestedManyWithoutUsersInput
    configurations?: configurationsCreateNestedManyWithoutUsersInput
    deliveries?: deliveriesCreateNestedManyWithoutUsersInput
    direction?: directionCreateNestedManyWithoutUsersInput
    discounts?: discountsCreateNestedManyWithoutUsersInput
    messages?: messagesCreateNestedManyWithoutUsersInput
    notifications?: notificationsCreateNestedManyWithoutUsersInput
    orders_orders_retailer_idTousers?: ordersCreateNestedManyWithoutUsers_orders_retailer_idTousersInput
    orders_orders_wholesaler_idTousers?: ordersCreateNestedManyWithoutUsers_orders_wholesaler_idTousersInput
    products?: productsCreateNestedManyWithoutUsersInput
    user_sessions?: user_sessionsCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutChat_participantsInput = {
    id?: string
    user_id?: string | null
    first_name?: string | null
    last_name?: string | null
    username?: string | null
    password: string
    email?: string | null
    telephone?: string | null
    status?: $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    updated_at?: Date | string | null
    role: $Enums.UserRole
    cif?: string | null
    carts?: cartsUncheckedCreateNestedManyWithoutUsersInput
    categories?: categoriesUncheckedCreateNestedManyWithoutUsersInput
    configurations?: configurationsUncheckedCreateNestedManyWithoutUsersInput
    deliveries?: deliveriesUncheckedCreateNestedManyWithoutUsersInput
    direction?: directionUncheckedCreateNestedManyWithoutUsersInput
    discounts?: discountsUncheckedCreateNestedManyWithoutUsersInput
    messages?: messagesUncheckedCreateNestedManyWithoutUsersInput
    notifications?: notificationsUncheckedCreateNestedManyWithoutUsersInput
    orders_orders_retailer_idTousers?: ordersUncheckedCreateNestedManyWithoutUsers_orders_retailer_idTousersInput
    orders_orders_wholesaler_idTousers?: ordersUncheckedCreateNestedManyWithoutUsers_orders_wholesaler_idTousersInput
    products?: productsUncheckedCreateNestedManyWithoutUsersInput
    user_sessions?: user_sessionsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutChat_participantsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutChat_participantsInput, usersUncheckedCreateWithoutChat_participantsInput>
  }

  export type chat_panelsUpsertWithoutChat_participantsInput = {
    update: XOR<chat_panelsUpdateWithoutChat_participantsInput, chat_panelsUncheckedUpdateWithoutChat_participantsInput>
    create: XOR<chat_panelsCreateWithoutChat_participantsInput, chat_panelsUncheckedCreateWithoutChat_participantsInput>
    where?: chat_panelsWhereInput
  }

  export type chat_panelsUpdateToOneWithWhereWithoutChat_participantsInput = {
    where?: chat_panelsWhereInput
    data: XOR<chat_panelsUpdateWithoutChat_participantsInput, chat_panelsUncheckedUpdateWithoutChat_participantsInput>
  }

  export type chat_panelsUpdateWithoutChat_participantsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    messages?: messagesUpdateManyWithoutChat_panelsNestedInput
  }

  export type chat_panelsUncheckedUpdateWithoutChat_participantsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    messages?: messagesUncheckedUpdateManyWithoutChat_panelsNestedInput
  }

  export type usersUpsertWithoutChat_participantsInput = {
    update: XOR<usersUpdateWithoutChat_participantsInput, usersUncheckedUpdateWithoutChat_participantsInput>
    create: XOR<usersCreateWithoutChat_participantsInput, usersUncheckedCreateWithoutChat_participantsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutChat_participantsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutChat_participantsInput, usersUncheckedUpdateWithoutChat_participantsInput>
  }

  export type usersUpdateWithoutChat_participantsInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telephone?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    cif?: NullableStringFieldUpdateOperationsInput | string | null
    carts?: cartsUpdateManyWithoutUsersNestedInput
    categories?: categoriesUpdateManyWithoutUsersNestedInput
    configurations?: configurationsUpdateManyWithoutUsersNestedInput
    deliveries?: deliveriesUpdateManyWithoutUsersNestedInput
    direction?: directionUpdateManyWithoutUsersNestedInput
    discounts?: discountsUpdateManyWithoutUsersNestedInput
    messages?: messagesUpdateManyWithoutUsersNestedInput
    notifications?: notificationsUpdateManyWithoutUsersNestedInput
    orders_orders_retailer_idTousers?: ordersUpdateManyWithoutUsers_orders_retailer_idTousersNestedInput
    orders_orders_wholesaler_idTousers?: ordersUpdateManyWithoutUsers_orders_wholesaler_idTousersNestedInput
    products?: productsUpdateManyWithoutUsersNestedInput
    user_sessions?: user_sessionsUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutChat_participantsInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telephone?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    cif?: NullableStringFieldUpdateOperationsInput | string | null
    carts?: cartsUncheckedUpdateManyWithoutUsersNestedInput
    categories?: categoriesUncheckedUpdateManyWithoutUsersNestedInput
    configurations?: configurationsUncheckedUpdateManyWithoutUsersNestedInput
    deliveries?: deliveriesUncheckedUpdateManyWithoutUsersNestedInput
    direction?: directionUncheckedUpdateManyWithoutUsersNestedInput
    discounts?: discountsUncheckedUpdateManyWithoutUsersNestedInput
    messages?: messagesUncheckedUpdateManyWithoutUsersNestedInput
    notifications?: notificationsUncheckedUpdateManyWithoutUsersNestedInput
    orders_orders_retailer_idTousers?: ordersUncheckedUpdateManyWithoutUsers_orders_retailer_idTousersNestedInput
    orders_orders_wholesaler_idTousers?: ordersUncheckedUpdateManyWithoutUsers_orders_wholesaler_idTousersNestedInput
    products?: productsUncheckedUpdateManyWithoutUsersNestedInput
    user_sessions?: user_sessionsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type usersCreateWithoutConfigurationsInput = {
    id?: string
    user_id?: string | null
    first_name?: string | null
    last_name?: string | null
    username?: string | null
    password: string
    email?: string | null
    telephone?: string | null
    status?: $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    updated_at?: Date | string | null
    role: $Enums.UserRole
    cif?: string | null
    carts?: cartsCreateNestedManyWithoutUsersInput
    categories?: categoriesCreateNestedManyWithoutUsersInput
    chat_participants?: chat_participantsCreateNestedManyWithoutUsersInput
    deliveries?: deliveriesCreateNestedManyWithoutUsersInput
    direction?: directionCreateNestedManyWithoutUsersInput
    discounts?: discountsCreateNestedManyWithoutUsersInput
    messages?: messagesCreateNestedManyWithoutUsersInput
    notifications?: notificationsCreateNestedManyWithoutUsersInput
    orders_orders_retailer_idTousers?: ordersCreateNestedManyWithoutUsers_orders_retailer_idTousersInput
    orders_orders_wholesaler_idTousers?: ordersCreateNestedManyWithoutUsers_orders_wholesaler_idTousersInput
    products?: productsCreateNestedManyWithoutUsersInput
    user_sessions?: user_sessionsCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutConfigurationsInput = {
    id?: string
    user_id?: string | null
    first_name?: string | null
    last_name?: string | null
    username?: string | null
    password: string
    email?: string | null
    telephone?: string | null
    status?: $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    updated_at?: Date | string | null
    role: $Enums.UserRole
    cif?: string | null
    carts?: cartsUncheckedCreateNestedManyWithoutUsersInput
    categories?: categoriesUncheckedCreateNestedManyWithoutUsersInput
    chat_participants?: chat_participantsUncheckedCreateNestedManyWithoutUsersInput
    deliveries?: deliveriesUncheckedCreateNestedManyWithoutUsersInput
    direction?: directionUncheckedCreateNestedManyWithoutUsersInput
    discounts?: discountsUncheckedCreateNestedManyWithoutUsersInput
    messages?: messagesUncheckedCreateNestedManyWithoutUsersInput
    notifications?: notificationsUncheckedCreateNestedManyWithoutUsersInput
    orders_orders_retailer_idTousers?: ordersUncheckedCreateNestedManyWithoutUsers_orders_retailer_idTousersInput
    orders_orders_wholesaler_idTousers?: ordersUncheckedCreateNestedManyWithoutUsers_orders_wholesaler_idTousersInput
    products?: productsUncheckedCreateNestedManyWithoutUsersInput
    user_sessions?: user_sessionsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutConfigurationsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutConfigurationsInput, usersUncheckedCreateWithoutConfigurationsInput>
  }

  export type usersUpsertWithoutConfigurationsInput = {
    update: XOR<usersUpdateWithoutConfigurationsInput, usersUncheckedUpdateWithoutConfigurationsInput>
    create: XOR<usersCreateWithoutConfigurationsInput, usersUncheckedCreateWithoutConfigurationsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutConfigurationsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutConfigurationsInput, usersUncheckedUpdateWithoutConfigurationsInput>
  }

  export type usersUpdateWithoutConfigurationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telephone?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    cif?: NullableStringFieldUpdateOperationsInput | string | null
    carts?: cartsUpdateManyWithoutUsersNestedInput
    categories?: categoriesUpdateManyWithoutUsersNestedInput
    chat_participants?: chat_participantsUpdateManyWithoutUsersNestedInput
    deliveries?: deliveriesUpdateManyWithoutUsersNestedInput
    direction?: directionUpdateManyWithoutUsersNestedInput
    discounts?: discountsUpdateManyWithoutUsersNestedInput
    messages?: messagesUpdateManyWithoutUsersNestedInput
    notifications?: notificationsUpdateManyWithoutUsersNestedInput
    orders_orders_retailer_idTousers?: ordersUpdateManyWithoutUsers_orders_retailer_idTousersNestedInput
    orders_orders_wholesaler_idTousers?: ordersUpdateManyWithoutUsers_orders_wholesaler_idTousersNestedInput
    products?: productsUpdateManyWithoutUsersNestedInput
    user_sessions?: user_sessionsUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutConfigurationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telephone?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    cif?: NullableStringFieldUpdateOperationsInput | string | null
    carts?: cartsUncheckedUpdateManyWithoutUsersNestedInput
    categories?: categoriesUncheckedUpdateManyWithoutUsersNestedInput
    chat_participants?: chat_participantsUncheckedUpdateManyWithoutUsersNestedInput
    deliveries?: deliveriesUncheckedUpdateManyWithoutUsersNestedInput
    direction?: directionUncheckedUpdateManyWithoutUsersNestedInput
    discounts?: discountsUncheckedUpdateManyWithoutUsersNestedInput
    messages?: messagesUncheckedUpdateManyWithoutUsersNestedInput
    notifications?: notificationsUncheckedUpdateManyWithoutUsersNestedInput
    orders_orders_retailer_idTousers?: ordersUncheckedUpdateManyWithoutUsers_orders_retailer_idTousersNestedInput
    orders_orders_wholesaler_idTousers?: ordersUncheckedUpdateManyWithoutUsers_orders_wholesaler_idTousersNestedInput
    products?: productsUncheckedUpdateManyWithoutUsersNestedInput
    user_sessions?: user_sessionsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type usersCreateWithoutDeliveriesInput = {
    id?: string
    user_id?: string | null
    first_name?: string | null
    last_name?: string | null
    username?: string | null
    password: string
    email?: string | null
    telephone?: string | null
    status?: $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    updated_at?: Date | string | null
    role: $Enums.UserRole
    cif?: string | null
    carts?: cartsCreateNestedManyWithoutUsersInput
    categories?: categoriesCreateNestedManyWithoutUsersInput
    chat_participants?: chat_participantsCreateNestedManyWithoutUsersInput
    configurations?: configurationsCreateNestedManyWithoutUsersInput
    direction?: directionCreateNestedManyWithoutUsersInput
    discounts?: discountsCreateNestedManyWithoutUsersInput
    messages?: messagesCreateNestedManyWithoutUsersInput
    notifications?: notificationsCreateNestedManyWithoutUsersInput
    orders_orders_retailer_idTousers?: ordersCreateNestedManyWithoutUsers_orders_retailer_idTousersInput
    orders_orders_wholesaler_idTousers?: ordersCreateNestedManyWithoutUsers_orders_wholesaler_idTousersInput
    products?: productsCreateNestedManyWithoutUsersInput
    user_sessions?: user_sessionsCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutDeliveriesInput = {
    id?: string
    user_id?: string | null
    first_name?: string | null
    last_name?: string | null
    username?: string | null
    password: string
    email?: string | null
    telephone?: string | null
    status?: $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    updated_at?: Date | string | null
    role: $Enums.UserRole
    cif?: string | null
    carts?: cartsUncheckedCreateNestedManyWithoutUsersInput
    categories?: categoriesUncheckedCreateNestedManyWithoutUsersInput
    chat_participants?: chat_participantsUncheckedCreateNestedManyWithoutUsersInput
    configurations?: configurationsUncheckedCreateNestedManyWithoutUsersInput
    direction?: directionUncheckedCreateNestedManyWithoutUsersInput
    discounts?: discountsUncheckedCreateNestedManyWithoutUsersInput
    messages?: messagesUncheckedCreateNestedManyWithoutUsersInput
    notifications?: notificationsUncheckedCreateNestedManyWithoutUsersInput
    orders_orders_retailer_idTousers?: ordersUncheckedCreateNestedManyWithoutUsers_orders_retailer_idTousersInput
    orders_orders_wholesaler_idTousers?: ordersUncheckedCreateNestedManyWithoutUsers_orders_wholesaler_idTousersInput
    products?: productsUncheckedCreateNestedManyWithoutUsersInput
    user_sessions?: user_sessionsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutDeliveriesInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutDeliveriesInput, usersUncheckedCreateWithoutDeliveriesInput>
  }

  export type delivery_timelineCreateWithoutDeliveriesInput = {
    id?: bigint | number
    status: $Enums.DeliveryStatus
    notes?: string | null
    created_at?: Date | string
    latitude: number
    longitude: number
  }

  export type delivery_timelineUncheckedCreateWithoutDeliveriesInput = {
    id?: bigint | number
    status: $Enums.DeliveryStatus
    notes?: string | null
    created_at?: Date | string
    latitude: number
    longitude: number
  }

  export type delivery_timelineCreateOrConnectWithoutDeliveriesInput = {
    where: delivery_timelineWhereUniqueInput
    create: XOR<delivery_timelineCreateWithoutDeliveriesInput, delivery_timelineUncheckedCreateWithoutDeliveriesInput>
  }

  export type delivery_timelineCreateManyDeliveriesInputEnvelope = {
    data: delivery_timelineCreateManyDeliveriesInput | delivery_timelineCreateManyDeliveriesInput[]
    skipDuplicates?: boolean
  }

  export type usersUpsertWithoutDeliveriesInput = {
    update: XOR<usersUpdateWithoutDeliveriesInput, usersUncheckedUpdateWithoutDeliveriesInput>
    create: XOR<usersCreateWithoutDeliveriesInput, usersUncheckedCreateWithoutDeliveriesInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutDeliveriesInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutDeliveriesInput, usersUncheckedUpdateWithoutDeliveriesInput>
  }

  export type usersUpdateWithoutDeliveriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telephone?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    cif?: NullableStringFieldUpdateOperationsInput | string | null
    carts?: cartsUpdateManyWithoutUsersNestedInput
    categories?: categoriesUpdateManyWithoutUsersNestedInput
    chat_participants?: chat_participantsUpdateManyWithoutUsersNestedInput
    configurations?: configurationsUpdateManyWithoutUsersNestedInput
    direction?: directionUpdateManyWithoutUsersNestedInput
    discounts?: discountsUpdateManyWithoutUsersNestedInput
    messages?: messagesUpdateManyWithoutUsersNestedInput
    notifications?: notificationsUpdateManyWithoutUsersNestedInput
    orders_orders_retailer_idTousers?: ordersUpdateManyWithoutUsers_orders_retailer_idTousersNestedInput
    orders_orders_wholesaler_idTousers?: ordersUpdateManyWithoutUsers_orders_wholesaler_idTousersNestedInput
    products?: productsUpdateManyWithoutUsersNestedInput
    user_sessions?: user_sessionsUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutDeliveriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telephone?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    cif?: NullableStringFieldUpdateOperationsInput | string | null
    carts?: cartsUncheckedUpdateManyWithoutUsersNestedInput
    categories?: categoriesUncheckedUpdateManyWithoutUsersNestedInput
    chat_participants?: chat_participantsUncheckedUpdateManyWithoutUsersNestedInput
    configurations?: configurationsUncheckedUpdateManyWithoutUsersNestedInput
    direction?: directionUncheckedUpdateManyWithoutUsersNestedInput
    discounts?: discountsUncheckedUpdateManyWithoutUsersNestedInput
    messages?: messagesUncheckedUpdateManyWithoutUsersNestedInput
    notifications?: notificationsUncheckedUpdateManyWithoutUsersNestedInput
    orders_orders_retailer_idTousers?: ordersUncheckedUpdateManyWithoutUsers_orders_retailer_idTousersNestedInput
    orders_orders_wholesaler_idTousers?: ordersUncheckedUpdateManyWithoutUsers_orders_wholesaler_idTousersNestedInput
    products?: productsUncheckedUpdateManyWithoutUsersNestedInput
    user_sessions?: user_sessionsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type delivery_timelineUpsertWithWhereUniqueWithoutDeliveriesInput = {
    where: delivery_timelineWhereUniqueInput
    update: XOR<delivery_timelineUpdateWithoutDeliveriesInput, delivery_timelineUncheckedUpdateWithoutDeliveriesInput>
    create: XOR<delivery_timelineCreateWithoutDeliveriesInput, delivery_timelineUncheckedCreateWithoutDeliveriesInput>
  }

  export type delivery_timelineUpdateWithWhereUniqueWithoutDeliveriesInput = {
    where: delivery_timelineWhereUniqueInput
    data: XOR<delivery_timelineUpdateWithoutDeliveriesInput, delivery_timelineUncheckedUpdateWithoutDeliveriesInput>
  }

  export type delivery_timelineUpdateManyWithWhereWithoutDeliveriesInput = {
    where: delivery_timelineScalarWhereInput
    data: XOR<delivery_timelineUpdateManyMutationInput, delivery_timelineUncheckedUpdateManyWithoutDeliveriesInput>
  }

  export type delivery_timelineScalarWhereInput = {
    AND?: delivery_timelineScalarWhereInput | delivery_timelineScalarWhereInput[]
    OR?: delivery_timelineScalarWhereInput[]
    NOT?: delivery_timelineScalarWhereInput | delivery_timelineScalarWhereInput[]
    id?: BigIntFilter<"delivery_timeline"> | bigint | number
    delivery_id?: BigIntNullableFilter<"delivery_timeline"> | bigint | number | null
    status?: EnumDeliveryStatusFilter<"delivery_timeline"> | $Enums.DeliveryStatus
    notes?: StringNullableFilter<"delivery_timeline"> | string | null
    created_at?: DateTimeFilter<"delivery_timeline"> | Date | string
    latitude?: FloatFilter<"delivery_timeline"> | number
    longitude?: FloatFilter<"delivery_timeline"> | number
  }

  export type deliveriesCreateWithoutDelivery_timelineInput = {
    id?: bigint | number
    order_id: bigint | number
    status?: $Enums.DeliveryStatus
    start_time?: Date | string
    end_time?: Date | string | null
    notes: string
    created_at?: Date | string
    updated_at?: Date | string | null
    latitude: number
    longitude: number
    users: usersCreateNestedOneWithoutDeliveriesInput
  }

  export type deliveriesUncheckedCreateWithoutDelivery_timelineInput = {
    id?: bigint | number
    order_id: bigint | number
    delivery_person: string
    status?: $Enums.DeliveryStatus
    start_time?: Date | string
    end_time?: Date | string | null
    notes: string
    created_at?: Date | string
    updated_at?: Date | string | null
    latitude: number
    longitude: number
  }

  export type deliveriesCreateOrConnectWithoutDelivery_timelineInput = {
    where: deliveriesWhereUniqueInput
    create: XOR<deliveriesCreateWithoutDelivery_timelineInput, deliveriesUncheckedCreateWithoutDelivery_timelineInput>
  }

  export type deliveriesUpsertWithoutDelivery_timelineInput = {
    update: XOR<deliveriesUpdateWithoutDelivery_timelineInput, deliveriesUncheckedUpdateWithoutDelivery_timelineInput>
    create: XOR<deliveriesCreateWithoutDelivery_timelineInput, deliveriesUncheckedCreateWithoutDelivery_timelineInput>
    where?: deliveriesWhereInput
  }

  export type deliveriesUpdateToOneWithWhereWithoutDelivery_timelineInput = {
    where?: deliveriesWhereInput
    data: XOR<deliveriesUpdateWithoutDelivery_timelineInput, deliveriesUncheckedUpdateWithoutDelivery_timelineInput>
  }

  export type deliveriesUpdateWithoutDelivery_timelineInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    order_id?: BigIntFieldUpdateOperationsInput | bigint | number
    status?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    start_time?: DateTimeFieldUpdateOperationsInput | Date | string
    end_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
    users?: usersUpdateOneRequiredWithoutDeliveriesNestedInput
  }

  export type deliveriesUncheckedUpdateWithoutDelivery_timelineInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    order_id?: BigIntFieldUpdateOperationsInput | bigint | number
    delivery_person?: StringFieldUpdateOperationsInput | string
    status?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    start_time?: DateTimeFieldUpdateOperationsInput | Date | string
    end_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
  }

  export type usersCreateWithoutDiscountsInput = {
    id?: string
    user_id?: string | null
    first_name?: string | null
    last_name?: string | null
    username?: string | null
    password: string
    email?: string | null
    telephone?: string | null
    status?: $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    updated_at?: Date | string | null
    role: $Enums.UserRole
    cif?: string | null
    carts?: cartsCreateNestedManyWithoutUsersInput
    categories?: categoriesCreateNestedManyWithoutUsersInput
    chat_participants?: chat_participantsCreateNestedManyWithoutUsersInput
    configurations?: configurationsCreateNestedManyWithoutUsersInput
    deliveries?: deliveriesCreateNestedManyWithoutUsersInput
    direction?: directionCreateNestedManyWithoutUsersInput
    messages?: messagesCreateNestedManyWithoutUsersInput
    notifications?: notificationsCreateNestedManyWithoutUsersInput
    orders_orders_retailer_idTousers?: ordersCreateNestedManyWithoutUsers_orders_retailer_idTousersInput
    orders_orders_wholesaler_idTousers?: ordersCreateNestedManyWithoutUsers_orders_wholesaler_idTousersInput
    products?: productsCreateNestedManyWithoutUsersInput
    user_sessions?: user_sessionsCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutDiscountsInput = {
    id?: string
    user_id?: string | null
    first_name?: string | null
    last_name?: string | null
    username?: string | null
    password: string
    email?: string | null
    telephone?: string | null
    status?: $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    updated_at?: Date | string | null
    role: $Enums.UserRole
    cif?: string | null
    carts?: cartsUncheckedCreateNestedManyWithoutUsersInput
    categories?: categoriesUncheckedCreateNestedManyWithoutUsersInput
    chat_participants?: chat_participantsUncheckedCreateNestedManyWithoutUsersInput
    configurations?: configurationsUncheckedCreateNestedManyWithoutUsersInput
    deliveries?: deliveriesUncheckedCreateNestedManyWithoutUsersInput
    direction?: directionUncheckedCreateNestedManyWithoutUsersInput
    messages?: messagesUncheckedCreateNestedManyWithoutUsersInput
    notifications?: notificationsUncheckedCreateNestedManyWithoutUsersInput
    orders_orders_retailer_idTousers?: ordersUncheckedCreateNestedManyWithoutUsers_orders_retailer_idTousersInput
    orders_orders_wholesaler_idTousers?: ordersUncheckedCreateNestedManyWithoutUsers_orders_wholesaler_idTousersInput
    products?: productsUncheckedCreateNestedManyWithoutUsersInput
    user_sessions?: user_sessionsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutDiscountsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutDiscountsInput, usersUncheckedCreateWithoutDiscountsInput>
  }

  export type usersUpsertWithoutDiscountsInput = {
    update: XOR<usersUpdateWithoutDiscountsInput, usersUncheckedUpdateWithoutDiscountsInput>
    create: XOR<usersCreateWithoutDiscountsInput, usersUncheckedCreateWithoutDiscountsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutDiscountsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutDiscountsInput, usersUncheckedUpdateWithoutDiscountsInput>
  }

  export type usersUpdateWithoutDiscountsInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telephone?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    cif?: NullableStringFieldUpdateOperationsInput | string | null
    carts?: cartsUpdateManyWithoutUsersNestedInput
    categories?: categoriesUpdateManyWithoutUsersNestedInput
    chat_participants?: chat_participantsUpdateManyWithoutUsersNestedInput
    configurations?: configurationsUpdateManyWithoutUsersNestedInput
    deliveries?: deliveriesUpdateManyWithoutUsersNestedInput
    direction?: directionUpdateManyWithoutUsersNestedInput
    messages?: messagesUpdateManyWithoutUsersNestedInput
    notifications?: notificationsUpdateManyWithoutUsersNestedInput
    orders_orders_retailer_idTousers?: ordersUpdateManyWithoutUsers_orders_retailer_idTousersNestedInput
    orders_orders_wholesaler_idTousers?: ordersUpdateManyWithoutUsers_orders_wholesaler_idTousersNestedInput
    products?: productsUpdateManyWithoutUsersNestedInput
    user_sessions?: user_sessionsUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutDiscountsInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telephone?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    cif?: NullableStringFieldUpdateOperationsInput | string | null
    carts?: cartsUncheckedUpdateManyWithoutUsersNestedInput
    categories?: categoriesUncheckedUpdateManyWithoutUsersNestedInput
    chat_participants?: chat_participantsUncheckedUpdateManyWithoutUsersNestedInput
    configurations?: configurationsUncheckedUpdateManyWithoutUsersNestedInput
    deliveries?: deliveriesUncheckedUpdateManyWithoutUsersNestedInput
    direction?: directionUncheckedUpdateManyWithoutUsersNestedInput
    messages?: messagesUncheckedUpdateManyWithoutUsersNestedInput
    notifications?: notificationsUncheckedUpdateManyWithoutUsersNestedInput
    orders_orders_retailer_idTousers?: ordersUncheckedUpdateManyWithoutUsers_orders_retailer_idTousersNestedInput
    orders_orders_wholesaler_idTousers?: ordersUncheckedUpdateManyWithoutUsers_orders_wholesaler_idTousersNestedInput
    products?: productsUncheckedUpdateManyWithoutUsersNestedInput
    user_sessions?: user_sessionsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type message_filesCreateWithoutFilesInput = {
    id?: bigint | number
    sort: number
    messages: messagesCreateNestedOneWithoutMessage_filesInput
  }

  export type message_filesUncheckedCreateWithoutFilesInput = {
    id?: bigint | number
    message_id: bigint | number
    sort: number
  }

  export type message_filesCreateOrConnectWithoutFilesInput = {
    where: message_filesWhereUniqueInput
    create: XOR<message_filesCreateWithoutFilesInput, message_filesUncheckedCreateWithoutFilesInput>
  }

  export type message_filesCreateManyFilesInputEnvelope = {
    data: message_filesCreateManyFilesInput | message_filesCreateManyFilesInput[]
    skipDuplicates?: boolean
  }

  export type products_filesCreateWithoutFilesInput = {
    id?: bigint | number
    sort: number
    products: productsCreateNestedOneWithoutProducts_filesInput
  }

  export type products_filesUncheckedCreateWithoutFilesInput = {
    id?: bigint | number
    product_id: bigint | number
    sort: number
  }

  export type products_filesCreateOrConnectWithoutFilesInput = {
    where: products_filesWhereUniqueInput
    create: XOR<products_filesCreateWithoutFilesInput, products_filesUncheckedCreateWithoutFilesInput>
  }

  export type products_filesCreateManyFilesInputEnvelope = {
    data: products_filesCreateManyFilesInput | products_filesCreateManyFilesInput[]
    skipDuplicates?: boolean
  }

  export type message_filesUpsertWithWhereUniqueWithoutFilesInput = {
    where: message_filesWhereUniqueInput
    update: XOR<message_filesUpdateWithoutFilesInput, message_filesUncheckedUpdateWithoutFilesInput>
    create: XOR<message_filesCreateWithoutFilesInput, message_filesUncheckedCreateWithoutFilesInput>
  }

  export type message_filesUpdateWithWhereUniqueWithoutFilesInput = {
    where: message_filesWhereUniqueInput
    data: XOR<message_filesUpdateWithoutFilesInput, message_filesUncheckedUpdateWithoutFilesInput>
  }

  export type message_filesUpdateManyWithWhereWithoutFilesInput = {
    where: message_filesScalarWhereInput
    data: XOR<message_filesUpdateManyMutationInput, message_filesUncheckedUpdateManyWithoutFilesInput>
  }

  export type message_filesScalarWhereInput = {
    AND?: message_filesScalarWhereInput | message_filesScalarWhereInput[]
    OR?: message_filesScalarWhereInput[]
    NOT?: message_filesScalarWhereInput | message_filesScalarWhereInput[]
    id?: BigIntFilter<"message_files"> | bigint | number
    message_id?: BigIntFilter<"message_files"> | bigint | number
    file_id?: BigIntFilter<"message_files"> | bigint | number
    sort?: IntFilter<"message_files"> | number
  }

  export type products_filesUpsertWithWhereUniqueWithoutFilesInput = {
    where: products_filesWhereUniqueInput
    update: XOR<products_filesUpdateWithoutFilesInput, products_filesUncheckedUpdateWithoutFilesInput>
    create: XOR<products_filesCreateWithoutFilesInput, products_filesUncheckedCreateWithoutFilesInput>
  }

  export type products_filesUpdateWithWhereUniqueWithoutFilesInput = {
    where: products_filesWhereUniqueInput
    data: XOR<products_filesUpdateWithoutFilesInput, products_filesUncheckedUpdateWithoutFilesInput>
  }

  export type products_filesUpdateManyWithWhereWithoutFilesInput = {
    where: products_filesScalarWhereInput
    data: XOR<products_filesUpdateManyMutationInput, products_filesUncheckedUpdateManyWithoutFilesInput>
  }

  export type products_filesScalarWhereInput = {
    AND?: products_filesScalarWhereInput | products_filesScalarWhereInput[]
    OR?: products_filesScalarWhereInput[]
    NOT?: products_filesScalarWhereInput | products_filesScalarWhereInput[]
    id?: BigIntFilter<"products_files"> | bigint | number
    product_id?: BigIntFilter<"products_files"> | bigint | number
    file_id?: BigIntFilter<"products_files"> | bigint | number
    sort?: IntFilter<"products_files"> | number
  }

  export type filesCreateWithoutMessage_filesInput = {
    id?: bigint | number
    file_name: string
    file_hash: string
    mime_type: string
    file_size: bigint | number
    url: string
    created_at?: Date | string
    uploaded_by?: bigint | number
    to_delete?: boolean
    products_files?: products_filesCreateNestedManyWithoutFilesInput
  }

  export type filesUncheckedCreateWithoutMessage_filesInput = {
    id?: bigint | number
    file_name: string
    file_hash: string
    mime_type: string
    file_size: bigint | number
    url: string
    created_at?: Date | string
    uploaded_by?: bigint | number
    to_delete?: boolean
    products_files?: products_filesUncheckedCreateNestedManyWithoutFilesInput
  }

  export type filesCreateOrConnectWithoutMessage_filesInput = {
    where: filesWhereUniqueInput
    create: XOR<filesCreateWithoutMessage_filesInput, filesUncheckedCreateWithoutMessage_filesInput>
  }

  export type messagesCreateWithoutMessage_filesInput = {
    id?: bigint | number
    content?: string | null
    created_at?: Date | string
    is_read?: boolean
    chat_panels: chat_panelsCreateNestedOneWithoutMessagesInput
    messages?: messagesCreateNestedOneWithoutOther_messagesInput
    other_messages?: messagesCreateNestedManyWithoutMessagesInput
    users?: usersCreateNestedOneWithoutMessagesInput
  }

  export type messagesUncheckedCreateWithoutMessage_filesInput = {
    id?: bigint | number
    chat_panel_id: bigint | number
    sender_id?: string | null
    reply_to?: bigint | number | null
    content?: string | null
    created_at?: Date | string
    is_read?: boolean
    other_messages?: messagesUncheckedCreateNestedManyWithoutMessagesInput
  }

  export type messagesCreateOrConnectWithoutMessage_filesInput = {
    where: messagesWhereUniqueInput
    create: XOR<messagesCreateWithoutMessage_filesInput, messagesUncheckedCreateWithoutMessage_filesInput>
  }

  export type filesUpsertWithoutMessage_filesInput = {
    update: XOR<filesUpdateWithoutMessage_filesInput, filesUncheckedUpdateWithoutMessage_filesInput>
    create: XOR<filesCreateWithoutMessage_filesInput, filesUncheckedCreateWithoutMessage_filesInput>
    where?: filesWhereInput
  }

  export type filesUpdateToOneWithWhereWithoutMessage_filesInput = {
    where?: filesWhereInput
    data: XOR<filesUpdateWithoutMessage_filesInput, filesUncheckedUpdateWithoutMessage_filesInput>
  }

  export type filesUpdateWithoutMessage_filesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    file_name?: StringFieldUpdateOperationsInput | string
    file_hash?: StringFieldUpdateOperationsInput | string
    mime_type?: StringFieldUpdateOperationsInput | string
    file_size?: BigIntFieldUpdateOperationsInput | bigint | number
    url?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    uploaded_by?: BigIntFieldUpdateOperationsInput | bigint | number
    to_delete?: BoolFieldUpdateOperationsInput | boolean
    products_files?: products_filesUpdateManyWithoutFilesNestedInput
  }

  export type filesUncheckedUpdateWithoutMessage_filesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    file_name?: StringFieldUpdateOperationsInput | string
    file_hash?: StringFieldUpdateOperationsInput | string
    mime_type?: StringFieldUpdateOperationsInput | string
    file_size?: BigIntFieldUpdateOperationsInput | bigint | number
    url?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    uploaded_by?: BigIntFieldUpdateOperationsInput | bigint | number
    to_delete?: BoolFieldUpdateOperationsInput | boolean
    products_files?: products_filesUncheckedUpdateManyWithoutFilesNestedInput
  }

  export type messagesUpsertWithoutMessage_filesInput = {
    update: XOR<messagesUpdateWithoutMessage_filesInput, messagesUncheckedUpdateWithoutMessage_filesInput>
    create: XOR<messagesCreateWithoutMessage_filesInput, messagesUncheckedCreateWithoutMessage_filesInput>
    where?: messagesWhereInput
  }

  export type messagesUpdateToOneWithWhereWithoutMessage_filesInput = {
    where?: messagesWhereInput
    data: XOR<messagesUpdateWithoutMessage_filesInput, messagesUncheckedUpdateWithoutMessage_filesInput>
  }

  export type messagesUpdateWithoutMessage_filesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_read?: BoolFieldUpdateOperationsInput | boolean
    chat_panels?: chat_panelsUpdateOneRequiredWithoutMessagesNestedInput
    messages?: messagesUpdateOneWithoutOther_messagesNestedInput
    other_messages?: messagesUpdateManyWithoutMessagesNestedInput
    users?: usersUpdateOneWithoutMessagesNestedInput
  }

  export type messagesUncheckedUpdateWithoutMessage_filesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    chat_panel_id?: BigIntFieldUpdateOperationsInput | bigint | number
    sender_id?: NullableStringFieldUpdateOperationsInput | string | null
    reply_to?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_read?: BoolFieldUpdateOperationsInput | boolean
    other_messages?: messagesUncheckedUpdateManyWithoutMessagesNestedInput
  }

  export type message_filesCreateWithoutMessagesInput = {
    id?: bigint | number
    sort: number
    files: filesCreateNestedOneWithoutMessage_filesInput
  }

  export type message_filesUncheckedCreateWithoutMessagesInput = {
    id?: bigint | number
    file_id: bigint | number
    sort: number
  }

  export type message_filesCreateOrConnectWithoutMessagesInput = {
    where: message_filesWhereUniqueInput
    create: XOR<message_filesCreateWithoutMessagesInput, message_filesUncheckedCreateWithoutMessagesInput>
  }

  export type message_filesCreateManyMessagesInputEnvelope = {
    data: message_filesCreateManyMessagesInput | message_filesCreateManyMessagesInput[]
    skipDuplicates?: boolean
  }

  export type chat_panelsCreateWithoutMessagesInput = {
    id?: bigint | number
    name: string
    created_at?: Date | string
    chat_participants?: chat_participantsCreateNestedManyWithoutChat_panelsInput
  }

  export type chat_panelsUncheckedCreateWithoutMessagesInput = {
    id?: bigint | number
    name: string
    created_at?: Date | string
    chat_participants?: chat_participantsUncheckedCreateNestedManyWithoutChat_panelsInput
  }

  export type chat_panelsCreateOrConnectWithoutMessagesInput = {
    where: chat_panelsWhereUniqueInput
    create: XOR<chat_panelsCreateWithoutMessagesInput, chat_panelsUncheckedCreateWithoutMessagesInput>
  }

  export type messagesCreateWithoutOther_messagesInput = {
    id?: bigint | number
    content?: string | null
    created_at?: Date | string
    is_read?: boolean
    message_files?: message_filesCreateNestedManyWithoutMessagesInput
    chat_panels: chat_panelsCreateNestedOneWithoutMessagesInput
    messages?: messagesCreateNestedOneWithoutOther_messagesInput
    users?: usersCreateNestedOneWithoutMessagesInput
  }

  export type messagesUncheckedCreateWithoutOther_messagesInput = {
    id?: bigint | number
    chat_panel_id: bigint | number
    sender_id?: string | null
    reply_to?: bigint | number | null
    content?: string | null
    created_at?: Date | string
    is_read?: boolean
    message_files?: message_filesUncheckedCreateNestedManyWithoutMessagesInput
  }

  export type messagesCreateOrConnectWithoutOther_messagesInput = {
    where: messagesWhereUniqueInput
    create: XOR<messagesCreateWithoutOther_messagesInput, messagesUncheckedCreateWithoutOther_messagesInput>
  }

  export type messagesCreateWithoutMessagesInput = {
    id?: bigint | number
    content?: string | null
    created_at?: Date | string
    is_read?: boolean
    message_files?: message_filesCreateNestedManyWithoutMessagesInput
    chat_panels: chat_panelsCreateNestedOneWithoutMessagesInput
    other_messages?: messagesCreateNestedManyWithoutMessagesInput
    users?: usersCreateNestedOneWithoutMessagesInput
  }

  export type messagesUncheckedCreateWithoutMessagesInput = {
    id?: bigint | number
    chat_panel_id: bigint | number
    sender_id?: string | null
    content?: string | null
    created_at?: Date | string
    is_read?: boolean
    message_files?: message_filesUncheckedCreateNestedManyWithoutMessagesInput
    other_messages?: messagesUncheckedCreateNestedManyWithoutMessagesInput
  }

  export type messagesCreateOrConnectWithoutMessagesInput = {
    where: messagesWhereUniqueInput
    create: XOR<messagesCreateWithoutMessagesInput, messagesUncheckedCreateWithoutMessagesInput>
  }

  export type messagesCreateManyMessagesInputEnvelope = {
    data: messagesCreateManyMessagesInput | messagesCreateManyMessagesInput[]
    skipDuplicates?: boolean
  }

  export type usersCreateWithoutMessagesInput = {
    id?: string
    user_id?: string | null
    first_name?: string | null
    last_name?: string | null
    username?: string | null
    password: string
    email?: string | null
    telephone?: string | null
    status?: $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    updated_at?: Date | string | null
    role: $Enums.UserRole
    cif?: string | null
    carts?: cartsCreateNestedManyWithoutUsersInput
    categories?: categoriesCreateNestedManyWithoutUsersInput
    chat_participants?: chat_participantsCreateNestedManyWithoutUsersInput
    configurations?: configurationsCreateNestedManyWithoutUsersInput
    deliveries?: deliveriesCreateNestedManyWithoutUsersInput
    direction?: directionCreateNestedManyWithoutUsersInput
    discounts?: discountsCreateNestedManyWithoutUsersInput
    notifications?: notificationsCreateNestedManyWithoutUsersInput
    orders_orders_retailer_idTousers?: ordersCreateNestedManyWithoutUsers_orders_retailer_idTousersInput
    orders_orders_wholesaler_idTousers?: ordersCreateNestedManyWithoutUsers_orders_wholesaler_idTousersInput
    products?: productsCreateNestedManyWithoutUsersInput
    user_sessions?: user_sessionsCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutMessagesInput = {
    id?: string
    user_id?: string | null
    first_name?: string | null
    last_name?: string | null
    username?: string | null
    password: string
    email?: string | null
    telephone?: string | null
    status?: $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    updated_at?: Date | string | null
    role: $Enums.UserRole
    cif?: string | null
    carts?: cartsUncheckedCreateNestedManyWithoutUsersInput
    categories?: categoriesUncheckedCreateNestedManyWithoutUsersInput
    chat_participants?: chat_participantsUncheckedCreateNestedManyWithoutUsersInput
    configurations?: configurationsUncheckedCreateNestedManyWithoutUsersInput
    deliveries?: deliveriesUncheckedCreateNestedManyWithoutUsersInput
    direction?: directionUncheckedCreateNestedManyWithoutUsersInput
    discounts?: discountsUncheckedCreateNestedManyWithoutUsersInput
    notifications?: notificationsUncheckedCreateNestedManyWithoutUsersInput
    orders_orders_retailer_idTousers?: ordersUncheckedCreateNestedManyWithoutUsers_orders_retailer_idTousersInput
    orders_orders_wholesaler_idTousers?: ordersUncheckedCreateNestedManyWithoutUsers_orders_wholesaler_idTousersInput
    products?: productsUncheckedCreateNestedManyWithoutUsersInput
    user_sessions?: user_sessionsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutMessagesInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutMessagesInput, usersUncheckedCreateWithoutMessagesInput>
  }

  export type message_filesUpsertWithWhereUniqueWithoutMessagesInput = {
    where: message_filesWhereUniqueInput
    update: XOR<message_filesUpdateWithoutMessagesInput, message_filesUncheckedUpdateWithoutMessagesInput>
    create: XOR<message_filesCreateWithoutMessagesInput, message_filesUncheckedCreateWithoutMessagesInput>
  }

  export type message_filesUpdateWithWhereUniqueWithoutMessagesInput = {
    where: message_filesWhereUniqueInput
    data: XOR<message_filesUpdateWithoutMessagesInput, message_filesUncheckedUpdateWithoutMessagesInput>
  }

  export type message_filesUpdateManyWithWhereWithoutMessagesInput = {
    where: message_filesScalarWhereInput
    data: XOR<message_filesUpdateManyMutationInput, message_filesUncheckedUpdateManyWithoutMessagesInput>
  }

  export type chat_panelsUpsertWithoutMessagesInput = {
    update: XOR<chat_panelsUpdateWithoutMessagesInput, chat_panelsUncheckedUpdateWithoutMessagesInput>
    create: XOR<chat_panelsCreateWithoutMessagesInput, chat_panelsUncheckedCreateWithoutMessagesInput>
    where?: chat_panelsWhereInput
  }

  export type chat_panelsUpdateToOneWithWhereWithoutMessagesInput = {
    where?: chat_panelsWhereInput
    data: XOR<chat_panelsUpdateWithoutMessagesInput, chat_panelsUncheckedUpdateWithoutMessagesInput>
  }

  export type chat_panelsUpdateWithoutMessagesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_participants?: chat_participantsUpdateManyWithoutChat_panelsNestedInput
  }

  export type chat_panelsUncheckedUpdateWithoutMessagesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    chat_participants?: chat_participantsUncheckedUpdateManyWithoutChat_panelsNestedInput
  }

  export type messagesUpsertWithoutOther_messagesInput = {
    update: XOR<messagesUpdateWithoutOther_messagesInput, messagesUncheckedUpdateWithoutOther_messagesInput>
    create: XOR<messagesCreateWithoutOther_messagesInput, messagesUncheckedCreateWithoutOther_messagesInput>
    where?: messagesWhereInput
  }

  export type messagesUpdateToOneWithWhereWithoutOther_messagesInput = {
    where?: messagesWhereInput
    data: XOR<messagesUpdateWithoutOther_messagesInput, messagesUncheckedUpdateWithoutOther_messagesInput>
  }

  export type messagesUpdateWithoutOther_messagesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_read?: BoolFieldUpdateOperationsInput | boolean
    message_files?: message_filesUpdateManyWithoutMessagesNestedInput
    chat_panels?: chat_panelsUpdateOneRequiredWithoutMessagesNestedInput
    messages?: messagesUpdateOneWithoutOther_messagesNestedInput
    users?: usersUpdateOneWithoutMessagesNestedInput
  }

  export type messagesUncheckedUpdateWithoutOther_messagesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    chat_panel_id?: BigIntFieldUpdateOperationsInput | bigint | number
    sender_id?: NullableStringFieldUpdateOperationsInput | string | null
    reply_to?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_read?: BoolFieldUpdateOperationsInput | boolean
    message_files?: message_filesUncheckedUpdateManyWithoutMessagesNestedInput
  }

  export type messagesUpsertWithWhereUniqueWithoutMessagesInput = {
    where: messagesWhereUniqueInput
    update: XOR<messagesUpdateWithoutMessagesInput, messagesUncheckedUpdateWithoutMessagesInput>
    create: XOR<messagesCreateWithoutMessagesInput, messagesUncheckedCreateWithoutMessagesInput>
  }

  export type messagesUpdateWithWhereUniqueWithoutMessagesInput = {
    where: messagesWhereUniqueInput
    data: XOR<messagesUpdateWithoutMessagesInput, messagesUncheckedUpdateWithoutMessagesInput>
  }

  export type messagesUpdateManyWithWhereWithoutMessagesInput = {
    where: messagesScalarWhereInput
    data: XOR<messagesUpdateManyMutationInput, messagesUncheckedUpdateManyWithoutMessagesInput>
  }

  export type usersUpsertWithoutMessagesInput = {
    update: XOR<usersUpdateWithoutMessagesInput, usersUncheckedUpdateWithoutMessagesInput>
    create: XOR<usersCreateWithoutMessagesInput, usersUncheckedCreateWithoutMessagesInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutMessagesInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutMessagesInput, usersUncheckedUpdateWithoutMessagesInput>
  }

  export type usersUpdateWithoutMessagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telephone?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    cif?: NullableStringFieldUpdateOperationsInput | string | null
    carts?: cartsUpdateManyWithoutUsersNestedInput
    categories?: categoriesUpdateManyWithoutUsersNestedInput
    chat_participants?: chat_participantsUpdateManyWithoutUsersNestedInput
    configurations?: configurationsUpdateManyWithoutUsersNestedInput
    deliveries?: deliveriesUpdateManyWithoutUsersNestedInput
    direction?: directionUpdateManyWithoutUsersNestedInput
    discounts?: discountsUpdateManyWithoutUsersNestedInput
    notifications?: notificationsUpdateManyWithoutUsersNestedInput
    orders_orders_retailer_idTousers?: ordersUpdateManyWithoutUsers_orders_retailer_idTousersNestedInput
    orders_orders_wholesaler_idTousers?: ordersUpdateManyWithoutUsers_orders_wholesaler_idTousersNestedInput
    products?: productsUpdateManyWithoutUsersNestedInput
    user_sessions?: user_sessionsUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutMessagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telephone?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    cif?: NullableStringFieldUpdateOperationsInput | string | null
    carts?: cartsUncheckedUpdateManyWithoutUsersNestedInput
    categories?: categoriesUncheckedUpdateManyWithoutUsersNestedInput
    chat_participants?: chat_participantsUncheckedUpdateManyWithoutUsersNestedInput
    configurations?: configurationsUncheckedUpdateManyWithoutUsersNestedInput
    deliveries?: deliveriesUncheckedUpdateManyWithoutUsersNestedInput
    direction?: directionUncheckedUpdateManyWithoutUsersNestedInput
    discounts?: discountsUncheckedUpdateManyWithoutUsersNestedInput
    notifications?: notificationsUncheckedUpdateManyWithoutUsersNestedInput
    orders_orders_retailer_idTousers?: ordersUncheckedUpdateManyWithoutUsers_orders_retailer_idTousersNestedInput
    orders_orders_wholesaler_idTousers?: ordersUncheckedUpdateManyWithoutUsers_orders_wholesaler_idTousersNestedInput
    products?: productsUncheckedUpdateManyWithoutUsersNestedInput
    user_sessions?: user_sessionsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type usersCreateWithoutNotificationsInput = {
    id?: string
    user_id?: string | null
    first_name?: string | null
    last_name?: string | null
    username?: string | null
    password: string
    email?: string | null
    telephone?: string | null
    status?: $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    updated_at?: Date | string | null
    role: $Enums.UserRole
    cif?: string | null
    carts?: cartsCreateNestedManyWithoutUsersInput
    categories?: categoriesCreateNestedManyWithoutUsersInput
    chat_participants?: chat_participantsCreateNestedManyWithoutUsersInput
    configurations?: configurationsCreateNestedManyWithoutUsersInput
    deliveries?: deliveriesCreateNestedManyWithoutUsersInput
    direction?: directionCreateNestedManyWithoutUsersInput
    discounts?: discountsCreateNestedManyWithoutUsersInput
    messages?: messagesCreateNestedManyWithoutUsersInput
    orders_orders_retailer_idTousers?: ordersCreateNestedManyWithoutUsers_orders_retailer_idTousersInput
    orders_orders_wholesaler_idTousers?: ordersCreateNestedManyWithoutUsers_orders_wholesaler_idTousersInput
    products?: productsCreateNestedManyWithoutUsersInput
    user_sessions?: user_sessionsCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutNotificationsInput = {
    id?: string
    user_id?: string | null
    first_name?: string | null
    last_name?: string | null
    username?: string | null
    password: string
    email?: string | null
    telephone?: string | null
    status?: $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    updated_at?: Date | string | null
    role: $Enums.UserRole
    cif?: string | null
    carts?: cartsUncheckedCreateNestedManyWithoutUsersInput
    categories?: categoriesUncheckedCreateNestedManyWithoutUsersInput
    chat_participants?: chat_participantsUncheckedCreateNestedManyWithoutUsersInput
    configurations?: configurationsUncheckedCreateNestedManyWithoutUsersInput
    deliveries?: deliveriesUncheckedCreateNestedManyWithoutUsersInput
    direction?: directionUncheckedCreateNestedManyWithoutUsersInput
    discounts?: discountsUncheckedCreateNestedManyWithoutUsersInput
    messages?: messagesUncheckedCreateNestedManyWithoutUsersInput
    orders_orders_retailer_idTousers?: ordersUncheckedCreateNestedManyWithoutUsers_orders_retailer_idTousersInput
    orders_orders_wholesaler_idTousers?: ordersUncheckedCreateNestedManyWithoutUsers_orders_wholesaler_idTousersInput
    products?: productsUncheckedCreateNestedManyWithoutUsersInput
    user_sessions?: user_sessionsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutNotificationsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutNotificationsInput, usersUncheckedCreateWithoutNotificationsInput>
  }

  export type usersUpsertWithoutNotificationsInput = {
    update: XOR<usersUpdateWithoutNotificationsInput, usersUncheckedUpdateWithoutNotificationsInput>
    create: XOR<usersCreateWithoutNotificationsInput, usersUncheckedCreateWithoutNotificationsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutNotificationsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutNotificationsInput, usersUncheckedUpdateWithoutNotificationsInput>
  }

  export type usersUpdateWithoutNotificationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telephone?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    cif?: NullableStringFieldUpdateOperationsInput | string | null
    carts?: cartsUpdateManyWithoutUsersNestedInput
    categories?: categoriesUpdateManyWithoutUsersNestedInput
    chat_participants?: chat_participantsUpdateManyWithoutUsersNestedInput
    configurations?: configurationsUpdateManyWithoutUsersNestedInput
    deliveries?: deliveriesUpdateManyWithoutUsersNestedInput
    direction?: directionUpdateManyWithoutUsersNestedInput
    discounts?: discountsUpdateManyWithoutUsersNestedInput
    messages?: messagesUpdateManyWithoutUsersNestedInput
    orders_orders_retailer_idTousers?: ordersUpdateManyWithoutUsers_orders_retailer_idTousersNestedInput
    orders_orders_wholesaler_idTousers?: ordersUpdateManyWithoutUsers_orders_wholesaler_idTousersNestedInput
    products?: productsUpdateManyWithoutUsersNestedInput
    user_sessions?: user_sessionsUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutNotificationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telephone?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    cif?: NullableStringFieldUpdateOperationsInput | string | null
    carts?: cartsUncheckedUpdateManyWithoutUsersNestedInput
    categories?: categoriesUncheckedUpdateManyWithoutUsersNestedInput
    chat_participants?: chat_participantsUncheckedUpdateManyWithoutUsersNestedInput
    configurations?: configurationsUncheckedUpdateManyWithoutUsersNestedInput
    deliveries?: deliveriesUncheckedUpdateManyWithoutUsersNestedInput
    direction?: directionUncheckedUpdateManyWithoutUsersNestedInput
    discounts?: discountsUncheckedUpdateManyWithoutUsersNestedInput
    messages?: messagesUncheckedUpdateManyWithoutUsersNestedInput
    orders_orders_retailer_idTousers?: ordersUncheckedUpdateManyWithoutUsers_orders_retailer_idTousersNestedInput
    orders_orders_wholesaler_idTousers?: ordersUncheckedUpdateManyWithoutUsers_orders_wholesaler_idTousersNestedInput
    products?: productsUncheckedUpdateManyWithoutUsersNestedInput
    user_sessions?: user_sessionsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type ordersCreateWithoutOrder_detailsInput = {
    id?: bigint | number
    status?: number
    payment_method: number
    notes?: string | null
    discount_total: Decimal | DecimalJsLike | number | string
    subtotal: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    iva_total: Decimal | DecimalJsLike | number | string
    discount_log: JsonNullValueInput | InputJsonValue
    estimated_date?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string | null
    users_orders_retailer_idTousers?: usersCreateNestedOneWithoutOrders_orders_retailer_idTousersInput
    direcction?: directionCreateNestedOneWithoutOrdersInput
    users_orders_wholesaler_idTousers?: usersCreateNestedOneWithoutOrders_orders_wholesaler_idTousersInput
  }

  export type ordersUncheckedCreateWithoutOrder_detailsInput = {
    id?: bigint | number
    retailer_id?: string | null
    wholesaler_id?: string | null
    status?: number
    payment_method: number
    shipping_address?: bigint | number | null
    notes?: string | null
    discount_total: Decimal | DecimalJsLike | number | string
    subtotal: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    iva_total: Decimal | DecimalJsLike | number | string
    discount_log: JsonNullValueInput | InputJsonValue
    estimated_date?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string | null
  }

  export type ordersCreateOrConnectWithoutOrder_detailsInput = {
    where: ordersWhereUniqueInput
    create: XOR<ordersCreateWithoutOrder_detailsInput, ordersUncheckedCreateWithoutOrder_detailsInput>
  }

  export type variant_productsCreateWithoutOrder_detailsInput = {
    id?: bigint | number
    created_at?: Date | string
    type_sale: number
    price: Decimal | DecimalJsLike | number | string
    price_iva: Decimal | DecimalJsLike | number | string
    stock: number
    sort: number
    attributes?: NullableJsonNullValueInput | InputJsonValue
    status: number
    iva: Decimal | DecimalJsLike | number | string
    product_code: string
    cart_details?: cart_detailsCreateNestedManyWithoutVariant_productsInput
    products: productsCreateNestedOneWithoutVariant_productsInput
  }

  export type variant_productsUncheckedCreateWithoutOrder_detailsInput = {
    id?: bigint | number
    created_at?: Date | string
    product_id: bigint | number
    type_sale: number
    price: Decimal | DecimalJsLike | number | string
    price_iva: Decimal | DecimalJsLike | number | string
    stock: number
    sort: number
    attributes?: NullableJsonNullValueInput | InputJsonValue
    status: number
    iva: Decimal | DecimalJsLike | number | string
    product_code: string
    cart_details?: cart_detailsUncheckedCreateNestedManyWithoutVariant_productsInput
  }

  export type variant_productsCreateOrConnectWithoutOrder_detailsInput = {
    where: variant_productsWhereUniqueInput
    create: XOR<variant_productsCreateWithoutOrder_detailsInput, variant_productsUncheckedCreateWithoutOrder_detailsInput>
  }

  export type ordersUpsertWithoutOrder_detailsInput = {
    update: XOR<ordersUpdateWithoutOrder_detailsInput, ordersUncheckedUpdateWithoutOrder_detailsInput>
    create: XOR<ordersCreateWithoutOrder_detailsInput, ordersUncheckedCreateWithoutOrder_detailsInput>
    where?: ordersWhereInput
  }

  export type ordersUpdateToOneWithWhereWithoutOrder_detailsInput = {
    where?: ordersWhereInput
    data: XOR<ordersUpdateWithoutOrder_detailsInput, ordersUncheckedUpdateWithoutOrder_detailsInput>
  }

  export type ordersUpdateWithoutOrder_detailsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    status?: IntFieldUpdateOperationsInput | number
    payment_method?: IntFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    discount_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    iva_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_log?: JsonNullValueInput | InputJsonValue
    estimated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users_orders_retailer_idTousers?: usersUpdateOneWithoutOrders_orders_retailer_idTousersNestedInput
    direcction?: directionUpdateOneWithoutOrdersNestedInput
    users_orders_wholesaler_idTousers?: usersUpdateOneWithoutOrders_orders_wholesaler_idTousersNestedInput
  }

  export type ordersUncheckedUpdateWithoutOrder_detailsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    retailer_id?: NullableStringFieldUpdateOperationsInput | string | null
    wholesaler_id?: NullableStringFieldUpdateOperationsInput | string | null
    status?: IntFieldUpdateOperationsInput | number
    payment_method?: IntFieldUpdateOperationsInput | number
    shipping_address?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    discount_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    iva_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_log?: JsonNullValueInput | InputJsonValue
    estimated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type variant_productsUpsertWithoutOrder_detailsInput = {
    update: XOR<variant_productsUpdateWithoutOrder_detailsInput, variant_productsUncheckedUpdateWithoutOrder_detailsInput>
    create: XOR<variant_productsCreateWithoutOrder_detailsInput, variant_productsUncheckedCreateWithoutOrder_detailsInput>
    where?: variant_productsWhereInput
  }

  export type variant_productsUpdateToOneWithWhereWithoutOrder_detailsInput = {
    where?: variant_productsWhereInput
    data: XOR<variant_productsUpdateWithoutOrder_detailsInput, variant_productsUncheckedUpdateWithoutOrder_detailsInput>
  }

  export type variant_productsUpdateWithoutOrder_detailsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    type_sale?: IntFieldUpdateOperationsInput | number
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    price_iva?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    sort?: IntFieldUpdateOperationsInput | number
    attributes?: NullableJsonNullValueInput | InputJsonValue
    status?: IntFieldUpdateOperationsInput | number
    iva?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    product_code?: StringFieldUpdateOperationsInput | string
    cart_details?: cart_detailsUpdateManyWithoutVariant_productsNestedInput
    products?: productsUpdateOneRequiredWithoutVariant_productsNestedInput
  }

  export type variant_productsUncheckedUpdateWithoutOrder_detailsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    product_id?: BigIntFieldUpdateOperationsInput | bigint | number
    type_sale?: IntFieldUpdateOperationsInput | number
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    price_iva?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    sort?: IntFieldUpdateOperationsInput | number
    attributes?: NullableJsonNullValueInput | InputJsonValue
    status?: IntFieldUpdateOperationsInput | number
    iva?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    product_code?: StringFieldUpdateOperationsInput | string
    cart_details?: cart_detailsUncheckedUpdateManyWithoutVariant_productsNestedInput
  }

  export type order_detailsCreateWithoutOrdersInput = {
    id?: bigint | number
    product_code: string
    quantity: number
    unit_price: Decimal | DecimalJsLike | number | string
    unit_price_iva: Decimal | DecimalJsLike | number | string
    subtotal: Decimal | DecimalJsLike | number | string
    iva: Decimal | DecimalJsLike | number | string
    discount_applied: Decimal | DecimalJsLike | number | string
    attributes: JsonNullValueInput | InputJsonValue
    created_at?: Date | string
    variant_products: variant_productsCreateNestedOneWithoutOrder_detailsInput
  }

  export type order_detailsUncheckedCreateWithoutOrdersInput = {
    id?: bigint | number
    product_code: string
    variant_product_id: bigint | number
    quantity: number
    unit_price: Decimal | DecimalJsLike | number | string
    unit_price_iva: Decimal | DecimalJsLike | number | string
    subtotal: Decimal | DecimalJsLike | number | string
    iva: Decimal | DecimalJsLike | number | string
    discount_applied: Decimal | DecimalJsLike | number | string
    attributes: JsonNullValueInput | InputJsonValue
    created_at?: Date | string
  }

  export type order_detailsCreateOrConnectWithoutOrdersInput = {
    where: order_detailsWhereUniqueInput
    create: XOR<order_detailsCreateWithoutOrdersInput, order_detailsUncheckedCreateWithoutOrdersInput>
  }

  export type order_detailsCreateManyOrdersInputEnvelope = {
    data: order_detailsCreateManyOrdersInput | order_detailsCreateManyOrdersInput[]
    skipDuplicates?: boolean
  }

  export type usersCreateWithoutOrders_orders_retailer_idTousersInput = {
    id?: string
    user_id?: string | null
    first_name?: string | null
    last_name?: string | null
    username?: string | null
    password: string
    email?: string | null
    telephone?: string | null
    status?: $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    updated_at?: Date | string | null
    role: $Enums.UserRole
    cif?: string | null
    carts?: cartsCreateNestedManyWithoutUsersInput
    categories?: categoriesCreateNestedManyWithoutUsersInput
    chat_participants?: chat_participantsCreateNestedManyWithoutUsersInput
    configurations?: configurationsCreateNestedManyWithoutUsersInput
    deliveries?: deliveriesCreateNestedManyWithoutUsersInput
    direction?: directionCreateNestedManyWithoutUsersInput
    discounts?: discountsCreateNestedManyWithoutUsersInput
    messages?: messagesCreateNestedManyWithoutUsersInput
    notifications?: notificationsCreateNestedManyWithoutUsersInput
    orders_orders_wholesaler_idTousers?: ordersCreateNestedManyWithoutUsers_orders_wholesaler_idTousersInput
    products?: productsCreateNestedManyWithoutUsersInput
    user_sessions?: user_sessionsCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutOrders_orders_retailer_idTousersInput = {
    id?: string
    user_id?: string | null
    first_name?: string | null
    last_name?: string | null
    username?: string | null
    password: string
    email?: string | null
    telephone?: string | null
    status?: $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    updated_at?: Date | string | null
    role: $Enums.UserRole
    cif?: string | null
    carts?: cartsUncheckedCreateNestedManyWithoutUsersInput
    categories?: categoriesUncheckedCreateNestedManyWithoutUsersInput
    chat_participants?: chat_participantsUncheckedCreateNestedManyWithoutUsersInput
    configurations?: configurationsUncheckedCreateNestedManyWithoutUsersInput
    deliveries?: deliveriesUncheckedCreateNestedManyWithoutUsersInput
    direction?: directionUncheckedCreateNestedManyWithoutUsersInput
    discounts?: discountsUncheckedCreateNestedManyWithoutUsersInput
    messages?: messagesUncheckedCreateNestedManyWithoutUsersInput
    notifications?: notificationsUncheckedCreateNestedManyWithoutUsersInput
    orders_orders_wholesaler_idTousers?: ordersUncheckedCreateNestedManyWithoutUsers_orders_wholesaler_idTousersInput
    products?: productsUncheckedCreateNestedManyWithoutUsersInput
    user_sessions?: user_sessionsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutOrders_orders_retailer_idTousersInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutOrders_orders_retailer_idTousersInput, usersUncheckedCreateWithoutOrders_orders_retailer_idTousersInput>
  }

  export type directionCreateWithoutOrdersInput = {
    id?: bigint | number
    type: $Enums.AddressType
    direction: string
    city: string
    province: string
    zip_code: string
    latitude: number
    longitude: number
    created_at?: Date | string
    updated_at?: Date | string | null
    users: usersCreateNestedOneWithoutDirectionInput
  }

  export type directionUncheckedCreateWithoutOrdersInput = {
    id?: bigint | number
    user_id: string
    type: $Enums.AddressType
    direction: string
    city: string
    province: string
    zip_code: string
    latitude: number
    longitude: number
    created_at?: Date | string
    updated_at?: Date | string | null
  }

  export type directionCreateOrConnectWithoutOrdersInput = {
    where: directionWhereUniqueInput
    create: XOR<directionCreateWithoutOrdersInput, directionUncheckedCreateWithoutOrdersInput>
  }

  export type usersCreateWithoutOrders_orders_wholesaler_idTousersInput = {
    id?: string
    user_id?: string | null
    first_name?: string | null
    last_name?: string | null
    username?: string | null
    password: string
    email?: string | null
    telephone?: string | null
    status?: $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    updated_at?: Date | string | null
    role: $Enums.UserRole
    cif?: string | null
    carts?: cartsCreateNestedManyWithoutUsersInput
    categories?: categoriesCreateNestedManyWithoutUsersInput
    chat_participants?: chat_participantsCreateNestedManyWithoutUsersInput
    configurations?: configurationsCreateNestedManyWithoutUsersInput
    deliveries?: deliveriesCreateNestedManyWithoutUsersInput
    direction?: directionCreateNestedManyWithoutUsersInput
    discounts?: discountsCreateNestedManyWithoutUsersInput
    messages?: messagesCreateNestedManyWithoutUsersInput
    notifications?: notificationsCreateNestedManyWithoutUsersInput
    orders_orders_retailer_idTousers?: ordersCreateNestedManyWithoutUsers_orders_retailer_idTousersInput
    products?: productsCreateNestedManyWithoutUsersInput
    user_sessions?: user_sessionsCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutOrders_orders_wholesaler_idTousersInput = {
    id?: string
    user_id?: string | null
    first_name?: string | null
    last_name?: string | null
    username?: string | null
    password: string
    email?: string | null
    telephone?: string | null
    status?: $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    updated_at?: Date | string | null
    role: $Enums.UserRole
    cif?: string | null
    carts?: cartsUncheckedCreateNestedManyWithoutUsersInput
    categories?: categoriesUncheckedCreateNestedManyWithoutUsersInput
    chat_participants?: chat_participantsUncheckedCreateNestedManyWithoutUsersInput
    configurations?: configurationsUncheckedCreateNestedManyWithoutUsersInput
    deliveries?: deliveriesUncheckedCreateNestedManyWithoutUsersInput
    direction?: directionUncheckedCreateNestedManyWithoutUsersInput
    discounts?: discountsUncheckedCreateNestedManyWithoutUsersInput
    messages?: messagesUncheckedCreateNestedManyWithoutUsersInput
    notifications?: notificationsUncheckedCreateNestedManyWithoutUsersInput
    orders_orders_retailer_idTousers?: ordersUncheckedCreateNestedManyWithoutUsers_orders_retailer_idTousersInput
    products?: productsUncheckedCreateNestedManyWithoutUsersInput
    user_sessions?: user_sessionsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutOrders_orders_wholesaler_idTousersInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutOrders_orders_wholesaler_idTousersInput, usersUncheckedCreateWithoutOrders_orders_wholesaler_idTousersInput>
  }

  export type order_detailsUpsertWithWhereUniqueWithoutOrdersInput = {
    where: order_detailsWhereUniqueInput
    update: XOR<order_detailsUpdateWithoutOrdersInput, order_detailsUncheckedUpdateWithoutOrdersInput>
    create: XOR<order_detailsCreateWithoutOrdersInput, order_detailsUncheckedCreateWithoutOrdersInput>
  }

  export type order_detailsUpdateWithWhereUniqueWithoutOrdersInput = {
    where: order_detailsWhereUniqueInput
    data: XOR<order_detailsUpdateWithoutOrdersInput, order_detailsUncheckedUpdateWithoutOrdersInput>
  }

  export type order_detailsUpdateManyWithWhereWithoutOrdersInput = {
    where: order_detailsScalarWhereInput
    data: XOR<order_detailsUpdateManyMutationInput, order_detailsUncheckedUpdateManyWithoutOrdersInput>
  }

  export type order_detailsScalarWhereInput = {
    AND?: order_detailsScalarWhereInput | order_detailsScalarWhereInput[]
    OR?: order_detailsScalarWhereInput[]
    NOT?: order_detailsScalarWhereInput | order_detailsScalarWhereInput[]
    id?: BigIntFilter<"order_details"> | bigint | number
    order_id?: BigIntFilter<"order_details"> | bigint | number
    product_code?: StringFilter<"order_details"> | string
    variant_product_id?: BigIntFilter<"order_details"> | bigint | number
    quantity?: IntFilter<"order_details"> | number
    unit_price?: DecimalFilter<"order_details"> | Decimal | DecimalJsLike | number | string
    unit_price_iva?: DecimalFilter<"order_details"> | Decimal | DecimalJsLike | number | string
    subtotal?: DecimalFilter<"order_details"> | Decimal | DecimalJsLike | number | string
    iva?: DecimalFilter<"order_details"> | Decimal | DecimalJsLike | number | string
    discount_applied?: DecimalFilter<"order_details"> | Decimal | DecimalJsLike | number | string
    attributes?: JsonFilter<"order_details">
    created_at?: DateTimeFilter<"order_details"> | Date | string
  }

  export type usersUpsertWithoutOrders_orders_retailer_idTousersInput = {
    update: XOR<usersUpdateWithoutOrders_orders_retailer_idTousersInput, usersUncheckedUpdateWithoutOrders_orders_retailer_idTousersInput>
    create: XOR<usersCreateWithoutOrders_orders_retailer_idTousersInput, usersUncheckedCreateWithoutOrders_orders_retailer_idTousersInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutOrders_orders_retailer_idTousersInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutOrders_orders_retailer_idTousersInput, usersUncheckedUpdateWithoutOrders_orders_retailer_idTousersInput>
  }

  export type usersUpdateWithoutOrders_orders_retailer_idTousersInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telephone?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    cif?: NullableStringFieldUpdateOperationsInput | string | null
    carts?: cartsUpdateManyWithoutUsersNestedInput
    categories?: categoriesUpdateManyWithoutUsersNestedInput
    chat_participants?: chat_participantsUpdateManyWithoutUsersNestedInput
    configurations?: configurationsUpdateManyWithoutUsersNestedInput
    deliveries?: deliveriesUpdateManyWithoutUsersNestedInput
    direction?: directionUpdateManyWithoutUsersNestedInput
    discounts?: discountsUpdateManyWithoutUsersNestedInput
    messages?: messagesUpdateManyWithoutUsersNestedInput
    notifications?: notificationsUpdateManyWithoutUsersNestedInput
    orders_orders_wholesaler_idTousers?: ordersUpdateManyWithoutUsers_orders_wholesaler_idTousersNestedInput
    products?: productsUpdateManyWithoutUsersNestedInput
    user_sessions?: user_sessionsUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutOrders_orders_retailer_idTousersInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telephone?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    cif?: NullableStringFieldUpdateOperationsInput | string | null
    carts?: cartsUncheckedUpdateManyWithoutUsersNestedInput
    categories?: categoriesUncheckedUpdateManyWithoutUsersNestedInput
    chat_participants?: chat_participantsUncheckedUpdateManyWithoutUsersNestedInput
    configurations?: configurationsUncheckedUpdateManyWithoutUsersNestedInput
    deliveries?: deliveriesUncheckedUpdateManyWithoutUsersNestedInput
    direction?: directionUncheckedUpdateManyWithoutUsersNestedInput
    discounts?: discountsUncheckedUpdateManyWithoutUsersNestedInput
    messages?: messagesUncheckedUpdateManyWithoutUsersNestedInput
    notifications?: notificationsUncheckedUpdateManyWithoutUsersNestedInput
    orders_orders_wholesaler_idTousers?: ordersUncheckedUpdateManyWithoutUsers_orders_wholesaler_idTousersNestedInput
    products?: productsUncheckedUpdateManyWithoutUsersNestedInput
    user_sessions?: user_sessionsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type directionUpsertWithoutOrdersInput = {
    update: XOR<directionUpdateWithoutOrdersInput, directionUncheckedUpdateWithoutOrdersInput>
    create: XOR<directionCreateWithoutOrdersInput, directionUncheckedCreateWithoutOrdersInput>
    where?: directionWhereInput
  }

  export type directionUpdateToOneWithWhereWithoutOrdersInput = {
    where?: directionWhereInput
    data: XOR<directionUpdateWithoutOrdersInput, directionUncheckedUpdateWithoutOrdersInput>
  }

  export type directionUpdateWithoutOrdersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    type?: EnumAddressTypeFieldUpdateOperationsInput | $Enums.AddressType
    direction?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    province?: StringFieldUpdateOperationsInput | string
    zip_code?: StringFieldUpdateOperationsInput | string
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateOneRequiredWithoutDirectionNestedInput
  }

  export type directionUncheckedUpdateWithoutOrdersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: StringFieldUpdateOperationsInput | string
    type?: EnumAddressTypeFieldUpdateOperationsInput | $Enums.AddressType
    direction?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    province?: StringFieldUpdateOperationsInput | string
    zip_code?: StringFieldUpdateOperationsInput | string
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type usersUpsertWithoutOrders_orders_wholesaler_idTousersInput = {
    update: XOR<usersUpdateWithoutOrders_orders_wholesaler_idTousersInput, usersUncheckedUpdateWithoutOrders_orders_wholesaler_idTousersInput>
    create: XOR<usersCreateWithoutOrders_orders_wholesaler_idTousersInput, usersUncheckedCreateWithoutOrders_orders_wholesaler_idTousersInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutOrders_orders_wholesaler_idTousersInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutOrders_orders_wholesaler_idTousersInput, usersUncheckedUpdateWithoutOrders_orders_wholesaler_idTousersInput>
  }

  export type usersUpdateWithoutOrders_orders_wholesaler_idTousersInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telephone?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    cif?: NullableStringFieldUpdateOperationsInput | string | null
    carts?: cartsUpdateManyWithoutUsersNestedInput
    categories?: categoriesUpdateManyWithoutUsersNestedInput
    chat_participants?: chat_participantsUpdateManyWithoutUsersNestedInput
    configurations?: configurationsUpdateManyWithoutUsersNestedInput
    deliveries?: deliveriesUpdateManyWithoutUsersNestedInput
    direction?: directionUpdateManyWithoutUsersNestedInput
    discounts?: discountsUpdateManyWithoutUsersNestedInput
    messages?: messagesUpdateManyWithoutUsersNestedInput
    notifications?: notificationsUpdateManyWithoutUsersNestedInput
    orders_orders_retailer_idTousers?: ordersUpdateManyWithoutUsers_orders_retailer_idTousersNestedInput
    products?: productsUpdateManyWithoutUsersNestedInput
    user_sessions?: user_sessionsUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutOrders_orders_wholesaler_idTousersInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telephone?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    cif?: NullableStringFieldUpdateOperationsInput | string | null
    carts?: cartsUncheckedUpdateManyWithoutUsersNestedInput
    categories?: categoriesUncheckedUpdateManyWithoutUsersNestedInput
    chat_participants?: chat_participantsUncheckedUpdateManyWithoutUsersNestedInput
    configurations?: configurationsUncheckedUpdateManyWithoutUsersNestedInput
    deliveries?: deliveriesUncheckedUpdateManyWithoutUsersNestedInput
    direction?: directionUncheckedUpdateManyWithoutUsersNestedInput
    discounts?: discountsUncheckedUpdateManyWithoutUsersNestedInput
    messages?: messagesUncheckedUpdateManyWithoutUsersNestedInput
    notifications?: notificationsUncheckedUpdateManyWithoutUsersNestedInput
    orders_orders_retailer_idTousers?: ordersUncheckedUpdateManyWithoutUsers_orders_retailer_idTousersNestedInput
    products?: productsUncheckedUpdateManyWithoutUsersNestedInput
    user_sessions?: user_sessionsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type categoriesCreateWithoutProductsInput = {
    id?: bigint | number
    name: string
    iva?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string
    categories?: categoriesCreateNestedOneWithoutOther_categoriesInput
    other_categories?: categoriesCreateNestedManyWithoutCategoriesInput
    users?: usersCreateNestedOneWithoutCategoriesInput
  }

  export type categoriesUncheckedCreateWithoutProductsInput = {
    id?: bigint | number
    user_id?: string | null
    name: string
    iva?: Decimal | DecimalJsLike | number | string | null
    parent_id?: bigint | number | null
    created_at?: Date | string
    other_categories?: categoriesUncheckedCreateNestedManyWithoutCategoriesInput
  }

  export type categoriesCreateOrConnectWithoutProductsInput = {
    where: categoriesWhereUniqueInput
    create: XOR<categoriesCreateWithoutProductsInput, categoriesUncheckedCreateWithoutProductsInput>
  }

  export type usersCreateWithoutProductsInput = {
    id?: string
    user_id?: string | null
    first_name?: string | null
    last_name?: string | null
    username?: string | null
    password: string
    email?: string | null
    telephone?: string | null
    status?: $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    updated_at?: Date | string | null
    role: $Enums.UserRole
    cif?: string | null
    carts?: cartsCreateNestedManyWithoutUsersInput
    categories?: categoriesCreateNestedManyWithoutUsersInput
    chat_participants?: chat_participantsCreateNestedManyWithoutUsersInput
    configurations?: configurationsCreateNestedManyWithoutUsersInput
    deliveries?: deliveriesCreateNestedManyWithoutUsersInput
    direction?: directionCreateNestedManyWithoutUsersInput
    discounts?: discountsCreateNestedManyWithoutUsersInput
    messages?: messagesCreateNestedManyWithoutUsersInput
    notifications?: notificationsCreateNestedManyWithoutUsersInput
    orders_orders_retailer_idTousers?: ordersCreateNestedManyWithoutUsers_orders_retailer_idTousersInput
    orders_orders_wholesaler_idTousers?: ordersCreateNestedManyWithoutUsers_orders_wholesaler_idTousersInput
    user_sessions?: user_sessionsCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutProductsInput = {
    id?: string
    user_id?: string | null
    first_name?: string | null
    last_name?: string | null
    username?: string | null
    password: string
    email?: string | null
    telephone?: string | null
    status?: $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    updated_at?: Date | string | null
    role: $Enums.UserRole
    cif?: string | null
    carts?: cartsUncheckedCreateNestedManyWithoutUsersInput
    categories?: categoriesUncheckedCreateNestedManyWithoutUsersInput
    chat_participants?: chat_participantsUncheckedCreateNestedManyWithoutUsersInput
    configurations?: configurationsUncheckedCreateNestedManyWithoutUsersInput
    deliveries?: deliveriesUncheckedCreateNestedManyWithoutUsersInput
    direction?: directionUncheckedCreateNestedManyWithoutUsersInput
    discounts?: discountsUncheckedCreateNestedManyWithoutUsersInput
    messages?: messagesUncheckedCreateNestedManyWithoutUsersInput
    notifications?: notificationsUncheckedCreateNestedManyWithoutUsersInput
    orders_orders_retailer_idTousers?: ordersUncheckedCreateNestedManyWithoutUsers_orders_retailer_idTousersInput
    orders_orders_wholesaler_idTousers?: ordersUncheckedCreateNestedManyWithoutUsers_orders_wholesaler_idTousersInput
    user_sessions?: user_sessionsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutProductsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutProductsInput, usersUncheckedCreateWithoutProductsInput>
  }

  export type products_filesCreateWithoutProductsInput = {
    id?: bigint | number
    sort: number
    files: filesCreateNestedOneWithoutProducts_filesInput
  }

  export type products_filesUncheckedCreateWithoutProductsInput = {
    id?: bigint | number
    file_id: bigint | number
    sort: number
  }

  export type products_filesCreateOrConnectWithoutProductsInput = {
    where: products_filesWhereUniqueInput
    create: XOR<products_filesCreateWithoutProductsInput, products_filesUncheckedCreateWithoutProductsInput>
  }

  export type products_filesCreateManyProductsInputEnvelope = {
    data: products_filesCreateManyProductsInput | products_filesCreateManyProductsInput[]
    skipDuplicates?: boolean
  }

  export type variant_productsCreateWithoutProductsInput = {
    id?: bigint | number
    created_at?: Date | string
    type_sale: number
    price: Decimal | DecimalJsLike | number | string
    price_iva: Decimal | DecimalJsLike | number | string
    stock: number
    sort: number
    attributes?: NullableJsonNullValueInput | InputJsonValue
    status: number
    iva: Decimal | DecimalJsLike | number | string
    product_code: string
    cart_details?: cart_detailsCreateNestedManyWithoutVariant_productsInput
    order_details?: order_detailsCreateNestedManyWithoutVariant_productsInput
  }

  export type variant_productsUncheckedCreateWithoutProductsInput = {
    id?: bigint | number
    created_at?: Date | string
    type_sale: number
    price: Decimal | DecimalJsLike | number | string
    price_iva: Decimal | DecimalJsLike | number | string
    stock: number
    sort: number
    attributes?: NullableJsonNullValueInput | InputJsonValue
    status: number
    iva: Decimal | DecimalJsLike | number | string
    product_code: string
    cart_details?: cart_detailsUncheckedCreateNestedManyWithoutVariant_productsInput
    order_details?: order_detailsUncheckedCreateNestedManyWithoutVariant_productsInput
  }

  export type variant_productsCreateOrConnectWithoutProductsInput = {
    where: variant_productsWhereUniqueInput
    create: XOR<variant_productsCreateWithoutProductsInput, variant_productsUncheckedCreateWithoutProductsInput>
  }

  export type variant_productsCreateManyProductsInputEnvelope = {
    data: variant_productsCreateManyProductsInput | variant_productsCreateManyProductsInput[]
    skipDuplicates?: boolean
  }

  export type categoriesUpsertWithoutProductsInput = {
    update: XOR<categoriesUpdateWithoutProductsInput, categoriesUncheckedUpdateWithoutProductsInput>
    create: XOR<categoriesCreateWithoutProductsInput, categoriesUncheckedCreateWithoutProductsInput>
    where?: categoriesWhereInput
  }

  export type categoriesUpdateToOneWithWhereWithoutProductsInput = {
    where?: categoriesWhereInput
    data: XOR<categoriesUpdateWithoutProductsInput, categoriesUncheckedUpdateWithoutProductsInput>
  }

  export type categoriesUpdateWithoutProductsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    iva?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    categories?: categoriesUpdateOneWithoutOther_categoriesNestedInput
    other_categories?: categoriesUpdateManyWithoutCategoriesNestedInput
    users?: usersUpdateOneWithoutCategoriesNestedInput
  }

  export type categoriesUncheckedUpdateWithoutProductsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    iva?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    parent_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    other_categories?: categoriesUncheckedUpdateManyWithoutCategoriesNestedInput
  }

  export type usersUpsertWithoutProductsInput = {
    update: XOR<usersUpdateWithoutProductsInput, usersUncheckedUpdateWithoutProductsInput>
    create: XOR<usersCreateWithoutProductsInput, usersUncheckedCreateWithoutProductsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutProductsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutProductsInput, usersUncheckedUpdateWithoutProductsInput>
  }

  export type usersUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telephone?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    cif?: NullableStringFieldUpdateOperationsInput | string | null
    carts?: cartsUpdateManyWithoutUsersNestedInput
    categories?: categoriesUpdateManyWithoutUsersNestedInput
    chat_participants?: chat_participantsUpdateManyWithoutUsersNestedInput
    configurations?: configurationsUpdateManyWithoutUsersNestedInput
    deliveries?: deliveriesUpdateManyWithoutUsersNestedInput
    direction?: directionUpdateManyWithoutUsersNestedInput
    discounts?: discountsUpdateManyWithoutUsersNestedInput
    messages?: messagesUpdateManyWithoutUsersNestedInput
    notifications?: notificationsUpdateManyWithoutUsersNestedInput
    orders_orders_retailer_idTousers?: ordersUpdateManyWithoutUsers_orders_retailer_idTousersNestedInput
    orders_orders_wholesaler_idTousers?: ordersUpdateManyWithoutUsers_orders_wholesaler_idTousersNestedInput
    user_sessions?: user_sessionsUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telephone?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    cif?: NullableStringFieldUpdateOperationsInput | string | null
    carts?: cartsUncheckedUpdateManyWithoutUsersNestedInput
    categories?: categoriesUncheckedUpdateManyWithoutUsersNestedInput
    chat_participants?: chat_participantsUncheckedUpdateManyWithoutUsersNestedInput
    configurations?: configurationsUncheckedUpdateManyWithoutUsersNestedInput
    deliveries?: deliveriesUncheckedUpdateManyWithoutUsersNestedInput
    direction?: directionUncheckedUpdateManyWithoutUsersNestedInput
    discounts?: discountsUncheckedUpdateManyWithoutUsersNestedInput
    messages?: messagesUncheckedUpdateManyWithoutUsersNestedInput
    notifications?: notificationsUncheckedUpdateManyWithoutUsersNestedInput
    orders_orders_retailer_idTousers?: ordersUncheckedUpdateManyWithoutUsers_orders_retailer_idTousersNestedInput
    orders_orders_wholesaler_idTousers?: ordersUncheckedUpdateManyWithoutUsers_orders_wholesaler_idTousersNestedInput
    user_sessions?: user_sessionsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type products_filesUpsertWithWhereUniqueWithoutProductsInput = {
    where: products_filesWhereUniqueInput
    update: XOR<products_filesUpdateWithoutProductsInput, products_filesUncheckedUpdateWithoutProductsInput>
    create: XOR<products_filesCreateWithoutProductsInput, products_filesUncheckedCreateWithoutProductsInput>
  }

  export type products_filesUpdateWithWhereUniqueWithoutProductsInput = {
    where: products_filesWhereUniqueInput
    data: XOR<products_filesUpdateWithoutProductsInput, products_filesUncheckedUpdateWithoutProductsInput>
  }

  export type products_filesUpdateManyWithWhereWithoutProductsInput = {
    where: products_filesScalarWhereInput
    data: XOR<products_filesUpdateManyMutationInput, products_filesUncheckedUpdateManyWithoutProductsInput>
  }

  export type variant_productsUpsertWithWhereUniqueWithoutProductsInput = {
    where: variant_productsWhereUniqueInput
    update: XOR<variant_productsUpdateWithoutProductsInput, variant_productsUncheckedUpdateWithoutProductsInput>
    create: XOR<variant_productsCreateWithoutProductsInput, variant_productsUncheckedCreateWithoutProductsInput>
  }

  export type variant_productsUpdateWithWhereUniqueWithoutProductsInput = {
    where: variant_productsWhereUniqueInput
    data: XOR<variant_productsUpdateWithoutProductsInput, variant_productsUncheckedUpdateWithoutProductsInput>
  }

  export type variant_productsUpdateManyWithWhereWithoutProductsInput = {
    where: variant_productsScalarWhereInput
    data: XOR<variant_productsUpdateManyMutationInput, variant_productsUncheckedUpdateManyWithoutProductsInput>
  }

  export type variant_productsScalarWhereInput = {
    AND?: variant_productsScalarWhereInput | variant_productsScalarWhereInput[]
    OR?: variant_productsScalarWhereInput[]
    NOT?: variant_productsScalarWhereInput | variant_productsScalarWhereInput[]
    id?: BigIntFilter<"variant_products"> | bigint | number
    created_at?: DateTimeFilter<"variant_products"> | Date | string
    product_id?: BigIntFilter<"variant_products"> | bigint | number
    type_sale?: IntFilter<"variant_products"> | number
    price?: DecimalFilter<"variant_products"> | Decimal | DecimalJsLike | number | string
    price_iva?: DecimalFilter<"variant_products"> | Decimal | DecimalJsLike | number | string
    stock?: IntFilter<"variant_products"> | number
    sort?: IntFilter<"variant_products"> | number
    attributes?: JsonNullableFilter<"variant_products">
    status?: IntFilter<"variant_products"> | number
    iva?: DecimalFilter<"variant_products"> | Decimal | DecimalJsLike | number | string
    product_code?: StringFilter<"variant_products"> | string
  }

  export type filesCreateWithoutProducts_filesInput = {
    id?: bigint | number
    file_name: string
    file_hash: string
    mime_type: string
    file_size: bigint | number
    url: string
    created_at?: Date | string
    uploaded_by?: bigint | number
    to_delete?: boolean
    message_files?: message_filesCreateNestedManyWithoutFilesInput
  }

  export type filesUncheckedCreateWithoutProducts_filesInput = {
    id?: bigint | number
    file_name: string
    file_hash: string
    mime_type: string
    file_size: bigint | number
    url: string
    created_at?: Date | string
    uploaded_by?: bigint | number
    to_delete?: boolean
    message_files?: message_filesUncheckedCreateNestedManyWithoutFilesInput
  }

  export type filesCreateOrConnectWithoutProducts_filesInput = {
    where: filesWhereUniqueInput
    create: XOR<filesCreateWithoutProducts_filesInput, filesUncheckedCreateWithoutProducts_filesInput>
  }

  export type productsCreateWithoutProducts_filesInput = {
    id?: bigint | number
    name: string
    title?: string | null
    description?: string | null
    iva: Decimal | DecimalJsLike | number | string
    status?: number
    created_at?: Date | string
    product_code: string
    categories: categoriesCreateNestedOneWithoutProductsInput
    users: usersCreateNestedOneWithoutProductsInput
    variant_products?: variant_productsCreateNestedManyWithoutProductsInput
  }

  export type productsUncheckedCreateWithoutProducts_filesInput = {
    id?: bigint | number
    user_id: string
    name: string
    title?: string | null
    description?: string | null
    iva: Decimal | DecimalJsLike | number | string
    category_id: bigint | number
    status?: number
    created_at?: Date | string
    product_code: string
    variant_products?: variant_productsUncheckedCreateNestedManyWithoutProductsInput
  }

  export type productsCreateOrConnectWithoutProducts_filesInput = {
    where: productsWhereUniqueInput
    create: XOR<productsCreateWithoutProducts_filesInput, productsUncheckedCreateWithoutProducts_filesInput>
  }

  export type filesUpsertWithoutProducts_filesInput = {
    update: XOR<filesUpdateWithoutProducts_filesInput, filesUncheckedUpdateWithoutProducts_filesInput>
    create: XOR<filesCreateWithoutProducts_filesInput, filesUncheckedCreateWithoutProducts_filesInput>
    where?: filesWhereInput
  }

  export type filesUpdateToOneWithWhereWithoutProducts_filesInput = {
    where?: filesWhereInput
    data: XOR<filesUpdateWithoutProducts_filesInput, filesUncheckedUpdateWithoutProducts_filesInput>
  }

  export type filesUpdateWithoutProducts_filesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    file_name?: StringFieldUpdateOperationsInput | string
    file_hash?: StringFieldUpdateOperationsInput | string
    mime_type?: StringFieldUpdateOperationsInput | string
    file_size?: BigIntFieldUpdateOperationsInput | bigint | number
    url?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    uploaded_by?: BigIntFieldUpdateOperationsInput | bigint | number
    to_delete?: BoolFieldUpdateOperationsInput | boolean
    message_files?: message_filesUpdateManyWithoutFilesNestedInput
  }

  export type filesUncheckedUpdateWithoutProducts_filesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    file_name?: StringFieldUpdateOperationsInput | string
    file_hash?: StringFieldUpdateOperationsInput | string
    mime_type?: StringFieldUpdateOperationsInput | string
    file_size?: BigIntFieldUpdateOperationsInput | bigint | number
    url?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    uploaded_by?: BigIntFieldUpdateOperationsInput | bigint | number
    to_delete?: BoolFieldUpdateOperationsInput | boolean
    message_files?: message_filesUncheckedUpdateManyWithoutFilesNestedInput
  }

  export type productsUpsertWithoutProducts_filesInput = {
    update: XOR<productsUpdateWithoutProducts_filesInput, productsUncheckedUpdateWithoutProducts_filesInput>
    create: XOR<productsCreateWithoutProducts_filesInput, productsUncheckedCreateWithoutProducts_filesInput>
    where?: productsWhereInput
  }

  export type productsUpdateToOneWithWhereWithoutProducts_filesInput = {
    where?: productsWhereInput
    data: XOR<productsUpdateWithoutProducts_filesInput, productsUncheckedUpdateWithoutProducts_filesInput>
  }

  export type productsUpdateWithoutProducts_filesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    iva?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    product_code?: StringFieldUpdateOperationsInput | string
    categories?: categoriesUpdateOneRequiredWithoutProductsNestedInput
    users?: usersUpdateOneRequiredWithoutProductsNestedInput
    variant_products?: variant_productsUpdateManyWithoutProductsNestedInput
  }

  export type productsUncheckedUpdateWithoutProducts_filesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    iva?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    category_id?: BigIntFieldUpdateOperationsInput | bigint | number
    status?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    product_code?: StringFieldUpdateOperationsInput | string
    variant_products?: variant_productsUncheckedUpdateManyWithoutProductsNestedInput
  }

  export type usersCreateWithoutUser_sessionsInput = {
    id?: string
    user_id?: string | null
    first_name?: string | null
    last_name?: string | null
    username?: string | null
    password: string
    email?: string | null
    telephone?: string | null
    status?: $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    updated_at?: Date | string | null
    role: $Enums.UserRole
    cif?: string | null
    carts?: cartsCreateNestedManyWithoutUsersInput
    categories?: categoriesCreateNestedManyWithoutUsersInput
    chat_participants?: chat_participantsCreateNestedManyWithoutUsersInput
    configurations?: configurationsCreateNestedManyWithoutUsersInput
    deliveries?: deliveriesCreateNestedManyWithoutUsersInput
    direction?: directionCreateNestedManyWithoutUsersInput
    discounts?: discountsCreateNestedManyWithoutUsersInput
    messages?: messagesCreateNestedManyWithoutUsersInput
    notifications?: notificationsCreateNestedManyWithoutUsersInput
    orders_orders_retailer_idTousers?: ordersCreateNestedManyWithoutUsers_orders_retailer_idTousersInput
    orders_orders_wholesaler_idTousers?: ordersCreateNestedManyWithoutUsers_orders_wholesaler_idTousersInput
    products?: productsCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutUser_sessionsInput = {
    id?: string
    user_id?: string | null
    first_name?: string | null
    last_name?: string | null
    username?: string | null
    password: string
    email?: string | null
    telephone?: string | null
    status?: $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    updated_at?: Date | string | null
    role: $Enums.UserRole
    cif?: string | null
    carts?: cartsUncheckedCreateNestedManyWithoutUsersInput
    categories?: categoriesUncheckedCreateNestedManyWithoutUsersInput
    chat_participants?: chat_participantsUncheckedCreateNestedManyWithoutUsersInput
    configurations?: configurationsUncheckedCreateNestedManyWithoutUsersInput
    deliveries?: deliveriesUncheckedCreateNestedManyWithoutUsersInput
    direction?: directionUncheckedCreateNestedManyWithoutUsersInput
    discounts?: discountsUncheckedCreateNestedManyWithoutUsersInput
    messages?: messagesUncheckedCreateNestedManyWithoutUsersInput
    notifications?: notificationsUncheckedCreateNestedManyWithoutUsersInput
    orders_orders_retailer_idTousers?: ordersUncheckedCreateNestedManyWithoutUsers_orders_retailer_idTousersInput
    orders_orders_wholesaler_idTousers?: ordersUncheckedCreateNestedManyWithoutUsers_orders_wholesaler_idTousersInput
    products?: productsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutUser_sessionsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutUser_sessionsInput, usersUncheckedCreateWithoutUser_sessionsInput>
  }

  export type usersUpsertWithoutUser_sessionsInput = {
    update: XOR<usersUpdateWithoutUser_sessionsInput, usersUncheckedUpdateWithoutUser_sessionsInput>
    create: XOR<usersCreateWithoutUser_sessionsInput, usersUncheckedCreateWithoutUser_sessionsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutUser_sessionsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutUser_sessionsInput, usersUncheckedUpdateWithoutUser_sessionsInput>
  }

  export type usersUpdateWithoutUser_sessionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telephone?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    cif?: NullableStringFieldUpdateOperationsInput | string | null
    carts?: cartsUpdateManyWithoutUsersNestedInput
    categories?: categoriesUpdateManyWithoutUsersNestedInput
    chat_participants?: chat_participantsUpdateManyWithoutUsersNestedInput
    configurations?: configurationsUpdateManyWithoutUsersNestedInput
    deliveries?: deliveriesUpdateManyWithoutUsersNestedInput
    direction?: directionUpdateManyWithoutUsersNestedInput
    discounts?: discountsUpdateManyWithoutUsersNestedInput
    messages?: messagesUpdateManyWithoutUsersNestedInput
    notifications?: notificationsUpdateManyWithoutUsersNestedInput
    orders_orders_retailer_idTousers?: ordersUpdateManyWithoutUsers_orders_retailer_idTousersNestedInput
    orders_orders_wholesaler_idTousers?: ordersUpdateManyWithoutUsers_orders_wholesaler_idTousersNestedInput
    products?: productsUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutUser_sessionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telephone?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    cif?: NullableStringFieldUpdateOperationsInput | string | null
    carts?: cartsUncheckedUpdateManyWithoutUsersNestedInput
    categories?: categoriesUncheckedUpdateManyWithoutUsersNestedInput
    chat_participants?: chat_participantsUncheckedUpdateManyWithoutUsersNestedInput
    configurations?: configurationsUncheckedUpdateManyWithoutUsersNestedInput
    deliveries?: deliveriesUncheckedUpdateManyWithoutUsersNestedInput
    direction?: directionUncheckedUpdateManyWithoutUsersNestedInput
    discounts?: discountsUncheckedUpdateManyWithoutUsersNestedInput
    messages?: messagesUncheckedUpdateManyWithoutUsersNestedInput
    notifications?: notificationsUncheckedUpdateManyWithoutUsersNestedInput
    orders_orders_retailer_idTousers?: ordersUncheckedUpdateManyWithoutUsers_orders_retailer_idTousersNestedInput
    orders_orders_wholesaler_idTousers?: ordersUncheckedUpdateManyWithoutUsers_orders_wholesaler_idTousersNestedInput
    products?: productsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type cartsCreateWithoutUsersInput = {
    id?: bigint | number
    created_at?: Date | string
    cart_details?: cart_detailsCreateNestedManyWithoutCartsInput
  }

  export type cartsUncheckedCreateWithoutUsersInput = {
    id?: bigint | number
    created_at?: Date | string
    cart_details?: cart_detailsUncheckedCreateNestedManyWithoutCartsInput
  }

  export type cartsCreateOrConnectWithoutUsersInput = {
    where: cartsWhereUniqueInput
    create: XOR<cartsCreateWithoutUsersInput, cartsUncheckedCreateWithoutUsersInput>
  }

  export type cartsCreateManyUsersInputEnvelope = {
    data: cartsCreateManyUsersInput | cartsCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type categoriesCreateWithoutUsersInput = {
    id?: bigint | number
    name: string
    iva?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string
    categories?: categoriesCreateNestedOneWithoutOther_categoriesInput
    other_categories?: categoriesCreateNestedManyWithoutCategoriesInput
    products?: productsCreateNestedManyWithoutCategoriesInput
  }

  export type categoriesUncheckedCreateWithoutUsersInput = {
    id?: bigint | number
    name: string
    iva?: Decimal | DecimalJsLike | number | string | null
    parent_id?: bigint | number | null
    created_at?: Date | string
    other_categories?: categoriesUncheckedCreateNestedManyWithoutCategoriesInput
    products?: productsUncheckedCreateNestedManyWithoutCategoriesInput
  }

  export type categoriesCreateOrConnectWithoutUsersInput = {
    where: categoriesWhereUniqueInput
    create: XOR<categoriesCreateWithoutUsersInput, categoriesUncheckedCreateWithoutUsersInput>
  }

  export type categoriesCreateManyUsersInputEnvelope = {
    data: categoriesCreateManyUsersInput | categoriesCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type chat_participantsCreateWithoutUsersInput = {
    created_at?: Date | string | null
    chat_panels: chat_panelsCreateNestedOneWithoutChat_participantsInput
  }

  export type chat_participantsUncheckedCreateWithoutUsersInput = {
    chat_panel_id: bigint | number
    created_at?: Date | string | null
  }

  export type chat_participantsCreateOrConnectWithoutUsersInput = {
    where: chat_participantsWhereUniqueInput
    create: XOR<chat_participantsCreateWithoutUsersInput, chat_participantsUncheckedCreateWithoutUsersInput>
  }

  export type chat_participantsCreateManyUsersInputEnvelope = {
    data: chat_participantsCreateManyUsersInput | chat_participantsCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type configurationsCreateWithoutUsersInput = {
    id?: bigint | number
    language?: string
    timezone?: string
  }

  export type configurationsUncheckedCreateWithoutUsersInput = {
    id?: bigint | number
    language?: string
    timezone?: string
  }

  export type configurationsCreateOrConnectWithoutUsersInput = {
    where: configurationsWhereUniqueInput
    create: XOR<configurationsCreateWithoutUsersInput, configurationsUncheckedCreateWithoutUsersInput>
  }

  export type configurationsCreateManyUsersInputEnvelope = {
    data: configurationsCreateManyUsersInput | configurationsCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type deliveriesCreateWithoutUsersInput = {
    id?: bigint | number
    order_id: bigint | number
    status?: $Enums.DeliveryStatus
    start_time?: Date | string
    end_time?: Date | string | null
    notes: string
    created_at?: Date | string
    updated_at?: Date | string | null
    latitude: number
    longitude: number
    delivery_timeline?: delivery_timelineCreateNestedManyWithoutDeliveriesInput
  }

  export type deliveriesUncheckedCreateWithoutUsersInput = {
    id?: bigint | number
    order_id: bigint | number
    status?: $Enums.DeliveryStatus
    start_time?: Date | string
    end_time?: Date | string | null
    notes: string
    created_at?: Date | string
    updated_at?: Date | string | null
    latitude: number
    longitude: number
    delivery_timeline?: delivery_timelineUncheckedCreateNestedManyWithoutDeliveriesInput
  }

  export type deliveriesCreateOrConnectWithoutUsersInput = {
    where: deliveriesWhereUniqueInput
    create: XOR<deliveriesCreateWithoutUsersInput, deliveriesUncheckedCreateWithoutUsersInput>
  }

  export type deliveriesCreateManyUsersInputEnvelope = {
    data: deliveriesCreateManyUsersInput | deliveriesCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type directionCreateWithoutUsersInput = {
    id?: bigint | number
    type: $Enums.AddressType
    direction: string
    city: string
    province: string
    zip_code: string
    latitude: number
    longitude: number
    created_at?: Date | string
    updated_at?: Date | string | null
    orders?: ordersCreateNestedManyWithoutDirecctionInput
  }

  export type directionUncheckedCreateWithoutUsersInput = {
    id?: bigint | number
    type: $Enums.AddressType
    direction: string
    city: string
    province: string
    zip_code: string
    latitude: number
    longitude: number
    created_at?: Date | string
    updated_at?: Date | string | null
    orders?: ordersUncheckedCreateNestedManyWithoutDirecctionInput
  }

  export type directionCreateOrConnectWithoutUsersInput = {
    where: directionWhereUniqueInput
    create: XOR<directionCreateWithoutUsersInput, directionUncheckedCreateWithoutUsersInput>
  }

  export type directionCreateManyUsersInputEnvelope = {
    data: directionCreateManyUsersInput | directionCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type discountsCreateWithoutUsersInput = {
    id?: bigint | number
    name: string
    type_value: JsonNullValueInput | InputJsonValue
    applies_to_all?: boolean
    start_date: Date | string
    end_date: Date | string
    status?: number
    created_at?: Date | string
  }

  export type discountsUncheckedCreateWithoutUsersInput = {
    id?: bigint | number
    name: string
    type_value: JsonNullValueInput | InputJsonValue
    applies_to_all?: boolean
    start_date: Date | string
    end_date: Date | string
    status?: number
    created_at?: Date | string
  }

  export type discountsCreateOrConnectWithoutUsersInput = {
    where: discountsWhereUniqueInput
    create: XOR<discountsCreateWithoutUsersInput, discountsUncheckedCreateWithoutUsersInput>
  }

  export type discountsCreateManyUsersInputEnvelope = {
    data: discountsCreateManyUsersInput | discountsCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type messagesCreateWithoutUsersInput = {
    id?: bigint | number
    content?: string | null
    created_at?: Date | string
    is_read?: boolean
    message_files?: message_filesCreateNestedManyWithoutMessagesInput
    chat_panels: chat_panelsCreateNestedOneWithoutMessagesInput
    messages?: messagesCreateNestedOneWithoutOther_messagesInput
    other_messages?: messagesCreateNestedManyWithoutMessagesInput
  }

  export type messagesUncheckedCreateWithoutUsersInput = {
    id?: bigint | number
    chat_panel_id: bigint | number
    reply_to?: bigint | number | null
    content?: string | null
    created_at?: Date | string
    is_read?: boolean
    message_files?: message_filesUncheckedCreateNestedManyWithoutMessagesInput
    other_messages?: messagesUncheckedCreateNestedManyWithoutMessagesInput
  }

  export type messagesCreateOrConnectWithoutUsersInput = {
    where: messagesWhereUniqueInput
    create: XOR<messagesCreateWithoutUsersInput, messagesUncheckedCreateWithoutUsersInput>
  }

  export type messagesCreateManyUsersInputEnvelope = {
    data: messagesCreateManyUsersInput | messagesCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type notificationsCreateWithoutUsersInput = {
    id?: bigint | number
    title: string
    message: string
    type: number
    is_read?: boolean
    click_action: string
    created_at?: Date | string
  }

  export type notificationsUncheckedCreateWithoutUsersInput = {
    id?: bigint | number
    title: string
    message: string
    type: number
    is_read?: boolean
    click_action: string
    created_at?: Date | string
  }

  export type notificationsCreateOrConnectWithoutUsersInput = {
    where: notificationsWhereUniqueInput
    create: XOR<notificationsCreateWithoutUsersInput, notificationsUncheckedCreateWithoutUsersInput>
  }

  export type notificationsCreateManyUsersInputEnvelope = {
    data: notificationsCreateManyUsersInput | notificationsCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type ordersCreateWithoutUsers_orders_retailer_idTousersInput = {
    id?: bigint | number
    status?: number
    payment_method: number
    notes?: string | null
    discount_total: Decimal | DecimalJsLike | number | string
    subtotal: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    iva_total: Decimal | DecimalJsLike | number | string
    discount_log: JsonNullValueInput | InputJsonValue
    estimated_date?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string | null
    order_details?: order_detailsCreateNestedManyWithoutOrdersInput
    direcction?: directionCreateNestedOneWithoutOrdersInput
    users_orders_wholesaler_idTousers?: usersCreateNestedOneWithoutOrders_orders_wholesaler_idTousersInput
  }

  export type ordersUncheckedCreateWithoutUsers_orders_retailer_idTousersInput = {
    id?: bigint | number
    wholesaler_id?: string | null
    status?: number
    payment_method: number
    shipping_address?: bigint | number | null
    notes?: string | null
    discount_total: Decimal | DecimalJsLike | number | string
    subtotal: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    iva_total: Decimal | DecimalJsLike | number | string
    discount_log: JsonNullValueInput | InputJsonValue
    estimated_date?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string | null
    order_details?: order_detailsUncheckedCreateNestedManyWithoutOrdersInput
  }

  export type ordersCreateOrConnectWithoutUsers_orders_retailer_idTousersInput = {
    where: ordersWhereUniqueInput
    create: XOR<ordersCreateWithoutUsers_orders_retailer_idTousersInput, ordersUncheckedCreateWithoutUsers_orders_retailer_idTousersInput>
  }

  export type ordersCreateManyUsers_orders_retailer_idTousersInputEnvelope = {
    data: ordersCreateManyUsers_orders_retailer_idTousersInput | ordersCreateManyUsers_orders_retailer_idTousersInput[]
    skipDuplicates?: boolean
  }

  export type ordersCreateWithoutUsers_orders_wholesaler_idTousersInput = {
    id?: bigint | number
    status?: number
    payment_method: number
    notes?: string | null
    discount_total: Decimal | DecimalJsLike | number | string
    subtotal: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    iva_total: Decimal | DecimalJsLike | number | string
    discount_log: JsonNullValueInput | InputJsonValue
    estimated_date?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string | null
    order_details?: order_detailsCreateNestedManyWithoutOrdersInput
    users_orders_retailer_idTousers?: usersCreateNestedOneWithoutOrders_orders_retailer_idTousersInput
    direcction?: directionCreateNestedOneWithoutOrdersInput
  }

  export type ordersUncheckedCreateWithoutUsers_orders_wholesaler_idTousersInput = {
    id?: bigint | number
    retailer_id?: string | null
    status?: number
    payment_method: number
    shipping_address?: bigint | number | null
    notes?: string | null
    discount_total: Decimal | DecimalJsLike | number | string
    subtotal: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    iva_total: Decimal | DecimalJsLike | number | string
    discount_log: JsonNullValueInput | InputJsonValue
    estimated_date?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string | null
    order_details?: order_detailsUncheckedCreateNestedManyWithoutOrdersInput
  }

  export type ordersCreateOrConnectWithoutUsers_orders_wholesaler_idTousersInput = {
    where: ordersWhereUniqueInput
    create: XOR<ordersCreateWithoutUsers_orders_wholesaler_idTousersInput, ordersUncheckedCreateWithoutUsers_orders_wholesaler_idTousersInput>
  }

  export type ordersCreateManyUsers_orders_wholesaler_idTousersInputEnvelope = {
    data: ordersCreateManyUsers_orders_wholesaler_idTousersInput | ordersCreateManyUsers_orders_wholesaler_idTousersInput[]
    skipDuplicates?: boolean
  }

  export type productsCreateWithoutUsersInput = {
    id?: bigint | number
    name: string
    title?: string | null
    description?: string | null
    iva: Decimal | DecimalJsLike | number | string
    status?: number
    created_at?: Date | string
    product_code: string
    categories: categoriesCreateNestedOneWithoutProductsInput
    products_files?: products_filesCreateNestedManyWithoutProductsInput
    variant_products?: variant_productsCreateNestedManyWithoutProductsInput
  }

  export type productsUncheckedCreateWithoutUsersInput = {
    id?: bigint | number
    name: string
    title?: string | null
    description?: string | null
    iva: Decimal | DecimalJsLike | number | string
    category_id: bigint | number
    status?: number
    created_at?: Date | string
    product_code: string
    products_files?: products_filesUncheckedCreateNestedManyWithoutProductsInput
    variant_products?: variant_productsUncheckedCreateNestedManyWithoutProductsInput
  }

  export type productsCreateOrConnectWithoutUsersInput = {
    where: productsWhereUniqueInput
    create: XOR<productsCreateWithoutUsersInput, productsUncheckedCreateWithoutUsersInput>
  }

  export type productsCreateManyUsersInputEnvelope = {
    data: productsCreateManyUsersInput | productsCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type user_sessionsCreateWithoutUsersInput = {
    session_id?: string
    device_name: string
    device_finger: string
    user_agent: string
    revoked?: boolean
    last_ip: string
    access_token?: string | null
    refresh_token?: string | null
    created_at?: Date | string
    last_active?: Date | string
  }

  export type user_sessionsUncheckedCreateWithoutUsersInput = {
    session_id?: string
    device_name: string
    device_finger: string
    user_agent: string
    revoked?: boolean
    last_ip: string
    access_token?: string | null
    refresh_token?: string | null
    created_at?: Date | string
    last_active?: Date | string
  }

  export type user_sessionsCreateOrConnectWithoutUsersInput = {
    where: user_sessionsWhereUniqueInput
    create: XOR<user_sessionsCreateWithoutUsersInput, user_sessionsUncheckedCreateWithoutUsersInput>
  }

  export type user_sessionsCreateManyUsersInputEnvelope = {
    data: user_sessionsCreateManyUsersInput | user_sessionsCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type cartsUpsertWithWhereUniqueWithoutUsersInput = {
    where: cartsWhereUniqueInput
    update: XOR<cartsUpdateWithoutUsersInput, cartsUncheckedUpdateWithoutUsersInput>
    create: XOR<cartsCreateWithoutUsersInput, cartsUncheckedCreateWithoutUsersInput>
  }

  export type cartsUpdateWithWhereUniqueWithoutUsersInput = {
    where: cartsWhereUniqueInput
    data: XOR<cartsUpdateWithoutUsersInput, cartsUncheckedUpdateWithoutUsersInput>
  }

  export type cartsUpdateManyWithWhereWithoutUsersInput = {
    where: cartsScalarWhereInput
    data: XOR<cartsUpdateManyMutationInput, cartsUncheckedUpdateManyWithoutUsersInput>
  }

  export type cartsScalarWhereInput = {
    AND?: cartsScalarWhereInput | cartsScalarWhereInput[]
    OR?: cartsScalarWhereInput[]
    NOT?: cartsScalarWhereInput | cartsScalarWhereInput[]
    id?: BigIntFilter<"carts"> | bigint | number
    user_id?: UuidFilter<"carts"> | string
    created_at?: DateTimeFilter<"carts"> | Date | string
  }

  export type categoriesUpsertWithWhereUniqueWithoutUsersInput = {
    where: categoriesWhereUniqueInput
    update: XOR<categoriesUpdateWithoutUsersInput, categoriesUncheckedUpdateWithoutUsersInput>
    create: XOR<categoriesCreateWithoutUsersInput, categoriesUncheckedCreateWithoutUsersInput>
  }

  export type categoriesUpdateWithWhereUniqueWithoutUsersInput = {
    where: categoriesWhereUniqueInput
    data: XOR<categoriesUpdateWithoutUsersInput, categoriesUncheckedUpdateWithoutUsersInput>
  }

  export type categoriesUpdateManyWithWhereWithoutUsersInput = {
    where: categoriesScalarWhereInput
    data: XOR<categoriesUpdateManyMutationInput, categoriesUncheckedUpdateManyWithoutUsersInput>
  }

  export type chat_participantsUpsertWithWhereUniqueWithoutUsersInput = {
    where: chat_participantsWhereUniqueInput
    update: XOR<chat_participantsUpdateWithoutUsersInput, chat_participantsUncheckedUpdateWithoutUsersInput>
    create: XOR<chat_participantsCreateWithoutUsersInput, chat_participantsUncheckedCreateWithoutUsersInput>
  }

  export type chat_participantsUpdateWithWhereUniqueWithoutUsersInput = {
    where: chat_participantsWhereUniqueInput
    data: XOR<chat_participantsUpdateWithoutUsersInput, chat_participantsUncheckedUpdateWithoutUsersInput>
  }

  export type chat_participantsUpdateManyWithWhereWithoutUsersInput = {
    where: chat_participantsScalarWhereInput
    data: XOR<chat_participantsUpdateManyMutationInput, chat_participantsUncheckedUpdateManyWithoutUsersInput>
  }

  export type configurationsUpsertWithWhereUniqueWithoutUsersInput = {
    where: configurationsWhereUniqueInput
    update: XOR<configurationsUpdateWithoutUsersInput, configurationsUncheckedUpdateWithoutUsersInput>
    create: XOR<configurationsCreateWithoutUsersInput, configurationsUncheckedCreateWithoutUsersInput>
  }

  export type configurationsUpdateWithWhereUniqueWithoutUsersInput = {
    where: configurationsWhereUniqueInput
    data: XOR<configurationsUpdateWithoutUsersInput, configurationsUncheckedUpdateWithoutUsersInput>
  }

  export type configurationsUpdateManyWithWhereWithoutUsersInput = {
    where: configurationsScalarWhereInput
    data: XOR<configurationsUpdateManyMutationInput, configurationsUncheckedUpdateManyWithoutUsersInput>
  }

  export type configurationsScalarWhereInput = {
    AND?: configurationsScalarWhereInput | configurationsScalarWhereInput[]
    OR?: configurationsScalarWhereInput[]
    NOT?: configurationsScalarWhereInput | configurationsScalarWhereInput[]
    id?: BigIntFilter<"configurations"> | bigint | number
    user_id?: UuidFilter<"configurations"> | string
    language?: StringFilter<"configurations"> | string
    timezone?: StringFilter<"configurations"> | string
  }

  export type deliveriesUpsertWithWhereUniqueWithoutUsersInput = {
    where: deliveriesWhereUniqueInput
    update: XOR<deliveriesUpdateWithoutUsersInput, deliveriesUncheckedUpdateWithoutUsersInput>
    create: XOR<deliveriesCreateWithoutUsersInput, deliveriesUncheckedCreateWithoutUsersInput>
  }

  export type deliveriesUpdateWithWhereUniqueWithoutUsersInput = {
    where: deliveriesWhereUniqueInput
    data: XOR<deliveriesUpdateWithoutUsersInput, deliveriesUncheckedUpdateWithoutUsersInput>
  }

  export type deliveriesUpdateManyWithWhereWithoutUsersInput = {
    where: deliveriesScalarWhereInput
    data: XOR<deliveriesUpdateManyMutationInput, deliveriesUncheckedUpdateManyWithoutUsersInput>
  }

  export type deliveriesScalarWhereInput = {
    AND?: deliveriesScalarWhereInput | deliveriesScalarWhereInput[]
    OR?: deliveriesScalarWhereInput[]
    NOT?: deliveriesScalarWhereInput | deliveriesScalarWhereInput[]
    id?: BigIntFilter<"deliveries"> | bigint | number
    order_id?: BigIntFilter<"deliveries"> | bigint | number
    delivery_person?: UuidFilter<"deliveries"> | string
    status?: EnumDeliveryStatusFilter<"deliveries"> | $Enums.DeliveryStatus
    start_time?: DateTimeFilter<"deliveries"> | Date | string
    end_time?: DateTimeNullableFilter<"deliveries"> | Date | string | null
    notes?: StringFilter<"deliveries"> | string
    created_at?: DateTimeFilter<"deliveries"> | Date | string
    updated_at?: DateTimeNullableFilter<"deliveries"> | Date | string | null
    latitude?: FloatFilter<"deliveries"> | number
    longitude?: FloatFilter<"deliveries"> | number
  }

  export type directionUpsertWithWhereUniqueWithoutUsersInput = {
    where: directionWhereUniqueInput
    update: XOR<directionUpdateWithoutUsersInput, directionUncheckedUpdateWithoutUsersInput>
    create: XOR<directionCreateWithoutUsersInput, directionUncheckedCreateWithoutUsersInput>
  }

  export type directionUpdateWithWhereUniqueWithoutUsersInput = {
    where: directionWhereUniqueInput
    data: XOR<directionUpdateWithoutUsersInput, directionUncheckedUpdateWithoutUsersInput>
  }

  export type directionUpdateManyWithWhereWithoutUsersInput = {
    where: directionScalarWhereInput
    data: XOR<directionUpdateManyMutationInput, directionUncheckedUpdateManyWithoutUsersInput>
  }

  export type directionScalarWhereInput = {
    AND?: directionScalarWhereInput | directionScalarWhereInput[]
    OR?: directionScalarWhereInput[]
    NOT?: directionScalarWhereInput | directionScalarWhereInput[]
    id?: BigIntFilter<"direction"> | bigint | number
    user_id?: UuidFilter<"direction"> | string
    type?: EnumAddressTypeFilter<"direction"> | $Enums.AddressType
    direction?: StringFilter<"direction"> | string
    city?: StringFilter<"direction"> | string
    province?: StringFilter<"direction"> | string
    zip_code?: StringFilter<"direction"> | string
    latitude?: FloatFilter<"direction"> | number
    longitude?: FloatFilter<"direction"> | number
    created_at?: DateTimeFilter<"direction"> | Date | string
    updated_at?: DateTimeNullableFilter<"direction"> | Date | string | null
  }

  export type discountsUpsertWithWhereUniqueWithoutUsersInput = {
    where: discountsWhereUniqueInput
    update: XOR<discountsUpdateWithoutUsersInput, discountsUncheckedUpdateWithoutUsersInput>
    create: XOR<discountsCreateWithoutUsersInput, discountsUncheckedCreateWithoutUsersInput>
  }

  export type discountsUpdateWithWhereUniqueWithoutUsersInput = {
    where: discountsWhereUniqueInput
    data: XOR<discountsUpdateWithoutUsersInput, discountsUncheckedUpdateWithoutUsersInput>
  }

  export type discountsUpdateManyWithWhereWithoutUsersInput = {
    where: discountsScalarWhereInput
    data: XOR<discountsUpdateManyMutationInput, discountsUncheckedUpdateManyWithoutUsersInput>
  }

  export type discountsScalarWhereInput = {
    AND?: discountsScalarWhereInput | discountsScalarWhereInput[]
    OR?: discountsScalarWhereInput[]
    NOT?: discountsScalarWhereInput | discountsScalarWhereInput[]
    id?: BigIntFilter<"discounts"> | bigint | number
    user_id?: UuidFilter<"discounts"> | string
    name?: StringFilter<"discounts"> | string
    type_value?: JsonFilter<"discounts">
    applies_to_all?: BoolFilter<"discounts"> | boolean
    start_date?: DateTimeFilter<"discounts"> | Date | string
    end_date?: DateTimeFilter<"discounts"> | Date | string
    status?: IntFilter<"discounts"> | number
    created_at?: DateTimeFilter<"discounts"> | Date | string
  }

  export type messagesUpsertWithWhereUniqueWithoutUsersInput = {
    where: messagesWhereUniqueInput
    update: XOR<messagesUpdateWithoutUsersInput, messagesUncheckedUpdateWithoutUsersInput>
    create: XOR<messagesCreateWithoutUsersInput, messagesUncheckedCreateWithoutUsersInput>
  }

  export type messagesUpdateWithWhereUniqueWithoutUsersInput = {
    where: messagesWhereUniqueInput
    data: XOR<messagesUpdateWithoutUsersInput, messagesUncheckedUpdateWithoutUsersInput>
  }

  export type messagesUpdateManyWithWhereWithoutUsersInput = {
    where: messagesScalarWhereInput
    data: XOR<messagesUpdateManyMutationInput, messagesUncheckedUpdateManyWithoutUsersInput>
  }

  export type notificationsUpsertWithWhereUniqueWithoutUsersInput = {
    where: notificationsWhereUniqueInput
    update: XOR<notificationsUpdateWithoutUsersInput, notificationsUncheckedUpdateWithoutUsersInput>
    create: XOR<notificationsCreateWithoutUsersInput, notificationsUncheckedCreateWithoutUsersInput>
  }

  export type notificationsUpdateWithWhereUniqueWithoutUsersInput = {
    where: notificationsWhereUniqueInput
    data: XOR<notificationsUpdateWithoutUsersInput, notificationsUncheckedUpdateWithoutUsersInput>
  }

  export type notificationsUpdateManyWithWhereWithoutUsersInput = {
    where: notificationsScalarWhereInput
    data: XOR<notificationsUpdateManyMutationInput, notificationsUncheckedUpdateManyWithoutUsersInput>
  }

  export type notificationsScalarWhereInput = {
    AND?: notificationsScalarWhereInput | notificationsScalarWhereInput[]
    OR?: notificationsScalarWhereInput[]
    NOT?: notificationsScalarWhereInput | notificationsScalarWhereInput[]
    id?: BigIntFilter<"notifications"> | bigint | number
    user_id?: UuidFilter<"notifications"> | string
    title?: StringFilter<"notifications"> | string
    message?: StringFilter<"notifications"> | string
    type?: IntFilter<"notifications"> | number
    is_read?: BoolFilter<"notifications"> | boolean
    click_action?: StringFilter<"notifications"> | string
    created_at?: DateTimeFilter<"notifications"> | Date | string
  }

  export type ordersUpsertWithWhereUniqueWithoutUsers_orders_retailer_idTousersInput = {
    where: ordersWhereUniqueInput
    update: XOR<ordersUpdateWithoutUsers_orders_retailer_idTousersInput, ordersUncheckedUpdateWithoutUsers_orders_retailer_idTousersInput>
    create: XOR<ordersCreateWithoutUsers_orders_retailer_idTousersInput, ordersUncheckedCreateWithoutUsers_orders_retailer_idTousersInput>
  }

  export type ordersUpdateWithWhereUniqueWithoutUsers_orders_retailer_idTousersInput = {
    where: ordersWhereUniqueInput
    data: XOR<ordersUpdateWithoutUsers_orders_retailer_idTousersInput, ordersUncheckedUpdateWithoutUsers_orders_retailer_idTousersInput>
  }

  export type ordersUpdateManyWithWhereWithoutUsers_orders_retailer_idTousersInput = {
    where: ordersScalarWhereInput
    data: XOR<ordersUpdateManyMutationInput, ordersUncheckedUpdateManyWithoutUsers_orders_retailer_idTousersInput>
  }

  export type ordersScalarWhereInput = {
    AND?: ordersScalarWhereInput | ordersScalarWhereInput[]
    OR?: ordersScalarWhereInput[]
    NOT?: ordersScalarWhereInput | ordersScalarWhereInput[]
    id?: BigIntFilter<"orders"> | bigint | number
    retailer_id?: UuidNullableFilter<"orders"> | string | null
    wholesaler_id?: UuidNullableFilter<"orders"> | string | null
    status?: IntFilter<"orders"> | number
    payment_method?: IntFilter<"orders"> | number
    shipping_address?: BigIntNullableFilter<"orders"> | bigint | number | null
    notes?: StringNullableFilter<"orders"> | string | null
    discount_total?: DecimalFilter<"orders"> | Decimal | DecimalJsLike | number | string
    subtotal?: DecimalFilter<"orders"> | Decimal | DecimalJsLike | number | string
    total?: DecimalFilter<"orders"> | Decimal | DecimalJsLike | number | string
    iva_total?: DecimalFilter<"orders"> | Decimal | DecimalJsLike | number | string
    discount_log?: JsonFilter<"orders">
    estimated_date?: DateTimeNullableFilter<"orders"> | Date | string | null
    created_at?: DateTimeFilter<"orders"> | Date | string
    updated_at?: DateTimeNullableFilter<"orders"> | Date | string | null
  }

  export type ordersUpsertWithWhereUniqueWithoutUsers_orders_wholesaler_idTousersInput = {
    where: ordersWhereUniqueInput
    update: XOR<ordersUpdateWithoutUsers_orders_wholesaler_idTousersInput, ordersUncheckedUpdateWithoutUsers_orders_wholesaler_idTousersInput>
    create: XOR<ordersCreateWithoutUsers_orders_wholesaler_idTousersInput, ordersUncheckedCreateWithoutUsers_orders_wholesaler_idTousersInput>
  }

  export type ordersUpdateWithWhereUniqueWithoutUsers_orders_wholesaler_idTousersInput = {
    where: ordersWhereUniqueInput
    data: XOR<ordersUpdateWithoutUsers_orders_wholesaler_idTousersInput, ordersUncheckedUpdateWithoutUsers_orders_wholesaler_idTousersInput>
  }

  export type ordersUpdateManyWithWhereWithoutUsers_orders_wholesaler_idTousersInput = {
    where: ordersScalarWhereInput
    data: XOR<ordersUpdateManyMutationInput, ordersUncheckedUpdateManyWithoutUsers_orders_wholesaler_idTousersInput>
  }

  export type productsUpsertWithWhereUniqueWithoutUsersInput = {
    where: productsWhereUniqueInput
    update: XOR<productsUpdateWithoutUsersInput, productsUncheckedUpdateWithoutUsersInput>
    create: XOR<productsCreateWithoutUsersInput, productsUncheckedCreateWithoutUsersInput>
  }

  export type productsUpdateWithWhereUniqueWithoutUsersInput = {
    where: productsWhereUniqueInput
    data: XOR<productsUpdateWithoutUsersInput, productsUncheckedUpdateWithoutUsersInput>
  }

  export type productsUpdateManyWithWhereWithoutUsersInput = {
    where: productsScalarWhereInput
    data: XOR<productsUpdateManyMutationInput, productsUncheckedUpdateManyWithoutUsersInput>
  }

  export type user_sessionsUpsertWithWhereUniqueWithoutUsersInput = {
    where: user_sessionsWhereUniqueInput
    update: XOR<user_sessionsUpdateWithoutUsersInput, user_sessionsUncheckedUpdateWithoutUsersInput>
    create: XOR<user_sessionsCreateWithoutUsersInput, user_sessionsUncheckedCreateWithoutUsersInput>
  }

  export type user_sessionsUpdateWithWhereUniqueWithoutUsersInput = {
    where: user_sessionsWhereUniqueInput
    data: XOR<user_sessionsUpdateWithoutUsersInput, user_sessionsUncheckedUpdateWithoutUsersInput>
  }

  export type user_sessionsUpdateManyWithWhereWithoutUsersInput = {
    where: user_sessionsScalarWhereInput
    data: XOR<user_sessionsUpdateManyMutationInput, user_sessionsUncheckedUpdateManyWithoutUsersInput>
  }

  export type user_sessionsScalarWhereInput = {
    AND?: user_sessionsScalarWhereInput | user_sessionsScalarWhereInput[]
    OR?: user_sessionsScalarWhereInput[]
    NOT?: user_sessionsScalarWhereInput | user_sessionsScalarWhereInput[]
    session_id?: UuidFilter<"user_sessions"> | string
    user_id?: UuidFilter<"user_sessions"> | string
    device_name?: StringFilter<"user_sessions"> | string
    device_finger?: StringFilter<"user_sessions"> | string
    user_agent?: StringFilter<"user_sessions"> | string
    revoked?: BoolFilter<"user_sessions"> | boolean
    last_ip?: StringFilter<"user_sessions"> | string
    access_token?: StringNullableFilter<"user_sessions"> | string | null
    refresh_token?: StringNullableFilter<"user_sessions"> | string | null
    created_at?: DateTimeFilter<"user_sessions"> | Date | string
    last_active?: DateTimeFilter<"user_sessions"> | Date | string
  }

  export type cart_detailsCreateWithoutVariant_productsInput = {
    id?: bigint | number
    quantity: number
    created_at?: Date | string
    carts: cartsCreateNestedOneWithoutCart_detailsInput
  }

  export type cart_detailsUncheckedCreateWithoutVariant_productsInput = {
    id?: bigint | number
    cart_id: bigint | number
    quantity: number
    created_at?: Date | string
  }

  export type cart_detailsCreateOrConnectWithoutVariant_productsInput = {
    where: cart_detailsWhereUniqueInput
    create: XOR<cart_detailsCreateWithoutVariant_productsInput, cart_detailsUncheckedCreateWithoutVariant_productsInput>
  }

  export type cart_detailsCreateManyVariant_productsInputEnvelope = {
    data: cart_detailsCreateManyVariant_productsInput | cart_detailsCreateManyVariant_productsInput[]
    skipDuplicates?: boolean
  }

  export type order_detailsCreateWithoutVariant_productsInput = {
    id?: bigint | number
    product_code: string
    quantity: number
    unit_price: Decimal | DecimalJsLike | number | string
    unit_price_iva: Decimal | DecimalJsLike | number | string
    subtotal: Decimal | DecimalJsLike | number | string
    iva: Decimal | DecimalJsLike | number | string
    discount_applied: Decimal | DecimalJsLike | number | string
    attributes: JsonNullValueInput | InputJsonValue
    created_at?: Date | string
    orders: ordersCreateNestedOneWithoutOrder_detailsInput
  }

  export type order_detailsUncheckedCreateWithoutVariant_productsInput = {
    id?: bigint | number
    order_id: bigint | number
    product_code: string
    quantity: number
    unit_price: Decimal | DecimalJsLike | number | string
    unit_price_iva: Decimal | DecimalJsLike | number | string
    subtotal: Decimal | DecimalJsLike | number | string
    iva: Decimal | DecimalJsLike | number | string
    discount_applied: Decimal | DecimalJsLike | number | string
    attributes: JsonNullValueInput | InputJsonValue
    created_at?: Date | string
  }

  export type order_detailsCreateOrConnectWithoutVariant_productsInput = {
    where: order_detailsWhereUniqueInput
    create: XOR<order_detailsCreateWithoutVariant_productsInput, order_detailsUncheckedCreateWithoutVariant_productsInput>
  }

  export type order_detailsCreateManyVariant_productsInputEnvelope = {
    data: order_detailsCreateManyVariant_productsInput | order_detailsCreateManyVariant_productsInput[]
    skipDuplicates?: boolean
  }

  export type productsCreateWithoutVariant_productsInput = {
    id?: bigint | number
    name: string
    title?: string | null
    description?: string | null
    iva: Decimal | DecimalJsLike | number | string
    status?: number
    created_at?: Date | string
    product_code: string
    categories: categoriesCreateNestedOneWithoutProductsInput
    users: usersCreateNestedOneWithoutProductsInput
    products_files?: products_filesCreateNestedManyWithoutProductsInput
  }

  export type productsUncheckedCreateWithoutVariant_productsInput = {
    id?: bigint | number
    user_id: string
    name: string
    title?: string | null
    description?: string | null
    iva: Decimal | DecimalJsLike | number | string
    category_id: bigint | number
    status?: number
    created_at?: Date | string
    product_code: string
    products_files?: products_filesUncheckedCreateNestedManyWithoutProductsInput
  }

  export type productsCreateOrConnectWithoutVariant_productsInput = {
    where: productsWhereUniqueInput
    create: XOR<productsCreateWithoutVariant_productsInput, productsUncheckedCreateWithoutVariant_productsInput>
  }

  export type cart_detailsUpsertWithWhereUniqueWithoutVariant_productsInput = {
    where: cart_detailsWhereUniqueInput
    update: XOR<cart_detailsUpdateWithoutVariant_productsInput, cart_detailsUncheckedUpdateWithoutVariant_productsInput>
    create: XOR<cart_detailsCreateWithoutVariant_productsInput, cart_detailsUncheckedCreateWithoutVariant_productsInput>
  }

  export type cart_detailsUpdateWithWhereUniqueWithoutVariant_productsInput = {
    where: cart_detailsWhereUniqueInput
    data: XOR<cart_detailsUpdateWithoutVariant_productsInput, cart_detailsUncheckedUpdateWithoutVariant_productsInput>
  }

  export type cart_detailsUpdateManyWithWhereWithoutVariant_productsInput = {
    where: cart_detailsScalarWhereInput
    data: XOR<cart_detailsUpdateManyMutationInput, cart_detailsUncheckedUpdateManyWithoutVariant_productsInput>
  }

  export type order_detailsUpsertWithWhereUniqueWithoutVariant_productsInput = {
    where: order_detailsWhereUniqueInput
    update: XOR<order_detailsUpdateWithoutVariant_productsInput, order_detailsUncheckedUpdateWithoutVariant_productsInput>
    create: XOR<order_detailsCreateWithoutVariant_productsInput, order_detailsUncheckedCreateWithoutVariant_productsInput>
  }

  export type order_detailsUpdateWithWhereUniqueWithoutVariant_productsInput = {
    where: order_detailsWhereUniqueInput
    data: XOR<order_detailsUpdateWithoutVariant_productsInput, order_detailsUncheckedUpdateWithoutVariant_productsInput>
  }

  export type order_detailsUpdateManyWithWhereWithoutVariant_productsInput = {
    where: order_detailsScalarWhereInput
    data: XOR<order_detailsUpdateManyMutationInput, order_detailsUncheckedUpdateManyWithoutVariant_productsInput>
  }

  export type productsUpsertWithoutVariant_productsInput = {
    update: XOR<productsUpdateWithoutVariant_productsInput, productsUncheckedUpdateWithoutVariant_productsInput>
    create: XOR<productsCreateWithoutVariant_productsInput, productsUncheckedCreateWithoutVariant_productsInput>
    where?: productsWhereInput
  }

  export type productsUpdateToOneWithWhereWithoutVariant_productsInput = {
    where?: productsWhereInput
    data: XOR<productsUpdateWithoutVariant_productsInput, productsUncheckedUpdateWithoutVariant_productsInput>
  }

  export type productsUpdateWithoutVariant_productsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    iva?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    product_code?: StringFieldUpdateOperationsInput | string
    categories?: categoriesUpdateOneRequiredWithoutProductsNestedInput
    users?: usersUpdateOneRequiredWithoutProductsNestedInput
    products_files?: products_filesUpdateManyWithoutProductsNestedInput
  }

  export type productsUncheckedUpdateWithoutVariant_productsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    iva?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    category_id?: BigIntFieldUpdateOperationsInput | bigint | number
    status?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    product_code?: StringFieldUpdateOperationsInput | string
    products_files?: products_filesUncheckedUpdateManyWithoutProductsNestedInput
  }

  export type usersCreateWithoutDirectionInput = {
    id?: string
    user_id?: string | null
    first_name?: string | null
    last_name?: string | null
    username?: string | null
    password: string
    email?: string | null
    telephone?: string | null
    status?: $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    updated_at?: Date | string | null
    role: $Enums.UserRole
    cif?: string | null
    carts?: cartsCreateNestedManyWithoutUsersInput
    categories?: categoriesCreateNestedManyWithoutUsersInput
    chat_participants?: chat_participantsCreateNestedManyWithoutUsersInput
    configurations?: configurationsCreateNestedManyWithoutUsersInput
    deliveries?: deliveriesCreateNestedManyWithoutUsersInput
    discounts?: discountsCreateNestedManyWithoutUsersInput
    messages?: messagesCreateNestedManyWithoutUsersInput
    notifications?: notificationsCreateNestedManyWithoutUsersInput
    orders_orders_retailer_idTousers?: ordersCreateNestedManyWithoutUsers_orders_retailer_idTousersInput
    orders_orders_wholesaler_idTousers?: ordersCreateNestedManyWithoutUsers_orders_wholesaler_idTousersInput
    products?: productsCreateNestedManyWithoutUsersInput
    user_sessions?: user_sessionsCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutDirectionInput = {
    id?: string
    user_id?: string | null
    first_name?: string | null
    last_name?: string | null
    username?: string | null
    password: string
    email?: string | null
    telephone?: string | null
    status?: $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    updated_at?: Date | string | null
    role: $Enums.UserRole
    cif?: string | null
    carts?: cartsUncheckedCreateNestedManyWithoutUsersInput
    categories?: categoriesUncheckedCreateNestedManyWithoutUsersInput
    chat_participants?: chat_participantsUncheckedCreateNestedManyWithoutUsersInput
    configurations?: configurationsUncheckedCreateNestedManyWithoutUsersInput
    deliveries?: deliveriesUncheckedCreateNestedManyWithoutUsersInput
    discounts?: discountsUncheckedCreateNestedManyWithoutUsersInput
    messages?: messagesUncheckedCreateNestedManyWithoutUsersInput
    notifications?: notificationsUncheckedCreateNestedManyWithoutUsersInput
    orders_orders_retailer_idTousers?: ordersUncheckedCreateNestedManyWithoutUsers_orders_retailer_idTousersInput
    orders_orders_wholesaler_idTousers?: ordersUncheckedCreateNestedManyWithoutUsers_orders_wholesaler_idTousersInput
    products?: productsUncheckedCreateNestedManyWithoutUsersInput
    user_sessions?: user_sessionsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutDirectionInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutDirectionInput, usersUncheckedCreateWithoutDirectionInput>
  }

  export type ordersCreateWithoutDirecctionInput = {
    id?: bigint | number
    status?: number
    payment_method: number
    notes?: string | null
    discount_total: Decimal | DecimalJsLike | number | string
    subtotal: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    iva_total: Decimal | DecimalJsLike | number | string
    discount_log: JsonNullValueInput | InputJsonValue
    estimated_date?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string | null
    order_details?: order_detailsCreateNestedManyWithoutOrdersInput
    users_orders_retailer_idTousers?: usersCreateNestedOneWithoutOrders_orders_retailer_idTousersInput
    users_orders_wholesaler_idTousers?: usersCreateNestedOneWithoutOrders_orders_wholesaler_idTousersInput
  }

  export type ordersUncheckedCreateWithoutDirecctionInput = {
    id?: bigint | number
    retailer_id?: string | null
    wholesaler_id?: string | null
    status?: number
    payment_method: number
    notes?: string | null
    discount_total: Decimal | DecimalJsLike | number | string
    subtotal: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    iva_total: Decimal | DecimalJsLike | number | string
    discount_log: JsonNullValueInput | InputJsonValue
    estimated_date?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string | null
    order_details?: order_detailsUncheckedCreateNestedManyWithoutOrdersInput
  }

  export type ordersCreateOrConnectWithoutDirecctionInput = {
    where: ordersWhereUniqueInput
    create: XOR<ordersCreateWithoutDirecctionInput, ordersUncheckedCreateWithoutDirecctionInput>
  }

  export type ordersCreateManyDirecctionInputEnvelope = {
    data: ordersCreateManyDirecctionInput | ordersCreateManyDirecctionInput[]
    skipDuplicates?: boolean
  }

  export type usersUpsertWithoutDirectionInput = {
    update: XOR<usersUpdateWithoutDirectionInput, usersUncheckedUpdateWithoutDirectionInput>
    create: XOR<usersCreateWithoutDirectionInput, usersUncheckedCreateWithoutDirectionInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutDirectionInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutDirectionInput, usersUncheckedUpdateWithoutDirectionInput>
  }

  export type usersUpdateWithoutDirectionInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telephone?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    cif?: NullableStringFieldUpdateOperationsInput | string | null
    carts?: cartsUpdateManyWithoutUsersNestedInput
    categories?: categoriesUpdateManyWithoutUsersNestedInput
    chat_participants?: chat_participantsUpdateManyWithoutUsersNestedInput
    configurations?: configurationsUpdateManyWithoutUsersNestedInput
    deliveries?: deliveriesUpdateManyWithoutUsersNestedInput
    discounts?: discountsUpdateManyWithoutUsersNestedInput
    messages?: messagesUpdateManyWithoutUsersNestedInput
    notifications?: notificationsUpdateManyWithoutUsersNestedInput
    orders_orders_retailer_idTousers?: ordersUpdateManyWithoutUsers_orders_retailer_idTousersNestedInput
    orders_orders_wholesaler_idTousers?: ordersUpdateManyWithoutUsers_orders_wholesaler_idTousersNestedInput
    products?: productsUpdateManyWithoutUsersNestedInput
    user_sessions?: user_sessionsUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutDirectionInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    first_name?: NullableStringFieldUpdateOperationsInput | string | null
    last_name?: NullableStringFieldUpdateOperationsInput | string | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telephone?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    profile?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    role?: EnumUserRoleFieldUpdateOperationsInput | $Enums.UserRole
    cif?: NullableStringFieldUpdateOperationsInput | string | null
    carts?: cartsUncheckedUpdateManyWithoutUsersNestedInput
    categories?: categoriesUncheckedUpdateManyWithoutUsersNestedInput
    chat_participants?: chat_participantsUncheckedUpdateManyWithoutUsersNestedInput
    configurations?: configurationsUncheckedUpdateManyWithoutUsersNestedInput
    deliveries?: deliveriesUncheckedUpdateManyWithoutUsersNestedInput
    discounts?: discountsUncheckedUpdateManyWithoutUsersNestedInput
    messages?: messagesUncheckedUpdateManyWithoutUsersNestedInput
    notifications?: notificationsUncheckedUpdateManyWithoutUsersNestedInput
    orders_orders_retailer_idTousers?: ordersUncheckedUpdateManyWithoutUsers_orders_retailer_idTousersNestedInput
    orders_orders_wholesaler_idTousers?: ordersUncheckedUpdateManyWithoutUsers_orders_wholesaler_idTousersNestedInput
    products?: productsUncheckedUpdateManyWithoutUsersNestedInput
    user_sessions?: user_sessionsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type ordersUpsertWithWhereUniqueWithoutDirecctionInput = {
    where: ordersWhereUniqueInput
    update: XOR<ordersUpdateWithoutDirecctionInput, ordersUncheckedUpdateWithoutDirecctionInput>
    create: XOR<ordersCreateWithoutDirecctionInput, ordersUncheckedCreateWithoutDirecctionInput>
  }

  export type ordersUpdateWithWhereUniqueWithoutDirecctionInput = {
    where: ordersWhereUniqueInput
    data: XOR<ordersUpdateWithoutDirecctionInput, ordersUncheckedUpdateWithoutDirecctionInput>
  }

  export type ordersUpdateManyWithWhereWithoutDirecctionInput = {
    where: ordersScalarWhereInput
    data: XOR<ordersUpdateManyMutationInput, ordersUncheckedUpdateManyWithoutDirecctionInput>
  }

  export type cart_detailsCreateManyCartsInput = {
    id?: bigint | number
    variant_products_id?: bigint | number | null
    quantity: number
    created_at?: Date | string
  }

  export type cart_detailsUpdateWithoutCartsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    quantity?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    variant_products?: variant_productsUpdateOneWithoutCart_detailsNestedInput
  }

  export type cart_detailsUncheckedUpdateWithoutCartsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    variant_products_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    quantity?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type cart_detailsUncheckedUpdateManyWithoutCartsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    variant_products_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    quantity?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type categoriesCreateManyCategoriesInput = {
    id?: bigint | number
    user_id?: string | null
    name: string
    iva?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string
  }

  export type productsCreateManyCategoriesInput = {
    id?: bigint | number
    user_id: string
    name: string
    title?: string | null
    description?: string | null
    iva: Decimal | DecimalJsLike | number | string
    status?: number
    created_at?: Date | string
    product_code: string
  }

  export type categoriesUpdateWithoutCategoriesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    iva?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    other_categories?: categoriesUpdateManyWithoutCategoriesNestedInput
    users?: usersUpdateOneWithoutCategoriesNestedInput
    products?: productsUpdateManyWithoutCategoriesNestedInput
  }

  export type categoriesUncheckedUpdateWithoutCategoriesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    iva?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    other_categories?: categoriesUncheckedUpdateManyWithoutCategoriesNestedInput
    products?: productsUncheckedUpdateManyWithoutCategoriesNestedInput
  }

  export type categoriesUncheckedUpdateManyWithoutCategoriesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    iva?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type productsUpdateWithoutCategoriesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    iva?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    product_code?: StringFieldUpdateOperationsInput | string
    users?: usersUpdateOneRequiredWithoutProductsNestedInput
    products_files?: products_filesUpdateManyWithoutProductsNestedInput
    variant_products?: variant_productsUpdateManyWithoutProductsNestedInput
  }

  export type productsUncheckedUpdateWithoutCategoriesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    iva?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    product_code?: StringFieldUpdateOperationsInput | string
    products_files?: products_filesUncheckedUpdateManyWithoutProductsNestedInput
    variant_products?: variant_productsUncheckedUpdateManyWithoutProductsNestedInput
  }

  export type productsUncheckedUpdateManyWithoutCategoriesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    iva?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    product_code?: StringFieldUpdateOperationsInput | string
  }

  export type chat_participantsCreateManyChat_panelsInput = {
    user_id: string
    created_at?: Date | string | null
  }

  export type messagesCreateManyChat_panelsInput = {
    id?: bigint | number
    sender_id?: string | null
    reply_to?: bigint | number | null
    content?: string | null
    created_at?: Date | string
    is_read?: boolean
  }

  export type chat_participantsUpdateWithoutChat_panelsInput = {
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: usersUpdateOneRequiredWithoutChat_participantsNestedInput
  }

  export type chat_participantsUncheckedUpdateWithoutChat_panelsInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type chat_participantsUncheckedUpdateManyWithoutChat_panelsInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type messagesUpdateWithoutChat_panelsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_read?: BoolFieldUpdateOperationsInput | boolean
    message_files?: message_filesUpdateManyWithoutMessagesNestedInput
    messages?: messagesUpdateOneWithoutOther_messagesNestedInput
    other_messages?: messagesUpdateManyWithoutMessagesNestedInput
    users?: usersUpdateOneWithoutMessagesNestedInput
  }

  export type messagesUncheckedUpdateWithoutChat_panelsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    sender_id?: NullableStringFieldUpdateOperationsInput | string | null
    reply_to?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_read?: BoolFieldUpdateOperationsInput | boolean
    message_files?: message_filesUncheckedUpdateManyWithoutMessagesNestedInput
    other_messages?: messagesUncheckedUpdateManyWithoutMessagesNestedInput
  }

  export type messagesUncheckedUpdateManyWithoutChat_panelsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    sender_id?: NullableStringFieldUpdateOperationsInput | string | null
    reply_to?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_read?: BoolFieldUpdateOperationsInput | boolean
  }

  export type delivery_timelineCreateManyDeliveriesInput = {
    id?: bigint | number
    status: $Enums.DeliveryStatus
    notes?: string | null
    created_at?: Date | string
    latitude: number
    longitude: number
  }

  export type delivery_timelineUpdateWithoutDeliveriesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    status?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
  }

  export type delivery_timelineUncheckedUpdateWithoutDeliveriesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    status?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
  }

  export type delivery_timelineUncheckedUpdateManyWithoutDeliveriesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    status?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
  }

  export type message_filesCreateManyFilesInput = {
    id?: bigint | number
    message_id: bigint | number
    sort: number
  }

  export type products_filesCreateManyFilesInput = {
    id?: bigint | number
    product_id: bigint | number
    sort: number
  }

  export type message_filesUpdateWithoutFilesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    sort?: IntFieldUpdateOperationsInput | number
    messages?: messagesUpdateOneRequiredWithoutMessage_filesNestedInput
  }

  export type message_filesUncheckedUpdateWithoutFilesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    message_id?: BigIntFieldUpdateOperationsInput | bigint | number
    sort?: IntFieldUpdateOperationsInput | number
  }

  export type message_filesUncheckedUpdateManyWithoutFilesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    message_id?: BigIntFieldUpdateOperationsInput | bigint | number
    sort?: IntFieldUpdateOperationsInput | number
  }

  export type products_filesUpdateWithoutFilesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    sort?: IntFieldUpdateOperationsInput | number
    products?: productsUpdateOneRequiredWithoutProducts_filesNestedInput
  }

  export type products_filesUncheckedUpdateWithoutFilesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    product_id?: BigIntFieldUpdateOperationsInput | bigint | number
    sort?: IntFieldUpdateOperationsInput | number
  }

  export type products_filesUncheckedUpdateManyWithoutFilesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    product_id?: BigIntFieldUpdateOperationsInput | bigint | number
    sort?: IntFieldUpdateOperationsInput | number
  }

  export type message_filesCreateManyMessagesInput = {
    id?: bigint | number
    file_id: bigint | number
    sort: number
  }

  export type messagesCreateManyMessagesInput = {
    id?: bigint | number
    chat_panel_id: bigint | number
    sender_id?: string | null
    content?: string | null
    created_at?: Date | string
    is_read?: boolean
  }

  export type message_filesUpdateWithoutMessagesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    sort?: IntFieldUpdateOperationsInput | number
    files?: filesUpdateOneRequiredWithoutMessage_filesNestedInput
  }

  export type message_filesUncheckedUpdateWithoutMessagesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    file_id?: BigIntFieldUpdateOperationsInput | bigint | number
    sort?: IntFieldUpdateOperationsInput | number
  }

  export type message_filesUncheckedUpdateManyWithoutMessagesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    file_id?: BigIntFieldUpdateOperationsInput | bigint | number
    sort?: IntFieldUpdateOperationsInput | number
  }

  export type messagesUpdateWithoutMessagesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_read?: BoolFieldUpdateOperationsInput | boolean
    message_files?: message_filesUpdateManyWithoutMessagesNestedInput
    chat_panels?: chat_panelsUpdateOneRequiredWithoutMessagesNestedInput
    other_messages?: messagesUpdateManyWithoutMessagesNestedInput
    users?: usersUpdateOneWithoutMessagesNestedInput
  }

  export type messagesUncheckedUpdateWithoutMessagesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    chat_panel_id?: BigIntFieldUpdateOperationsInput | bigint | number
    sender_id?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_read?: BoolFieldUpdateOperationsInput | boolean
    message_files?: message_filesUncheckedUpdateManyWithoutMessagesNestedInput
    other_messages?: messagesUncheckedUpdateManyWithoutMessagesNestedInput
  }

  export type messagesUncheckedUpdateManyWithoutMessagesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    chat_panel_id?: BigIntFieldUpdateOperationsInput | bigint | number
    sender_id?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_read?: BoolFieldUpdateOperationsInput | boolean
  }

  export type order_detailsCreateManyOrdersInput = {
    id?: bigint | number
    product_code: string
    variant_product_id: bigint | number
    quantity: number
    unit_price: Decimal | DecimalJsLike | number | string
    unit_price_iva: Decimal | DecimalJsLike | number | string
    subtotal: Decimal | DecimalJsLike | number | string
    iva: Decimal | DecimalJsLike | number | string
    discount_applied: Decimal | DecimalJsLike | number | string
    attributes: JsonNullValueInput | InputJsonValue
    created_at?: Date | string
  }

  export type order_detailsUpdateWithoutOrdersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    product_code?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unit_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unit_price_iva?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    iva?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_applied?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    attributes?: JsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    variant_products?: variant_productsUpdateOneRequiredWithoutOrder_detailsNestedInput
  }

  export type order_detailsUncheckedUpdateWithoutOrdersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    product_code?: StringFieldUpdateOperationsInput | string
    variant_product_id?: BigIntFieldUpdateOperationsInput | bigint | number
    quantity?: IntFieldUpdateOperationsInput | number
    unit_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unit_price_iva?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    iva?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_applied?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    attributes?: JsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type order_detailsUncheckedUpdateManyWithoutOrdersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    product_code?: StringFieldUpdateOperationsInput | string
    variant_product_id?: BigIntFieldUpdateOperationsInput | bigint | number
    quantity?: IntFieldUpdateOperationsInput | number
    unit_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unit_price_iva?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    iva?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_applied?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    attributes?: JsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type products_filesCreateManyProductsInput = {
    id?: bigint | number
    file_id: bigint | number
    sort: number
  }

  export type variant_productsCreateManyProductsInput = {
    id?: bigint | number
    created_at?: Date | string
    type_sale: number
    price: Decimal | DecimalJsLike | number | string
    price_iva: Decimal | DecimalJsLike | number | string
    stock: number
    sort: number
    attributes?: NullableJsonNullValueInput | InputJsonValue
    status: number
    iva: Decimal | DecimalJsLike | number | string
    product_code: string
  }

  export type products_filesUpdateWithoutProductsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    sort?: IntFieldUpdateOperationsInput | number
    files?: filesUpdateOneRequiredWithoutProducts_filesNestedInput
  }

  export type products_filesUncheckedUpdateWithoutProductsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    file_id?: BigIntFieldUpdateOperationsInput | bigint | number
    sort?: IntFieldUpdateOperationsInput | number
  }

  export type products_filesUncheckedUpdateManyWithoutProductsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    file_id?: BigIntFieldUpdateOperationsInput | bigint | number
    sort?: IntFieldUpdateOperationsInput | number
  }

  export type variant_productsUpdateWithoutProductsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    type_sale?: IntFieldUpdateOperationsInput | number
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    price_iva?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    sort?: IntFieldUpdateOperationsInput | number
    attributes?: NullableJsonNullValueInput | InputJsonValue
    status?: IntFieldUpdateOperationsInput | number
    iva?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    product_code?: StringFieldUpdateOperationsInput | string
    cart_details?: cart_detailsUpdateManyWithoutVariant_productsNestedInput
    order_details?: order_detailsUpdateManyWithoutVariant_productsNestedInput
  }

  export type variant_productsUncheckedUpdateWithoutProductsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    type_sale?: IntFieldUpdateOperationsInput | number
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    price_iva?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    sort?: IntFieldUpdateOperationsInput | number
    attributes?: NullableJsonNullValueInput | InputJsonValue
    status?: IntFieldUpdateOperationsInput | number
    iva?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    product_code?: StringFieldUpdateOperationsInput | string
    cart_details?: cart_detailsUncheckedUpdateManyWithoutVariant_productsNestedInput
    order_details?: order_detailsUncheckedUpdateManyWithoutVariant_productsNestedInput
  }

  export type variant_productsUncheckedUpdateManyWithoutProductsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    type_sale?: IntFieldUpdateOperationsInput | number
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    price_iva?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: IntFieldUpdateOperationsInput | number
    sort?: IntFieldUpdateOperationsInput | number
    attributes?: NullableJsonNullValueInput | InputJsonValue
    status?: IntFieldUpdateOperationsInput | number
    iva?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    product_code?: StringFieldUpdateOperationsInput | string
  }

  export type cartsCreateManyUsersInput = {
    id?: bigint | number
    created_at?: Date | string
  }

  export type categoriesCreateManyUsersInput = {
    id?: bigint | number
    name: string
    iva?: Decimal | DecimalJsLike | number | string | null
    parent_id?: bigint | number | null
    created_at?: Date | string
  }

  export type chat_participantsCreateManyUsersInput = {
    chat_panel_id: bigint | number
    created_at?: Date | string | null
  }

  export type configurationsCreateManyUsersInput = {
    id?: bigint | number
    language?: string
    timezone?: string
  }

  export type deliveriesCreateManyUsersInput = {
    id?: bigint | number
    order_id: bigint | number
    status?: $Enums.DeliveryStatus
    start_time?: Date | string
    end_time?: Date | string | null
    notes: string
    created_at?: Date | string
    updated_at?: Date | string | null
    latitude: number
    longitude: number
  }

  export type directionCreateManyUsersInput = {
    id?: bigint | number
    type: $Enums.AddressType
    direction: string
    city: string
    province: string
    zip_code: string
    latitude: number
    longitude: number
    created_at?: Date | string
    updated_at?: Date | string | null
  }

  export type discountsCreateManyUsersInput = {
    id?: bigint | number
    name: string
    type_value: JsonNullValueInput | InputJsonValue
    applies_to_all?: boolean
    start_date: Date | string
    end_date: Date | string
    status?: number
    created_at?: Date | string
  }

  export type messagesCreateManyUsersInput = {
    id?: bigint | number
    chat_panel_id: bigint | number
    reply_to?: bigint | number | null
    content?: string | null
    created_at?: Date | string
    is_read?: boolean
  }

  export type notificationsCreateManyUsersInput = {
    id?: bigint | number
    title: string
    message: string
    type: number
    is_read?: boolean
    click_action: string
    created_at?: Date | string
  }

  export type ordersCreateManyUsers_orders_retailer_idTousersInput = {
    id?: bigint | number
    wholesaler_id?: string | null
    status?: number
    payment_method: number
    shipping_address?: bigint | number | null
    notes?: string | null
    discount_total: Decimal | DecimalJsLike | number | string
    subtotal: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    iva_total: Decimal | DecimalJsLike | number | string
    discount_log: JsonNullValueInput | InputJsonValue
    estimated_date?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string | null
  }

  export type ordersCreateManyUsers_orders_wholesaler_idTousersInput = {
    id?: bigint | number
    retailer_id?: string | null
    status?: number
    payment_method: number
    shipping_address?: bigint | number | null
    notes?: string | null
    discount_total: Decimal | DecimalJsLike | number | string
    subtotal: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    iva_total: Decimal | DecimalJsLike | number | string
    discount_log: JsonNullValueInput | InputJsonValue
    estimated_date?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string | null
  }

  export type productsCreateManyUsersInput = {
    id?: bigint | number
    name: string
    title?: string | null
    description?: string | null
    iva: Decimal | DecimalJsLike | number | string
    category_id: bigint | number
    status?: number
    created_at?: Date | string
    product_code: string
  }

  export type user_sessionsCreateManyUsersInput = {
    session_id?: string
    device_name: string
    device_finger: string
    user_agent: string
    revoked?: boolean
    last_ip: string
    access_token?: string | null
    refresh_token?: string | null
    created_at?: Date | string
    last_active?: Date | string
  }

  export type cartsUpdateWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    cart_details?: cart_detailsUpdateManyWithoutCartsNestedInput
  }

  export type cartsUncheckedUpdateWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    cart_details?: cart_detailsUncheckedUpdateManyWithoutCartsNestedInput
  }

  export type cartsUncheckedUpdateManyWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type categoriesUpdateWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    iva?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    categories?: categoriesUpdateOneWithoutOther_categoriesNestedInput
    other_categories?: categoriesUpdateManyWithoutCategoriesNestedInput
    products?: productsUpdateManyWithoutCategoriesNestedInput
  }

  export type categoriesUncheckedUpdateWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    iva?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    parent_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    other_categories?: categoriesUncheckedUpdateManyWithoutCategoriesNestedInput
    products?: productsUncheckedUpdateManyWithoutCategoriesNestedInput
  }

  export type categoriesUncheckedUpdateManyWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    iva?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    parent_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type chat_participantsUpdateWithoutUsersInput = {
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    chat_panels?: chat_panelsUpdateOneRequiredWithoutChat_participantsNestedInput
  }

  export type chat_participantsUncheckedUpdateWithoutUsersInput = {
    chat_panel_id?: BigIntFieldUpdateOperationsInput | bigint | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type chat_participantsUncheckedUpdateManyWithoutUsersInput = {
    chat_panel_id?: BigIntFieldUpdateOperationsInput | bigint | number
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type configurationsUpdateWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
  }

  export type configurationsUncheckedUpdateWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
  }

  export type configurationsUncheckedUpdateManyWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    language?: StringFieldUpdateOperationsInput | string
    timezone?: StringFieldUpdateOperationsInput | string
  }

  export type deliveriesUpdateWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    order_id?: BigIntFieldUpdateOperationsInput | bigint | number
    status?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    start_time?: DateTimeFieldUpdateOperationsInput | Date | string
    end_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
    delivery_timeline?: delivery_timelineUpdateManyWithoutDeliveriesNestedInput
  }

  export type deliveriesUncheckedUpdateWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    order_id?: BigIntFieldUpdateOperationsInput | bigint | number
    status?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    start_time?: DateTimeFieldUpdateOperationsInput | Date | string
    end_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
    delivery_timeline?: delivery_timelineUncheckedUpdateManyWithoutDeliveriesNestedInput
  }

  export type deliveriesUncheckedUpdateManyWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    order_id?: BigIntFieldUpdateOperationsInput | bigint | number
    status?: EnumDeliveryStatusFieldUpdateOperationsInput | $Enums.DeliveryStatus
    start_time?: DateTimeFieldUpdateOperationsInput | Date | string
    end_time?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notes?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
  }

  export type directionUpdateWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    type?: EnumAddressTypeFieldUpdateOperationsInput | $Enums.AddressType
    direction?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    province?: StringFieldUpdateOperationsInput | string
    zip_code?: StringFieldUpdateOperationsInput | string
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    orders?: ordersUpdateManyWithoutDirecctionNestedInput
  }

  export type directionUncheckedUpdateWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    type?: EnumAddressTypeFieldUpdateOperationsInput | $Enums.AddressType
    direction?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    province?: StringFieldUpdateOperationsInput | string
    zip_code?: StringFieldUpdateOperationsInput | string
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    orders?: ordersUncheckedUpdateManyWithoutDirecctionNestedInput
  }

  export type directionUncheckedUpdateManyWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    type?: EnumAddressTypeFieldUpdateOperationsInput | $Enums.AddressType
    direction?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    province?: StringFieldUpdateOperationsInput | string
    zip_code?: StringFieldUpdateOperationsInput | string
    latitude?: FloatFieldUpdateOperationsInput | number
    longitude?: FloatFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type discountsUpdateWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    type_value?: JsonNullValueInput | InputJsonValue
    applies_to_all?: BoolFieldUpdateOperationsInput | boolean
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type discountsUncheckedUpdateWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    type_value?: JsonNullValueInput | InputJsonValue
    applies_to_all?: BoolFieldUpdateOperationsInput | boolean
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type discountsUncheckedUpdateManyWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    type_value?: JsonNullValueInput | InputJsonValue
    applies_to_all?: BoolFieldUpdateOperationsInput | boolean
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type messagesUpdateWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_read?: BoolFieldUpdateOperationsInput | boolean
    message_files?: message_filesUpdateManyWithoutMessagesNestedInput
    chat_panels?: chat_panelsUpdateOneRequiredWithoutMessagesNestedInput
    messages?: messagesUpdateOneWithoutOther_messagesNestedInput
    other_messages?: messagesUpdateManyWithoutMessagesNestedInput
  }

  export type messagesUncheckedUpdateWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    chat_panel_id?: BigIntFieldUpdateOperationsInput | bigint | number
    reply_to?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_read?: BoolFieldUpdateOperationsInput | boolean
    message_files?: message_filesUncheckedUpdateManyWithoutMessagesNestedInput
    other_messages?: messagesUncheckedUpdateManyWithoutMessagesNestedInput
  }

  export type messagesUncheckedUpdateManyWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    chat_panel_id?: BigIntFieldUpdateOperationsInput | bigint | number
    reply_to?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    is_read?: BoolFieldUpdateOperationsInput | boolean
  }

  export type notificationsUpdateWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    type?: IntFieldUpdateOperationsInput | number
    is_read?: BoolFieldUpdateOperationsInput | boolean
    click_action?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type notificationsUncheckedUpdateWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    type?: IntFieldUpdateOperationsInput | number
    is_read?: BoolFieldUpdateOperationsInput | boolean
    click_action?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type notificationsUncheckedUpdateManyWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    type?: IntFieldUpdateOperationsInput | number
    is_read?: BoolFieldUpdateOperationsInput | boolean
    click_action?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ordersUpdateWithoutUsers_orders_retailer_idTousersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    status?: IntFieldUpdateOperationsInput | number
    payment_method?: IntFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    discount_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    iva_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_log?: JsonNullValueInput | InputJsonValue
    estimated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order_details?: order_detailsUpdateManyWithoutOrdersNestedInput
    direcction?: directionUpdateOneWithoutOrdersNestedInput
    users_orders_wholesaler_idTousers?: usersUpdateOneWithoutOrders_orders_wholesaler_idTousersNestedInput
  }

  export type ordersUncheckedUpdateWithoutUsers_orders_retailer_idTousersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    wholesaler_id?: NullableStringFieldUpdateOperationsInput | string | null
    status?: IntFieldUpdateOperationsInput | number
    payment_method?: IntFieldUpdateOperationsInput | number
    shipping_address?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    discount_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    iva_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_log?: JsonNullValueInput | InputJsonValue
    estimated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order_details?: order_detailsUncheckedUpdateManyWithoutOrdersNestedInput
  }

  export type ordersUncheckedUpdateManyWithoutUsers_orders_retailer_idTousersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    wholesaler_id?: NullableStringFieldUpdateOperationsInput | string | null
    status?: IntFieldUpdateOperationsInput | number
    payment_method?: IntFieldUpdateOperationsInput | number
    shipping_address?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    discount_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    iva_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_log?: JsonNullValueInput | InputJsonValue
    estimated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ordersUpdateWithoutUsers_orders_wholesaler_idTousersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    status?: IntFieldUpdateOperationsInput | number
    payment_method?: IntFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    discount_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    iva_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_log?: JsonNullValueInput | InputJsonValue
    estimated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order_details?: order_detailsUpdateManyWithoutOrdersNestedInput
    users_orders_retailer_idTousers?: usersUpdateOneWithoutOrders_orders_retailer_idTousersNestedInput
    direcction?: directionUpdateOneWithoutOrdersNestedInput
  }

  export type ordersUncheckedUpdateWithoutUsers_orders_wholesaler_idTousersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    retailer_id?: NullableStringFieldUpdateOperationsInput | string | null
    status?: IntFieldUpdateOperationsInput | number
    payment_method?: IntFieldUpdateOperationsInput | number
    shipping_address?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    discount_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    iva_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_log?: JsonNullValueInput | InputJsonValue
    estimated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order_details?: order_detailsUncheckedUpdateManyWithoutOrdersNestedInput
  }

  export type ordersUncheckedUpdateManyWithoutUsers_orders_wholesaler_idTousersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    retailer_id?: NullableStringFieldUpdateOperationsInput | string | null
    status?: IntFieldUpdateOperationsInput | number
    payment_method?: IntFieldUpdateOperationsInput | number
    shipping_address?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    discount_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    iva_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_log?: JsonNullValueInput | InputJsonValue
    estimated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type productsUpdateWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    iva?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    product_code?: StringFieldUpdateOperationsInput | string
    categories?: categoriesUpdateOneRequiredWithoutProductsNestedInput
    products_files?: products_filesUpdateManyWithoutProductsNestedInput
    variant_products?: variant_productsUpdateManyWithoutProductsNestedInput
  }

  export type productsUncheckedUpdateWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    iva?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    category_id?: BigIntFieldUpdateOperationsInput | bigint | number
    status?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    product_code?: StringFieldUpdateOperationsInput | string
    products_files?: products_filesUncheckedUpdateManyWithoutProductsNestedInput
    variant_products?: variant_productsUncheckedUpdateManyWithoutProductsNestedInput
  }

  export type productsUncheckedUpdateManyWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    iva?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    category_id?: BigIntFieldUpdateOperationsInput | bigint | number
    status?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    product_code?: StringFieldUpdateOperationsInput | string
  }

  export type user_sessionsUpdateWithoutUsersInput = {
    session_id?: StringFieldUpdateOperationsInput | string
    device_name?: StringFieldUpdateOperationsInput | string
    device_finger?: StringFieldUpdateOperationsInput | string
    user_agent?: StringFieldUpdateOperationsInput | string
    revoked?: BoolFieldUpdateOperationsInput | boolean
    last_ip?: StringFieldUpdateOperationsInput | string
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    last_active?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_sessionsUncheckedUpdateWithoutUsersInput = {
    session_id?: StringFieldUpdateOperationsInput | string
    device_name?: StringFieldUpdateOperationsInput | string
    device_finger?: StringFieldUpdateOperationsInput | string
    user_agent?: StringFieldUpdateOperationsInput | string
    revoked?: BoolFieldUpdateOperationsInput | boolean
    last_ip?: StringFieldUpdateOperationsInput | string
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    last_active?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_sessionsUncheckedUpdateManyWithoutUsersInput = {
    session_id?: StringFieldUpdateOperationsInput | string
    device_name?: StringFieldUpdateOperationsInput | string
    device_finger?: StringFieldUpdateOperationsInput | string
    user_agent?: StringFieldUpdateOperationsInput | string
    revoked?: BoolFieldUpdateOperationsInput | boolean
    last_ip?: StringFieldUpdateOperationsInput | string
    access_token?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    last_active?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type cart_detailsCreateManyVariant_productsInput = {
    id?: bigint | number
    cart_id: bigint | number
    quantity: number
    created_at?: Date | string
  }

  export type order_detailsCreateManyVariant_productsInput = {
    id?: bigint | number
    order_id: bigint | number
    product_code: string
    quantity: number
    unit_price: Decimal | DecimalJsLike | number | string
    unit_price_iva: Decimal | DecimalJsLike | number | string
    subtotal: Decimal | DecimalJsLike | number | string
    iva: Decimal | DecimalJsLike | number | string
    discount_applied: Decimal | DecimalJsLike | number | string
    attributes: JsonNullValueInput | InputJsonValue
    created_at?: Date | string
  }

  export type cart_detailsUpdateWithoutVariant_productsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    quantity?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    carts?: cartsUpdateOneRequiredWithoutCart_detailsNestedInput
  }

  export type cart_detailsUncheckedUpdateWithoutVariant_productsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    cart_id?: BigIntFieldUpdateOperationsInput | bigint | number
    quantity?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type cart_detailsUncheckedUpdateManyWithoutVariant_productsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    cart_id?: BigIntFieldUpdateOperationsInput | bigint | number
    quantity?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type order_detailsUpdateWithoutVariant_productsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    product_code?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unit_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unit_price_iva?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    iva?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_applied?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    attributes?: JsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    orders?: ordersUpdateOneRequiredWithoutOrder_detailsNestedInput
  }

  export type order_detailsUncheckedUpdateWithoutVariant_productsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    order_id?: BigIntFieldUpdateOperationsInput | bigint | number
    product_code?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unit_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unit_price_iva?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    iva?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_applied?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    attributes?: JsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type order_detailsUncheckedUpdateManyWithoutVariant_productsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    order_id?: BigIntFieldUpdateOperationsInput | bigint | number
    product_code?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unit_price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    unit_price_iva?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    iva?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_applied?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    attributes?: JsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ordersCreateManyDirecctionInput = {
    id?: bigint | number
    retailer_id?: string | null
    wholesaler_id?: string | null
    status?: number
    payment_method: number
    notes?: string | null
    discount_total: Decimal | DecimalJsLike | number | string
    subtotal: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    iva_total: Decimal | DecimalJsLike | number | string
    discount_log: JsonNullValueInput | InputJsonValue
    estimated_date?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string | null
  }

  export type ordersUpdateWithoutDirecctionInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    status?: IntFieldUpdateOperationsInput | number
    payment_method?: IntFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    discount_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    iva_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_log?: JsonNullValueInput | InputJsonValue
    estimated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order_details?: order_detailsUpdateManyWithoutOrdersNestedInput
    users_orders_retailer_idTousers?: usersUpdateOneWithoutOrders_orders_retailer_idTousersNestedInput
    users_orders_wholesaler_idTousers?: usersUpdateOneWithoutOrders_orders_wholesaler_idTousersNestedInput
  }

  export type ordersUncheckedUpdateWithoutDirecctionInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    retailer_id?: NullableStringFieldUpdateOperationsInput | string | null
    wholesaler_id?: NullableStringFieldUpdateOperationsInput | string | null
    status?: IntFieldUpdateOperationsInput | number
    payment_method?: IntFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    discount_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    iva_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_log?: JsonNullValueInput | InputJsonValue
    estimated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    order_details?: order_detailsUncheckedUpdateManyWithoutOrdersNestedInput
  }

  export type ordersUncheckedUpdateManyWithoutDirecctionInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    retailer_id?: NullableStringFieldUpdateOperationsInput | string | null
    wholesaler_id?: NullableStringFieldUpdateOperationsInput | string | null
    status?: IntFieldUpdateOperationsInput | number
    payment_method?: IntFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    discount_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    iva_total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount_log?: JsonNullValueInput | InputJsonValue
    estimated_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}