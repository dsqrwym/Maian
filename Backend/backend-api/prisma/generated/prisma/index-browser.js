
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.15.0
 * Query Engine version: 85179d7826409ee107a6ba334b5e305ae3fba9fb
 */
Prisma.prismaVersion = {
  client: "6.15.0",
  engine: "85179d7826409ee107a6ba334b5e305ae3fba9fb"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.Cart_detailsScalarFieldEnum = {
  id: 'id',
  cart_id: 'cart_id',
  variant_products_id: 'variant_products_id',
  quantity: 'quantity',
  created_at: 'created_at'
};

exports.Prisma.CartsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  created_at: 'created_at'
};

exports.Prisma.CategoriesScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  name: 'name',
  iva: 'iva',
  parent_id: 'parent_id',
  created_at: 'created_at'
};

exports.Prisma.Chat_panelsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  created_at: 'created_at'
};

exports.Prisma.Chat_participantsScalarFieldEnum = {
  user_id: 'user_id',
  chat_panel_id: 'chat_panel_id',
  created_at: 'created_at'
};

exports.Prisma.ConfigurationsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  language: 'language',
  timezone: 'timezone'
};

exports.Prisma.DeliveriesScalarFieldEnum = {
  id: 'id',
  order_id: 'order_id',
  delivery_person: 'delivery_person',
  status: 'status',
  start_time: 'start_time',
  end_time: 'end_time',
  notes: 'notes',
  created_at: 'created_at',
  updated_at: 'updated_at',
  latitude: 'latitude',
  longitude: 'longitude'
};

exports.Prisma.Delivery_timelineScalarFieldEnum = {
  id: 'id',
  delivery_id: 'delivery_id',
  status: 'status',
  notes: 'notes',
  created_at: 'created_at',
  latitude: 'latitude',
  longitude: 'longitude'
};

exports.Prisma.DiscountsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  name: 'name',
  type_value: 'type_value',
  applies_to_all: 'applies_to_all',
  start_date: 'start_date',
  end_date: 'end_date',
  status: 'status',
  created_at: 'created_at'
};

exports.Prisma.FilesScalarFieldEnum = {
  id: 'id',
  file_name: 'file_name',
  file_hash: 'file_hash',
  mime_type: 'mime_type',
  file_size: 'file_size',
  url: 'url',
  created_at: 'created_at',
  uploaded_by: 'uploaded_by',
  to_delete: 'to_delete'
};

exports.Prisma.Message_filesScalarFieldEnum = {
  id: 'id',
  message_id: 'message_id',
  file_id: 'file_id',
  sort: 'sort'
};

exports.Prisma.MessagesScalarFieldEnum = {
  id: 'id',
  chat_panel_id: 'chat_panel_id',
  sender_id: 'sender_id',
  reply_to: 'reply_to',
  content: 'content',
  created_at: 'created_at',
  is_read: 'is_read'
};

exports.Prisma.NotificationsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  title: 'title',
  message: 'message',
  type: 'type',
  is_read: 'is_read',
  click_action: 'click_action',
  created_at: 'created_at'
};

exports.Prisma.Order_detailsScalarFieldEnum = {
  id: 'id',
  order_id: 'order_id',
  product_code: 'product_code',
  variant_product_id: 'variant_product_id',
  quantity: 'quantity',
  unit_price: 'unit_price',
  unit_price_iva: 'unit_price_iva',
  subtotal: 'subtotal',
  iva: 'iva',
  discount_applied: 'discount_applied',
  attributes: 'attributes',
  created_at: 'created_at'
};

exports.Prisma.OrdersScalarFieldEnum = {
  id: 'id',
  retailer_id: 'retailer_id',
  wholesaler_id: 'wholesaler_id',
  status: 'status',
  payment_method: 'payment_method',
  shipping_address: 'shipping_address',
  notes: 'notes',
  discount_total: 'discount_total',
  subtotal: 'subtotal',
  total: 'total',
  iva_total: 'iva_total',
  discount_log: 'discount_log',
  estimated_date: 'estimated_date',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ProductsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  name: 'name',
  title: 'title',
  description: 'description',
  iva: 'iva',
  category_id: 'category_id',
  status: 'status',
  created_at: 'created_at',
  product_code: 'product_code'
};

exports.Prisma.Products_filesScalarFieldEnum = {
  id: 'id',
  product_id: 'product_id',
  file_id: 'file_id',
  sort: 'sort'
};

exports.Prisma.User_sessionsScalarFieldEnum = {
  session_id: 'session_id',
  user_id: 'user_id',
  device_name: 'device_name',
  device_finger: 'device_finger',
  user_agent: 'user_agent',
  revoked: 'revoked',
  last_ip: 'last_ip',
  refresh_token: 'refresh_token',
  created_at: 'created_at',
  last_active: 'last_active'
};

exports.Prisma.UsersScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  first_name: 'first_name',
  last_name: 'last_name',
  username: 'username',
  password: 'password',
  email: 'email',
  telephone: 'telephone',
  status: 'status',
  profile: 'profile',
  created_at: 'created_at',
  updated_at: 'updated_at',
  role: 'role',
  cif: 'cif'
};

exports.Prisma.Variant_productsScalarFieldEnum = {
  id: 'id',
  created_at: 'created_at',
  product_id: 'product_id',
  type_sale: 'type_sale',
  price: 'price',
  price_iva: 'price_iva',
  stock: 'stock',
  sort: 'sort',
  attributes: 'attributes',
  status: 'status',
  iva: 'iva',
  product_code: 'product_code'
};

exports.Prisma.DirectionScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  type: 'type',
  direction: 'direction',
  city: 'city',
  province: 'province',
  zip_code: 'zip_code',
  latitude: 'latitude',
  longitude: 'longitude',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Password_reset_tokensScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  token: 'token',
  expires_at: 'expires_at',
  is_used: 'is_used',
  created_at: 'created_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.DeliveryStatus = exports.$Enums.DeliveryStatus = {
  PENDING: 'PENDING',
  IN_PROGRESS: 'IN_PROGRESS',
  COMPLETED: 'COMPLETED'
};

exports.UserStatus = exports.$Enums.UserStatus = {
  INACTIVE: 'INACTIVE',
  ACTIVE: 'ACTIVE',
  PENDING_REVIEW: 'PENDING_REVIEW',
  APPROVED: 'APPROVED',
  BANNED: 'BANNED'
};

exports.UserRole = exports.$Enums.UserRole = {
  WHOLESALER: 'WHOLESALER',
  RETAILER: 'RETAILER',
  SUPPORT: 'SUPPORT',
  DELIVERY: 'DELIVERY',
  WAREHOUSE: 'WAREHOUSE',
  ADMIN: 'ADMIN',
  SUPERADMIN: 'SUPERADMIN'
};

exports.AddressType = exports.$Enums.AddressType = {
  DELIVERY: 'DELIVERY',
  INVOICE: 'INVOICE',
  STORE: 'STORE'
};

exports.Prisma.ModelName = {
  cart_details: 'cart_details',
  carts: 'carts',
  categories: 'categories',
  chat_panels: 'chat_panels',
  chat_participants: 'chat_participants',
  configurations: 'configurations',
  deliveries: 'deliveries',
  delivery_timeline: 'delivery_timeline',
  discounts: 'discounts',
  files: 'files',
  message_files: 'message_files',
  messages: 'messages',
  notifications: 'notifications',
  order_details: 'order_details',
  orders: 'orders',
  products: 'products',
  products_files: 'products_files',
  user_sessions: 'user_sessions',
  users: 'users',
  variant_products: 'variant_products',
  direction: 'direction',
  password_reset_tokens: 'password_reset_tokens'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
