generator client {
  provider        = "prisma-client-js"
  output          = "../prisma/generated/prisma"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  schemas   = ["auth", "public"]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model audit_log_entries {
  instance_id String?   @db.Uuid
  id          String    @id @db.Uuid
  payload     Json?     @db.Json
  created_at  DateTime? @db.Timestamptz(6)
  ip_address  String    @default("") @db.VarChar(64)

  @@index([instance_id], map: "audit_logs_instance_id_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model flow_state {
  id                     String                @id @db.Uuid
  user_id                String?               @db.Uuid
  auth_code              String
  code_challenge_method  code_challenge_method
  code_challenge         String
  provider_type          String
  provider_access_token  String?
  provider_refresh_token String?
  created_at             DateTime?             @db.Timestamptz(6)
  updated_at             DateTime?             @db.Timestamptz(6)
  authentication_method  String
  auth_code_issued_at    DateTime?             @db.Timestamptz(6)
  saml_relay_states      saml_relay_states[]

  @@index([created_at(sort: Desc)])
  @@index([auth_code], map: "idx_auth_code")
  @@index([user_id, authentication_method], map: "idx_user_id_auth_method")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model identities {
  provider_id     String
  user_id         String     @db.Uuid
  identity_data   Json
  provider        String
  last_sign_in_at DateTime?  @db.Timestamptz(6)
  created_at      DateTime?  @db.Timestamptz(6)
  updated_at      DateTime?  @db.Timestamptz(6)
  email           String?    @default(dbgenerated("lower((identity_data ->> 'email'::text))"))
  id              String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  users           auth_users @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([provider_id, provider], map: "identities_provider_id_provider_unique")
  @@index([email])
  @@index([user_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model instances {
  id              String    @id @db.Uuid
  uuid            String?   @db.Uuid
  raw_base_config String?
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_amr_claims {
  session_id            String   @db.Uuid
  created_at            DateTime @db.Timestamptz(6)
  updated_at            DateTime @db.Timestamptz(6)
  authentication_method String
  id                    String   @id(map: "amr_id_pk") @db.Uuid
  sessions              sessions @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([session_id, authentication_method], map: "mfa_amr_claims_session_id_authentication_method_pkey")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_challenges {
  id                     String      @id @db.Uuid
  factor_id              String      @db.Uuid
  created_at             DateTime    @db.Timestamptz(6)
  verified_at            DateTime?   @db.Timestamptz(6)
  ip_address             String      @db.Inet
  otp_code               String?
  web_authn_session_data Json?
  mfa_factors            mfa_factors @relation(fields: [factor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "mfa_challenges_auth_factor_id_fkey")

  @@index([created_at(sort: Desc)], map: "mfa_challenge_created_at_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_factors {
  id                   String           @id @db.Uuid
  user_id              String           @db.Uuid
  friendly_name        String?
  factor_type          factor_type
  status               factor_status
  created_at           DateTime         @db.Timestamptz(6)
  updated_at           DateTime         @db.Timestamptz(6)
  secret               String?
  phone                String?
  last_challenged_at   DateTime?        @unique @db.Timestamptz(6)
  web_authn_credential Json?
  web_authn_aaguid     String?          @db.Uuid
  mfa_challenges       mfa_challenges[]
  users                auth_users       @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, phone], map: "unique_phone_factor_per_user")
  @@index([user_id, created_at], map: "factor_id_created_at_idx")
  @@index([user_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model one_time_tokens {
  id         String              @id @db.Uuid
  user_id    String              @db.Uuid
  token_type one_time_token_type
  token_hash String
  relates_to String
  created_at DateTime            @default(now()) @db.Timestamp(6)
  updated_at DateTime            @default(now()) @db.Timestamp(6)
  users      auth_users          @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, token_type])
  @@index([relates_to], map: "one_time_tokens_relates_to_hash_idx", type: Hash)
  @@index([token_hash], map: "one_time_tokens_token_hash_hash_idx", type: Hash)
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model auth_refresh_tokens {
  instance_id String?   @db.Uuid
  id          BigInt    @id @default(autoincrement())
  token       String?   @unique(map: "refresh_tokens_token_unique") @db.VarChar(255)
  user_id     String?   @db.VarChar(255)
  revoked     Boolean?
  created_at  DateTime? @db.Timestamptz(6)
  updated_at  DateTime? @db.Timestamptz(6)
  parent      String?   @db.VarChar(255)
  session_id  String?   @db.Uuid
  sessions    sessions? @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([instance_id])
  @@index([instance_id, user_id])
  @@index([updated_at(sort: Desc)])
  @@index([parent])
  @@index([session_id, revoked])
  @@map("refresh_tokens")
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model saml_providers {
  id                String        @id @db.Uuid
  sso_provider_id   String        @db.Uuid
  entity_id         String        @unique
  metadata_xml      String
  metadata_url      String?
  attribute_mapping Json?
  created_at        DateTime?     @db.Timestamptz(6)
  updated_at        DateTime?     @db.Timestamptz(6)
  name_id_format    String?
  sso_providers     sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model saml_relay_states {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  request_id      String
  for_email       String?
  redirect_to     String?
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  flow_state_id   String?       @db.Uuid
  flow_state      flow_state?   @relation(fields: [flow_state_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at(sort: Desc)])
  @@index([for_email])
  @@index([sso_provider_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model schema_migrations {
  version String @id @db.VarChar(255)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sessions {
  id             String                @id @db.Uuid
  user_id        String                @db.Uuid
  created_at     DateTime?             @db.Timestamptz(6)
  updated_at     DateTime?             @db.Timestamptz(6)
  factor_id      String?               @db.Uuid
  aal            aal_level?
  not_after      DateTime?             @db.Timestamptz(6)
  refreshed_at   DateTime?             @db.Timestamp(6)
  user_agent     String?
  ip             String?               @db.Inet
  tag            String?
  mfa_amr_claims mfa_amr_claims[]
  refresh_tokens auth_refresh_tokens[]
  users          auth_users            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([not_after(sort: Desc)])
  @@index([user_id])
  @@index([user_id, created_at], map: "user_id_created_at_idx")
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_domains {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  domain          String
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_providers {
  id                String              @id @db.Uuid
  resource_id       String?
  created_at        DateTime?           @db.Timestamptz(6)
  updated_at        DateTime?           @db.Timestamptz(6)
  saml_providers    saml_providers[]
  saml_relay_states saml_relay_states[]
  sso_domains       sso_domains[]

  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model auth_users {
  instance_id                 String?           @db.Uuid
  id                          String            @id @db.Uuid
  aud                         String?           @db.VarChar(255)
  role                        String?           @db.VarChar(255)
  email                       String?           @db.VarChar(255)
  encrypted_password          String?           @db.VarChar(255)
  email_confirmed_at          DateTime?         @db.Timestamptz(6)
  invited_at                  DateTime?         @db.Timestamptz(6)
  confirmation_token          String?           @db.VarChar(255)
  confirmation_sent_at        DateTime?         @db.Timestamptz(6)
  recovery_token              String?           @db.VarChar(255)
  recovery_sent_at            DateTime?         @db.Timestamptz(6)
  email_change_token_new      String?           @db.VarChar(255)
  email_change                String?           @db.VarChar(255)
  email_change_sent_at        DateTime?         @db.Timestamptz(6)
  last_sign_in_at             DateTime?         @db.Timestamptz(6)
  raw_app_meta_data           Json?
  raw_user_meta_data          Json?
  is_super_admin              Boolean?
  created_at                  DateTime?         @db.Timestamptz(6)
  updated_at                  DateTime?         @db.Timestamptz(6)
  phone                       String?           @unique
  phone_confirmed_at          DateTime?         @db.Timestamptz(6)
  phone_change                String?           @default("")
  phone_change_token          String?           @default("") @db.VarChar(255)
  phone_change_sent_at        DateTime?         @db.Timestamptz(6)
  confirmed_at                DateTime?         @default(dbgenerated("LEAST(email_confirmed_at, phone_confirmed_at)")) @db.Timestamptz(6)
  email_change_token_current  String?           @default("") @db.VarChar(255)
  email_change_confirm_status Int?              @default(0) @db.SmallInt
  banned_until                DateTime?         @db.Timestamptz(6)
  reauthentication_token      String?           @default("") @db.VarChar(255)
  reauthentication_sent_at    DateTime?         @db.Timestamptz(6)
  is_sso_user                 Boolean           @default(false)
  deleted_at                  DateTime?         @db.Timestamptz(6)
  is_anonymous                Boolean           @default(false)
  identities                  identities[]
  mfa_factors                 mfa_factors[]
  one_time_tokens             one_time_tokens[]
  sessions                    sessions[]
  users                       public_users?

  @@index([instance_id])
  @@index([is_anonymous])
  @@map("users")
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model cart_details {
  id                  BigInt            @id @default(autoincrement())
  cart_id             BigInt
  variant_products_id BigInt?
  quantity            Int               @db.SmallInt
  created_at          DateTime          @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamp(6)
  carts               carts             @relation(fields: [cart_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  variant_products    variant_products? @relation(fields: [variant_products_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model carts {
  id           BigInt         @id(map: "cart_pkey") @default(autoincrement())
  user_id      String         @db.Uuid
  created_at   DateTime       @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamp(6)
  cart_details cart_details[]
  users        public_users   @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model categories {
  id               BigInt        @id @default(autoincrement())
  user_id          String?       @db.Uuid
  name             String        @db.VarChar(50)
  iva              Decimal?      @db.Decimal(5, 2)
  parent_id        BigInt?
  created_at       DateTime      @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamp(6)
  categories       categories?   @relation("categoriesTocategories", fields: [parent_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  other_categories categories[]  @relation("categoriesTocategories")
  users            public_users? @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  products         products[]

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model chat_panels {
  id                BigInt              @id(map: "chat_panel_pkey") @default(autoincrement())
  name              String              @db.VarChar(50)
  created_at        DateTime            @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamp(6)
  chat_participants chat_participants[]
  messages          messages[]

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model chat_participants {
  user_id       String       @db.Uuid
  chat_panel_id BigInt
  created_at    DateTime?    @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamp(6)
  chat_panels   chat_panels  @relation(fields: [chat_panel_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users         public_users @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([chat_panel_id, user_id])
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model configurations {
  id       BigInt       @id @default(autoincrement())
  user_id  String       @db.Uuid
  language String       @default("en") @db.VarChar(10)
  timezone String       @default("UTC") @db.VarChar(32)
  users    public_users @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model deliveries {
  id                BigInt              @id @default(autoincrement())
  order_id          BigInt
  delivery_person   String              @db.Uuid
  status            Int                 @default(0) @db.SmallInt
  start_time        DateTime            @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamp(6)
  end_time          DateTime?           @db.Timestamp(6)
  notes             String
  created_at        DateTime            @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamp(6)
  updated_at        DateTime?           @db.Timestamp(6)
  latitude          Float
  longitude         Float
  users             public_users        @relation(fields: [delivery_person], references: [id], onDelete: SetNull, onUpdate: NoAction)
  delivery_timeline delivery_timeline[]

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model delivery_timeline {
  id          BigInt      @id @default(autoincrement())
  delivery_id BigInt?
  status      Int         @db.SmallInt
  notes       String?
  created_at  DateTime    @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamp(6)
  latitude    Float
  longitude   Float
  deliveries  deliveries? @relation(fields: [delivery_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model direcction {
  id         BigInt       @id @default(autoincrement())
  user_id    String       @db.Uuid
  type       Int          @db.SmallInt
  direction  String       @db.VarChar(200)
  city       String       @db.VarChar(50)
  province   String       @db.VarChar(80)
  zip_code   String       @db.VarChar(10)
  latitude   Float
  longitude  Float
  created_at DateTime     @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamp(6)
  updated_at DateTime?    @db.Timestamp(6)
  users      public_users @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  orders     orders[]

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model discounts {
  id             BigInt       @id @default(autoincrement())
  user_id        String       @db.Uuid
  name           String       @db.VarChar
  type_value     Json
  applies_to_all Boolean      @default(false)
  start_date     DateTime     @db.Date
  end_date       DateTime     @db.Date
  status         Int          @default(1) @db.SmallInt
  created_at     DateTime     @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamp(6)
  users          public_users @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model files {
  id             BigInt           @id @default(autoincrement())
  file_name      String           @db.VarChar
  file_hash      String           @unique @db.VarChar(64)
  mime_type      String           @db.VarChar(128)
  file_size      BigInt
  url            String
  created_at     DateTime         @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamp(6)
  uploaded_by    BigInt           @default(-1)
  to_delete      Boolean          @default(false)
  message_files  message_files[]
  products_files products_files[]

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model message_files {
  id         BigInt   @id @default(autoincrement())
  message_id BigInt
  file_id    BigInt
  sort       Int      @db.SmallInt
  files      files    @relation(fields: [file_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  messages   messages @relation(fields: [message_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model messages {
  id             BigInt          @id @default(autoincrement())
  chat_panel_id  BigInt
  sender_id      String?         @default(dbgenerated("'00000000-0000-0000-0000-000000000000'::uuid")) @db.Uuid
  reply_to       BigInt?         @default(-1)
  content        String?
  created_at     DateTime        @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamp(6)
  is_read        Boolean         @default(false)
  message_files  message_files[]
  chat_panels    chat_panels     @relation(fields: [chat_panel_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  messages       messages?       @relation("messagesTomessages", fields: [reply_to], references: [id], onDelete: SetDefault, onUpdate: NoAction)
  other_messages messages[]      @relation("messagesTomessages")
  users          public_users?   @relation(fields: [sender_id], references: [id], onDelete: SetDefault, onUpdate: NoAction)

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model notifications {
  id           BigInt       @id @default(autoincrement())
  user_id      String       @db.Uuid
  title        String       @db.VarChar(100)
  message      String
  type         Int          @db.SmallInt
  is_read      Boolean      @default(false)
  click_action String       @db.VarChar(255)
  created_at   DateTime     @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamp(6)
  users        public_users @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model order_details {
  id                 BigInt           @id @default(autoincrement())
  order_id           BigInt
  product_code       String           @db.VarChar(50)
  variant_product_id BigInt
  quantity           Int              @db.SmallInt
  unit_price         Decimal          @db.Decimal(10, 2)
  unit_price_iva     Decimal          @db.Decimal(10, 2)
  subtotal           Decimal          @db.Decimal(12, 2)
  iva                Decimal          @db.Decimal(10, 2)
  discount_applied   Decimal          @db.Decimal(10, 2)
  attributes         Json
  created_at         DateTime         @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamp(6)
  orders             orders           @relation(fields: [order_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  variant_products   variant_products @relation(fields: [variant_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model orders {
  id                                BigInt          @id @default(autoincrement())
  retailer_id                       String?         @db.Uuid
  wholesaler_id                     String?         @db.Uuid
  status                            Int             @default(1) @db.SmallInt
  payment_method                    Int             @db.SmallInt
  shipping_address                  BigInt?
  notes                             String?         @db.VarChar(500)
  discount_total                    Decimal         @db.Decimal(12, 2)
  subtotal                          Decimal         @db.Decimal(12, 2)
  total                             Decimal         @db.Decimal(12, 2)
  iva_total                         Decimal         @db.Decimal(12, 2)
  discount_log                      Json
  estimated_date                    DateTime?       @db.Timestamp(6)
  created_at                        DateTime        @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamp(6)
  updated_at                        DateTime?       @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamp(6)
  order_details                     order_details[]
  users_orders_retailer_idTousers   public_users?   @relation("orders_retailer_idTousers", fields: [retailer_id], references: [id], onUpdate: NoAction)
  direcction                        direcction?     @relation(fields: [shipping_address], references: [id], onUpdate: NoAction)
  users_orders_wholesaler_idTousers public_users?   @relation("orders_wholesaler_idTousers", fields: [wholesaler_id], references: [id], onUpdate: NoAction)

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model products {
  id               BigInt             @id @default(autoincrement())
  user_id          String             @db.Uuid
  name             String             @db.VarChar(50)
  title            String?            @db.VarChar(100)
  description      String?
  iva              Decimal            @db.Decimal(5, 2)
  category_id      BigInt
  status           Int                @default(1) @db.SmallInt
  created_at       DateTime           @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamp(6)
  product_code     String             @db.VarChar(50)
  categories       categories         @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users            public_users       @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  products_files   products_files[]
  variant_products variant_products[]

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model products_files {
  id         BigInt   @id @default(autoincrement())
  product_id BigInt
  file_id    BigInt
  sort       Int      @db.SmallInt
  files      files    @relation(fields: [file_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  products   products @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model public_users {
  id                                 String              @id @db.Uuid
  user_id                            String?
  first_name                         String?             @db.VarChar(50)
  last_name                          String?             @db.VarChar(60)
  username                           String?             @unique @db.VarChar(30)
  password                           String
  email                              String?             @unique @db.VarChar(255)
  telephone                          String?             @unique @db.VarChar(15)
  status                             Int                 @default(0) @db.SmallInt
  profile                            Json?
  created_at                         DateTime            @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamp(6)
  updated_at                         DateTime?           @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamp(6)
  role                               Int                 @db.SmallInt
  cif                                String?             @db.VarChar(9)
  carts                              carts[]
  categories                         categories[]
  chat_participants                  chat_participants[]
  configurations                     configurations[]
  deliveries                         deliveries[]
  direcction                         direcction[]
  discounts                          discounts[]
  messages                           messages[]
  notifications                      notifications[]
  orders_orders_retailer_idTousers   orders[]            @relation("orders_retailer_idTousers")
  orders_orders_wholesaler_idTousers orders[]            @relation("orders_wholesaler_idTousers")
  products                           products[]
  user_sessions                      user_sessions[]
  users                              auth_users          @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "users_auth_id_fkey")

  @@map("users")
  @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model variant_products {
  id            BigInt          @id @default(autoincrement())
  created_at    DateTime        @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamp(6)
  product_id    BigInt
  type_sale     Int             @db.SmallInt
  price         Decimal         @db.Decimal(10, 2)
  price_iva     Decimal         @db.Decimal(10, 2)
  stock         Int
  sort          Int             @db.SmallInt
  attributes    Json?
  status        Int             @db.SmallInt
  iva           Decimal         @db.Decimal(5, 2)
  product_code  String          @db.VarChar(50)
  cart_details  cart_details[]
  order_details order_details[]
  products      products        @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model user_sessions {
  token_id      String       @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id       String       @db.Uuid
  device_name   String       @db.VarChar(150)
  device_finger String       @db.VarChar(255)
  user_agent    String
  revoked       Boolean      @default(false)
  last_ip       String       @db.VarChar(50)
  access_token  String
  refresh_token String
  created_at    DateTime     @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamp(6)
  last_active   DateTime     @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamp(6)
  users         public_users @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_user_sessions_user_id")

  @@unique([user_id, device_finger], map: "unique_device_finger_user")
  @@schema("public")
}

enum aal_level {
  aal1
  aal2
  aal3

  @@schema("auth")
}

enum code_challenge_method {
  s256
  plain

  @@schema("auth")
}

enum factor_status {
  unverified
  verified

  @@schema("auth")
}

enum factor_type {
  totp
  webauthn
  phone

  @@schema("auth")
}

enum one_time_token_type {
  confirmation_token
  reauthentication_token
  recovery_token
  email_change_token_new
  email_change_token_current
  phone_change_token

  @@schema("auth")
}
