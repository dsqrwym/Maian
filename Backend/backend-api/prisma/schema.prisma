generator client {
  provider = "prisma-client-js"
  output   = "../prisma/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model cart_details {
  id                  BigInt            @id @default(autoincrement())
  cart_id             BigInt
  variant_products_id BigInt?
  quantity            Int               @db.SmallInt
  created_at          DateTime          @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamp(6)
  carts               carts             @relation(fields: [cart_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  variant_products    variant_products? @relation(fields: [variant_products_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model carts {
  id           BigInt         @id(map: "cart_pkey") @default(autoincrement())
  user_id      String         @db.Uuid
  created_at   DateTime       @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamp(6)
  cart_details cart_details[]
  users        users          @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model categories {
  id               BigInt       @id @default(autoincrement())
  user_id          String?      @db.Uuid
  name             String       @db.VarChar(50)
  iva              Decimal?     @db.Decimal(5, 2)
  parent_id        BigInt?
  created_at       DateTime     @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamp(6)
  categories       categories?  @relation("categoriesTocategories", fields: [parent_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  other_categories categories[] @relation("categoriesTocategories")
  users            users?       @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  products         products[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model chat_panels {
  id                BigInt              @id(map: "chat_panel_pkey") @default(autoincrement())
  name              String              @db.VarChar(50)
  created_at        DateTime            @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamp(6)
  chat_participants chat_participants[]
  messages          messages[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model chat_participants {
  user_id       String      @db.Uuid
  chat_panel_id BigInt
  created_at    DateTime?   @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamp(6)
  chat_panels   chat_panels @relation(fields: [chat_panel_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users         users       @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([chat_panel_id, user_id])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model configurations {
  id       BigInt @id @default(autoincrement())
  user_id  String @db.Uuid
  language String @default("en") @db.VarChar(10)
  timezone String @default("UTC") @db.VarChar(32)
  users    users  @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model deliveries {
  id                BigInt              @id @default(autoincrement())
  order_id          BigInt
  delivery_person   String              @db.Uuid
  status            DeliveryStatus      @default(PENDING)
  start_time        DateTime            @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamp(6)
  end_time          DateTime?           @db.Timestamp(6)
  notes             String
  created_at        DateTime            @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamp(6)
  updated_at        DateTime?           @db.Timestamp(6)
  latitude          Float
  longitude         Float
  users             users               @relation(fields: [delivery_person], references: [id], onDelete: SetNull, onUpdate: NoAction)
  delivery_timeline delivery_timeline[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model delivery_timeline {
  id          BigInt         @id @default(autoincrement())
  delivery_id BigInt?
  status      DeliveryStatus
  notes       String?
  created_at  DateTime       @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamp(6)
  latitude    Float
  longitude   Float
  deliveries  deliveries?    @relation(fields: [delivery_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model discounts {
  id             BigInt   @id @default(autoincrement())
  user_id        String   @db.Uuid
  name           String   @db.VarChar
  type_value     Json
  applies_to_all Boolean  @default(false)
  start_date     DateTime @db.Date
  end_date       DateTime @db.Date
  status         Int      @default(1) @db.SmallInt
  created_at     DateTime @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamp(6)
  users          users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model files {
  id             BigInt           @id @default(autoincrement())
  file_name      String           @db.VarChar
  file_hash      String           @unique @db.VarChar(64)
  mime_type      String           @db.VarChar(128)
  file_size      BigInt
  url            String
  created_at     DateTime         @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamp(6)
  uploaded_by    BigInt           @default(-1)
  to_delete      Boolean          @default(false)
  message_files  message_files[]
  products_files products_files[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model message_files {
  id         BigInt   @id @default(autoincrement())
  message_id BigInt
  file_id    BigInt
  sort       Int      @db.SmallInt
  files      files    @relation(fields: [file_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  messages   messages @relation(fields: [message_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model messages {
  id             BigInt          @id @default(autoincrement())
  chat_panel_id  BigInt
  sender_id      String?         @default(dbgenerated("'00000000-0000-0000-0000-000000000000'::uuid")) @db.Uuid
  reply_to       BigInt?         @default(-1)
  content        String?
  created_at     DateTime        @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamp(6)
  is_read        Boolean         @default(false)
  message_files  message_files[]
  chat_panels    chat_panels     @relation(fields: [chat_panel_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  messages       messages?       @relation("messagesTomessages", fields: [reply_to], references: [id], onDelete: SetDefault, onUpdate: NoAction)
  other_messages messages[]      @relation("messagesTomessages")
  users          users?          @relation(fields: [sender_id], references: [id], onDelete: SetDefault, onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model notifications {
  id           BigInt   @id @default(autoincrement())
  user_id      String   @db.Uuid
  title        String   @db.VarChar(100)
  message      String
  type         Int      @db.SmallInt
  is_read      Boolean  @default(false)
  click_action String   @db.VarChar(255)
  created_at   DateTime @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamp(6)
  users        users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model order_details {
  id                 BigInt           @id @default(autoincrement())
  order_id           BigInt
  product_code       String           @db.VarChar(50)
  variant_product_id BigInt
  quantity           Int              @db.SmallInt
  unit_price         Decimal          @db.Decimal(10, 2)
  unit_price_iva     Decimal          @db.Decimal(10, 2)
  subtotal           Decimal          @db.Decimal(12, 2)
  iva                Decimal          @db.Decimal(10, 2)
  discount_applied   Decimal          @db.Decimal(10, 2)
  attributes         Json
  created_at         DateTime         @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamp(6)
  orders             orders           @relation(fields: [order_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  variant_products   variant_products @relation(fields: [variant_product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model orders {
  id                                BigInt          @id @default(autoincrement())
  retailer_id                       String?         @db.Uuid
  wholesaler_id                     String?         @db.Uuid
  status                            Int             @default(1) @db.SmallInt
  payment_method                    Int             @db.SmallInt
  shipping_address                  BigInt?
  notes                             String?         @db.VarChar(500)
  discount_total                    Decimal         @db.Decimal(12, 2)
  subtotal                          Decimal         @db.Decimal(12, 2)
  total                             Decimal         @db.Decimal(12, 2)
  iva_total                         Decimal         @db.Decimal(12, 2)
  discount_log                      Json
  estimated_date                    DateTime?       @db.Timestamp(6)
  created_at                        DateTime        @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamp(6)
  updated_at                        DateTime?       @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamp(6)
  order_details                     order_details[]
  users_orders_retailer_idTousers   users?          @relation("orders_retailer_idTousers", fields: [retailer_id], references: [id], onUpdate: NoAction)
  direcction                        direction?      @relation(fields: [shipping_address], references: [id], onUpdate: NoAction)
  users_orders_wholesaler_idTousers users?          @relation("orders_wholesaler_idTousers", fields: [wholesaler_id], references: [id], onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model products {
  id               BigInt             @id @default(autoincrement())
  user_id          String             @db.Uuid
  name             String             @db.VarChar(50)
  title            String?            @db.VarChar(100)
  description      String?
  iva              Decimal            @db.Decimal(5, 2)
  category_id      BigInt
  status           Int                @default(1) @db.SmallInt
  created_at       DateTime           @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamp(6)
  product_code     String             @db.VarChar(50)
  categories       categories         @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users            users              @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  products_files   products_files[]
  variant_products variant_products[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model products_files {
  id         BigInt   @id @default(autoincrement())
  product_id BigInt
  file_id    BigInt
  sort       Int      @db.SmallInt
  files      files    @relation(fields: [file_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  products   products @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model user_sessions {
  session_id    String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id       String   @db.Uuid
  device_name   String   @db.VarChar(150)
  device_finger String   @db.VarChar(255)
  user_agent    String
  revoked       Boolean  @default(false)
  last_ip       String   @db.VarChar(50)
  access_token  String?
  refresh_token String?
  created_at    DateTime @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamp(6)
  last_active   DateTime @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamp(6)
  users         users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_user_sessions_user_id")

  @@unique([user_id, device_finger], map: "unique_device_finger_user")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model users {
  id                                 String              @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id                            String?
  first_name                         String?             @db.VarChar(50)
  last_name                          String?             @db.VarChar(60)
  username                           String?             @unique @db.VarChar(30)
  password                           String
  email                              String?             @unique @db.VarChar(255)
  telephone                          String?             @unique @db.VarChar(15)
  status                             UserStatus          @default(INACTIVE)
  profile                            Json?
  created_at                         DateTime            @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamp(6)
  updated_at                         DateTime?           @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamp(6)
  role                               UserRole
  cif                                String?             @db.VarChar(9)
  carts                              carts[]
  categories                         categories[]
  chat_participants                  chat_participants[]
  configurations                     configurations[]
  deliveries                         deliveries[]
  direction                          direction[]
  discounts                          discounts[]
  messages                           messages[]
  notifications                      notifications[]
  orders_orders_retailer_idTousers   orders[]            @relation("orders_retailer_idTousers")
  orders_orders_wholesaler_idTousers orders[]            @relation("orders_wholesaler_idTousers")
  products                           products[]
  user_sessions                      user_sessions[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model variant_products {
  id            BigInt          @id @default(autoincrement())
  created_at    DateTime        @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamp(6)
  product_id    BigInt
  type_sale     Int             @db.SmallInt
  price         Decimal         @db.Decimal(10, 2)
  price_iva     Decimal         @db.Decimal(10, 2)
  stock         Int
  sort          Int             @db.SmallInt
  attributes    Json?
  status        Int             @db.SmallInt
  iva           Decimal         @db.Decimal(5, 2)
  product_code  String          @db.VarChar(50)
  cart_details  cart_details[]
  order_details order_details[]
  products      products        @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model direction {
  id         BigInt      @id(map: "direcction_pkey") @default(autoincrement())
  user_id    String      @db.Uuid
  type       AddressType
  direction  String      @db.VarChar(200)
  city       String      @db.VarChar(50)
  province   String      @db.VarChar(80)
  zip_code   String      @db.VarChar(10)
  latitude   Float
  longitude  Float
  created_at DateTime    @default(dbgenerated("(now() AT TIME ZONE 'utc'::text)")) @db.Timestamp(6)
  updated_at DateTime?   @db.Timestamp(6)
  users      users       @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "direcction_user_id_fkey")
  orders     orders[]
}

enum AddressType {
  DELIVERY
  INVOICE
  STORE
}

enum DeliveryStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
}

enum UserRole {
  WHOLESALER
  RETAILER
  SUPPORT
  DELIVERY
  WAREHOUSE
}

enum UserStatus {
  INACTIVE
  ACTIVE   @map(" ACTIVE")
  BANNED
}
